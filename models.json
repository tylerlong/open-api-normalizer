[
  {
    "name": "Attachment",
    "description": "Attachment is a file to be uploaded",
    "required": [
      "content"
    ],
    "properties": {
      "filename": {
        "type": "string",
        "description": "Filename with extension, such as \"image.png\""
      },
      "content": {
        "type": "string",
        "format": "binary",
        "description": "Binary content of the file"
      },
      "contentType": {
        "type": "string",
        "description": "Content type of the file, such as \"image/png\""
      }
    }
  },
  {
    "name": "ReadDeviceParameters",
    "description": "Query parameters for operation readDevice",
    "properties": {
      "syncEmergencyAddress": {
        "description": "Specifies if an emergency address should be synchronized or not",
        "type": "boolean",
        "default": false
      }
    }
  },
  {
    "name": "UpdateDeviceParameters",
    "description": "Query parameters for operation updateDevice",
    "properties": {
      "prestatement": {
        "type": "boolean"
      }
    }
  },
  {
    "name": "ListCallRecordingCustomGreetingsParameters",
    "description": "Query parameters for operation listCallRecordingCustomGreetings",
    "properties": {
      "type": {
        "type": "string",
        "enum": [
          "StartRecording",
          "StopRecording",
          "AutomaticRecording"
        ]
      }
    }
  },
  {
    "name": "ReadCallSessionStatusParameters",
    "description": "Query parameters for operation readCallSessionStatus",
    "properties": {
      "timestamp": {
        "description": "The date and time of a call session latest change",
        "type": "string"
      },
      "timeout": {
        "description": "The time frame of awaiting for a status change before sending the resulting one in response",
        "type": "string"
      }
    }
  },
  {
    "name": "PauseResumeCallRecordingParameters",
    "description": "Query parameters for operation pauseResumeCallRecording",
    "properties": {
      "brandId": {
        "description": "Identifies a brand of a logged in user or a brand of a sign-up session",
        "required": true,
        "type": "string",
        "default": "~"
      }
    }
  },
  {
    "name": "ReadCompanyCallLogParameters",
    "description": "Query parameters for operation readCompanyCallLog",
    "properties": {
      "extensionNumber": {
        "description": "Short extension number of a user. If specified, returns call log for this particular extension only.\nCannot be combined with `phoneNumber` filter\n",
        "example": "101",
        "type": "string"
      },
      "phoneNumber": {
        "description": "Phone number of a caller/callee in e.164 format without a '+' sign. If specified, all incoming/outgoing calls\nfrom/to this phone number are returned.\n",
        "example": "12053320032",
        "type": "string"
      },
      "direction": {
        "description": "The direction of call records to be included in the result. If omitted, both\ninbound and outbound calls are returned. Multiple values are supported\n",
        "style": "form",
        "explode": true,
        "type": "array",
        "items": {
          "description": "The direction of a call",
          "type": "string",
          "enum": [
            "Inbound",
            "Outbound"
          ]
        }
      },
      "type": {
        "description": "The type of call records to be included in the result.\nIf omitted, all call types are returned. Multiple values are supported\n",
        "style": "form",
        "explode": true,
        "type": "array",
        "items": {
          "type": "string",
          "description": "The type of a call",
          "enum": [
            "Voice",
            "Fax"
          ]
        }
      },
      "view": {
        "description": "Defines the level of details for returned call records\n",
        "type": "string",
        "default": "Simple",
        "enum": [
          "Simple",
          "Detailed"
        ]
      },
      "withRecording": {
        "deprecated": true,
        "description": "Deprecated, replaced with `recordingType` filter, still supported for compatibility reasons.\nIndicates if only recorded calls should be returned.\n\nIf both `withRecording` and `recordingType` parameters are specified, then `withRecording` is ignored'\n",
        "type": "boolean",
        "default": false
      },
      "recordingType": {
        "description": "Indicates that call records with recordings of particular type should be returned.\nIf omitted, then calls with and without recordings are returned\n",
        "type": "string",
        "enum": [
          "Automatic",
          "OnDemand",
          "All"
        ]
      },
      "dateFrom": {
        "description": "The beginning of the time range to return call records in ISO 8601 format including timezone,\nfor example 2016-03-10T18:07:52.534Z. The default value is `dateTo` minus 24 hours\n",
        "type": "string",
        "format": "date-time"
      },
      "dateTo": {
        "description": "The end of the time range to return call records in ISO 8601 format including timezone,\nfor example 2016-03-10T18:07:52.534Z. The default value is current time\n",
        "type": "string",
        "format": "date-time"
      },
      "sessionId": {
        "description": "Internal identifier of a call session",
        "type": "string"
      },
      "telephonySessionId": {
        "description": "Internal identifier of a telephony session",
        "type": "string"
      },
      "page": {
        "description": "Indicates the page number to retrieve. Only positive number values are accepted",
        "type": "integer",
        "format": "int32",
        "minimum": 1,
        "default": 1
      },
      "perPage": {
        "description": "Indicates the page size (number of items)",
        "type": "integer",
        "format": "int32",
        "minimum": 1,
        "default": 100
      }
    }
  },
  {
    "name": "ReadCompanyCallRecordParameters",
    "description": "Query parameters for operation readCompanyCallRecord",
    "properties": {
      "view": {
        "description": "Defines the level of details for returned call records\n",
        "type": "string",
        "default": "Simple",
        "enum": [
          "Simple",
          "Detailed"
        ]
      }
    }
  },
  {
    "name": "SyncAccountCallLogParameters",
    "description": "Query parameters for operation syncAccountCallLog",
    "properties": {
      "syncType": {
        "description": "Type of call log synchronization request: full or incremental sync",
        "type": "string",
        "enum": [
          "FSync",
          "ISync"
        ]
      },
      "syncToken": {
        "description": "Value of syncToken property of last sync request response",
        "type": "string"
      },
      "dateFrom": {
        "description": "The start datetime for resulting records in ISO 8601 format including timezone, for example 2016-03-10T18:07:52.534Z. The default value is the current moment",
        "type": "string",
        "format": "date-time"
      },
      "recordCount": {
        "description": "For 'FSync' the parameter is mandatory, it limits the number of records to be returned in response. For 'ISync' it specifies with how many records to extend sync frame to the past, the maximum number of records is 250",
        "type": "integer",
        "format": "int32",
        "minimum": 1
      },
      "statusGroup": {
        "description": "Type of calls to be returned.",
        "style": "form",
        "explode": true,
        "type": "array",
        "items": {
          "type": "string",
          "enum": [
            "Missed",
            "All"
          ]
        }
      },
      "view": {
        "description": "Defines the level of details for returned call records\n",
        "type": "string",
        "default": "Simple",
        "enum": [
          "Simple",
          "Detailed"
        ]
      },
      "showDeleted": {
        "description": "Supported for `ISync` mode. Indicates that deleted call records should be returned",
        "type": "boolean",
        "default": false
      }
    }
  },
  {
    "name": "ListCompanyActiveCallsParameters",
    "description": "Query parameters for operation listCompanyActiveCalls",
    "properties": {
      "direction": {
        "description": "The direction of call records to be included in the result. If omitted, both\ninbound and outbound calls are returned. Multiple values are supported\n",
        "style": "form",
        "explode": true,
        "type": "array",
        "items": {
          "description": "The direction of a call",
          "type": "string",
          "enum": [
            "Inbound",
            "Outbound"
          ]
        }
      },
      "view": {
        "description": "Defines the level of details for returned call records\n",
        "type": "string",
        "default": "Simple",
        "enum": [
          "Simple",
          "Detailed"
        ]
      },
      "type": {
        "description": "The type of call records to be included in the result.\nIf omitted, all call types are returned. Multiple values are supported\n",
        "style": "form",
        "explode": true,
        "type": "array",
        "items": {
          "type": "string",
          "description": "The type of a call",
          "enum": [
            "Voice",
            "Fax"
          ]
        }
      },
      "transport": {
        "description": "The type of call transport. Multiple values are supported. By default this filter is disabled\n",
        "style": "form",
        "explode": true,
        "type": "array",
        "items": {
          "type": "string",
          "description": "The type of a call transport. 'PSTN' indicates that a call leg was initiated\nfrom the PSTN network provider; 'VoIP' - from an RC phone.\n",
          "enum": [
            "PSTN",
            "VoIP"
          ]
        }
      },
      "page": {
        "description": "Indicates the page number to retrieve. Only positive number values are accepted",
        "type": "integer",
        "format": "int32",
        "default": 1,
        "minimum": 1
      },
      "perPage": {
        "description": "Indicates the page size (number of items)",
        "type": "integer",
        "format": "int32",
        "default": 100,
        "minimum": 1
      }
    }
  },
  {
    "name": "ListUserTemplatesParameters",
    "description": "Query parameters for operation listUserTemplates",
    "properties": {
      "type": {
        "description": "Type of a template",
        "type": "string",
        "enum": [
          "UserSettings",
          "CallHandling"
        ]
      },
      "page": {
        "description": "Indicates a page number to retrieve. Only positive number values\nare allowed. Default value is '1'\n",
        "type": "integer",
        "format": "int32",
        "default": 1
      },
      "perPage": {
        "description": "Indicates a page size (number of items). If not specified, the value is '100' by default",
        "type": "integer",
        "format": "int32",
        "default": 100
      }
    }
  },
  {
    "name": "ListCompanyAnsweringRulesParameters",
    "description": "Query parameters for operation listCompanyAnsweringRules",
    "properties": {
      "page": {
        "description": "The result set page number (1-indexed) to return",
        "required": false,
        "explode": false,
        "example": 1,
        "type": "integer",
        "format": "int32",
        "minimum": 1,
        "maximum": 1000,
        "default": 1
      },
      "perPage": {
        "description": "The number of items per page. If provided value in the request\nis greater than a maximum, the maximum value is applied\n",
        "required": false,
        "explode": false,
        "example": 100,
        "type": "integer",
        "format": "int32",
        "minimum": 1,
        "maximum": 1000,
        "default": 100
      }
    }
  },
  {
    "name": "ListA2PSMSParameters",
    "description": "Query parameters for operation listA2PSMS",
    "properties": {
      "batchId": {
        "required": false,
        "description": "Internal identifier of a message batch to filter the response",
        "example": "55577",
        "type": "string"
      },
      "direction": {
        "required": false,
        "description": "Direction of the SMS message",
        "example": "Inbound",
        "type": "string",
        "enum": [
          "Inbound",
          "Outbound"
        ]
      },
      "dateFrom": {
        "required": false,
        "description": "The end of the time range to filter the results in ISO 8601 format including timezone. Default is the 'dateTo' minus 24 hours",
        "example": "2020-11-09T16:07:52.597Z",
        "type": "string",
        "format": "date-time"
      },
      "dateTo": {
        "required": false,
        "description": "The end of the time range to filter the results in ISO 8601 format including timezone. Default is the current time",
        "example": "2020-11-25T16:07:52.597Z",
        "type": "string",
        "format": "date-time"
      },
      "view": {
        "required": false,
        "description": "Indicates if the response has to be detailed, includes text in the response if detailed",
        "type": "string",
        "default": "Simple",
        "enum": [
          "Simple",
          "Detailed"
        ]
      },
      "phoneNumber": {
        "required": false,
        "style": "form",
        "explode": true,
        "description": "List of phone numbers (specified in 'to' or 'from' fields of a message) to filter the results. Maximum number of phone numbers allowed to be specified as filters is 15",
        "example": [
          "15551234455",
          "15551235577"
        ],
        "type": "array",
        "items": {
          "type": "string"
        }
      },
      "pageToken": {
        "required": false,
        "description": "The page token of the page to be retrieved.",
        "example": "pgt1",
        "type": "string"
      },
      "perPage": {
        "required": false,
        "description": "The number of messages to be returned per request",
        "example": 1,
        "type": "integer",
        "format": "int32",
        "default": 1000
      }
    }
  },
  {
    "name": "AggregateA2PSMSStatusesParameters",
    "description": "Query parameters for operation aggregateA2PSMSStatuses",
    "properties": {
      "batchId": {
        "required": false,
        "description": "Internal identifier of a message batch to filter the response",
        "example": "55577",
        "type": "string"
      },
      "direction": {
        "required": false,
        "description": "Direction of the SMS message",
        "example": "Inbound",
        "type": "string",
        "enum": [
          "Inbound",
          "Outbound"
        ]
      },
      "dateFrom": {
        "required": false,
        "description": "The end of the time range to filter the results in ISO 8601 format including timezone. Default is the 'dateTo' minus 24 hours",
        "example": "2020-11-09T16:07:52.597Z",
        "type": "string",
        "format": "date-time"
      },
      "dateTo": {
        "required": false,
        "description": "The end of the time range to filter the results in ISO 8601 format including timezone. Default is the current time",
        "example": "2020-11-25T16:07:52.597Z",
        "type": "string",
        "format": "date-time"
      },
      "phoneNumber": {
        "required": false,
        "style": "form",
        "explode": true,
        "description": "List of phone numbers (specified in 'to' or 'from' fields of a message) to filter the results. Maximum number of phone numbers allowed to be specified as filters is 15",
        "example": [
          "15551234455",
          "15551235577"
        ],
        "type": "array",
        "items": {
          "type": "string"
        }
      }
    }
  },
  {
    "name": "ReadA2PSMSOptOutsParameters",
    "description": "Query parameters for operation readA2PSMSOptOuts",
    "properties": {
      "from": {
        "required": false,
        "description": "The sender's phone number in [E.164](https://www.itu.int/rec/T-REC-E.164-201011-I) format for filtering messages. The asterisk value \"*\" means any number in `from` field",
        "example": "15551234455",
        "type": "string"
      },
      "to": {
        "required": false,
        "description": "The receiver's phone number (`to` field) in [E.164](https://www.itu.int/rec/T-REC-E.164-201011-I) format for filtering messages",
        "example": "15551237755",
        "type": "string"
      },
      "status": {
        "required": false,
        "description": "The status (opted out, opted in, or both) to be used as the filter",
        "example": "optout",
        "type": "string",
        "default": "optout",
        "enum": [
          "optout",
          "optin",
          "all"
        ]
      },
      "pageToken": {
        "required": false,
        "description": "The page token of the page to be retrieved",
        "example": "pgt1",
        "type": "string"
      },
      "perPage": {
        "required": false,
        "description": "The number of records to be returned for the page",
        "example": 5,
        "type": "integer",
        "format": "int32",
        "default": 1000
      }
    }
  },
  {
    "name": "ListA2PBatchesParameters",
    "description": "Query parameters for operation listA2PBatches",
    "properties": {
      "dateFrom": {
        "required": false,
        "description": "The end of the time range to filter the results in ISO 8601 format including timezone. Default is the 'dateTo' minus 24 hours",
        "example": "2020-11-09T16:07:52.597Z",
        "type": "string",
        "format": "date-time"
      },
      "dateTo": {
        "required": false,
        "description": "The end of the time range to filter the results in ISO 8601 format including timezone. Default is the current time",
        "example": "2020-11-25T16:07:52.597Z",
        "type": "string",
        "format": "date-time"
      },
      "from": {
        "required": false,
        "description": "Phone number in E.164 format from which the messages are going to be sent",
        "example": "15551234455",
        "type": "string"
      },
      "status": {
        "required": false,
        "style": "form",
        "explode": true,
        "description": "A list of batch statuses to filter the results",
        "example": [
          "Queued",
          "Processing"
        ],
        "type": "array",
        "items": {
          "type": "string",
          "enum": [
            "Queued",
            "Processing",
            "Sent",
            "Completed"
          ]
        }
      },
      "pageToken": {
        "required": false,
        "description": "The page token of the page to be retrieved",
        "example": "pgt1",
        "type": "string"
      },
      "perPage": {
        "required": false,
        "description": "The number of records to be returned per page",
        "example": 1,
        "type": "integer",
        "format": "int64"
      }
    }
  },
  {
    "name": "ListEmergencyLocationsParameters",
    "description": "Query parameters for operation listEmergencyLocations",
    "properties": {
      "siteId": {
        "description": "Internal identifier of a site for filtering. To indicate company main\nsite `main-site` value should be specified. Supported only if multi-site feature\nis enabled for the account. Multiple values are supported.\n",
        "style": "form",
        "explode": true,
        "type": "array",
        "items": {
          "type": "string"
        }
      },
      "searchString": {
        "description": "Filters entries containing the specified substring in 'address'\nand 'name' fields. The character range is 0-64; not case-sensitive.\nIf empty then the filter is ignored\n",
        "type": "string",
        "maxLength": 64
      },
      "addressStatus": {
        "type": "string",
        "enum": [
          "Valid",
          "Invalid",
          "Provisioning"
        ]
      },
      "usageStatus": {
        "type": "string",
        "enum": [
          "Active",
          "Inactive"
        ]
      },
      "domesticCountryId": {
        "type": "string"
      },
      "orderBy": {
        "description": "Comma-separated list of fields to order results, prefixed by\nplus sign '+' (ascending order) or minus sign '-' (descending order)\n",
        "type": "string",
        "enum": [
          "+name",
          "+siteName",
          "+address",
          "+addressStatus",
          "+usageStatus",
          "-name",
          "-siteName",
          "-address",
          "-addressStatus",
          "-usageStatus"
        ],
        "default": "+address"
      },
      "perPage": {
        "description": "Indicates a page size (number of items). The values\nsupported: `Max` or numeric value. If not specified,\n100 records are returned per one page\n",
        "type": "integer",
        "format": "int32",
        "default": 100
      },
      "page": {
        "description": "Indicates the page number to retrieve. Only positive number values\nare supported\n",
        "type": "integer",
        "format": "int32",
        "default": 1
      }
    }
  },
  {
    "name": "ReadEmergencyLocationParameters",
    "description": "Query parameters for operation readEmergencyLocation",
    "properties": {
      "syncEmergencyAddress": {
        "type": "boolean"
      }
    }
  },
  {
    "name": "DeleteEmergencyLocationParameters",
    "description": "Query parameters for operation deleteEmergencyLocation",
    "properties": {
      "validateOnly": {
        "description": "Flag indicating that validation of emergency location(s) is required\nbefore deletion\n",
        "required": false,
        "type": "boolean"
      },
      "newLocationId": {
        "description": "Internal identifier of an emergency response location\nthat should be used instead of a deleted one.\n",
        "required": false,
        "type": "string"
      }
    }
  },
  {
    "name": "ListCallQueuesParameters",
    "description": "Query parameters for operation listCallQueues",
    "properties": {
      "page": {
        "description": "Indicates a page number to retrieve. Only positive number values\nare accepted\n",
        "type": "integer",
        "format": "int32",
        "default": 1
      },
      "perPage": {
        "description": "Indicates a page size (number of items)",
        "type": "integer",
        "format": "int32",
        "default": 100
      },
      "memberExtensionId": {
        "description": "Internal identifier of an extension that is a member of every\ngroup within the result\n",
        "type": "string"
      }
    }
  },
  {
    "name": "ListCallQueueMembersParameters",
    "description": "Query parameters for operation listCallQueueMembers",
    "properties": {
      "page": {
        "description": "Indicates a page number to retrieve. Only positive number values\nare allowed\n",
        "type": "integer",
        "format": "int32",
        "default": 1
      },
      "perPage": {
        "description": "Indicates a page size (number of items)",
        "type": "integer",
        "format": "int32",
        "default": 100
      }
    }
  },
  {
    "name": "ReadAccountPresenceParameters",
    "description": "Query parameters for operation readAccountPresence",
    "properties": {
      "detailedTelephonyState": {
        "description": "Whether to return detailed telephony state",
        "type": "boolean"
      },
      "sipData": {
        "description": "Whether to return SIP data",
        "type": "boolean"
      },
      "page": {
        "description": "Page number for account presence information",
        "type": "integer",
        "format": "int32"
      },
      "perPage": {
        "description": "Number for account presence information items per page",
        "type": "integer",
        "format": "int32"
      }
    }
  },
  {
    "name": "ListDepartmentMembersParameters",
    "description": "Query parameters for operation listDepartmentMembers",
    "properties": {
      "page": {
        "description": "Indicates a page number to retrieve. Only positive number values\nare accepted\n",
        "type": "integer",
        "format": "int32",
        "default": 1
      },
      "perPage": {
        "description": "Indicates a page size (number of items)",
        "type": "integer",
        "format": "int32",
        "default": 100
      }
    }
  },
  {
    "name": "ListAccountMeetingRecordingsParameters",
    "description": "Query parameters for operation listAccountMeetingRecordings",
    "properties": {
      "meetingId": {
        "description": "Internal identifier of a meeting. Either `meetingId` or `meetingStartTime`/`meetingEndTime` can be specified",
        "type": "string"
      },
      "meetingStartTimeFrom": {
        "description": "Recordings of meetings started after the time specified will\nbe returned. Either `meetingId` or `meetingStartTime`/`meetingEndTime` can\nbe specified\n",
        "type": "string",
        "format": "date-time"
      },
      "meetingStartTimeTo": {
        "description": "Recordings of meetings started before the time specified will\nbe returned. The default value is current time. Either `meetingId` or `meetingStartTime`/`meetingEndTime`\ncan be specified\n",
        "type": "string",
        "format": "date-time"
      },
      "page": {
        "description": "Page number",
        "type": "integer",
        "format": "int32"
      },
      "perPage": {
        "description": "Number of items per page. The `max` value is supported to indicate the maximum size - 300",
        "maximum": 300,
        "type": "integer",
        "format": "int32",
        "default": 100
      }
    }
  },
  {
    "name": "ListAssignedRolesParameters",
    "description": "Query parameters for operation listAssignedRoles",
    "properties": {
      "showHidden": {
        "description": "Specifies if hidden roles are shown or not",
        "type": "boolean"
      }
    }
  },
  {
    "name": "ListCallMonitoringGroupsParameters",
    "description": "Query parameters for operation listCallMonitoringGroups",
    "properties": {
      "page": {
        "description": "Indicates a page number to retrieve. Only positive number values\nare allowed\n",
        "type": "integer",
        "format": "int32",
        "default": 1
      },
      "perPage": {
        "description": "Indicates a page size (number of items)",
        "type": "integer",
        "format": "int32",
        "default": 100
      },
      "memberExtensionId": {
        "description": "Internal identifier of an extension that is a member of every\ngroup within the result\n",
        "type": "string"
      }
    }
  },
  {
    "name": "ListCallMonitoringGroupMembersParameters",
    "description": "Query parameters for operation listCallMonitoringGroupMembers",
    "properties": {
      "page": {
        "description": "Indicates a page number to retrieve. Only positive number values\nare allowed\n",
        "type": "integer",
        "format": "int32",
        "default": 1
      },
      "perPage": {
        "description": "Indicates a page size (number of items)",
        "type": "integer",
        "format": "int32",
        "default": 100
      }
    }
  },
  {
    "name": "ListDirectoryEntriesParameters",
    "description": "Query parameters for operation listDirectoryEntries",
    "properties": {
      "showFederated": {
        "description": "If 'True' then contacts of all accounts in federation are returned. If 'False' then only contacts of the current account are returned, and account section is eliminated in this case",
        "type": "boolean",
        "default": true
      },
      "type": {
        "description": "Type of an extension. Please note that legacy 'Department' extension type corresponds to 'Call Queue' extensions in modern RingCentral product terminology",
        "type": "string",
        "enum": [
          "User",
          "Department",
          "Announcement",
          "Voicemail",
          "SharedLinesGroup",
          "PagingOnly",
          "IvrMenu",
          "ParkLocation",
          "Limited",
          "External"
        ]
      },
      "typeGroup": {
        "description": "Type of extension group",
        "type": "string",
        "enum": [
          "User",
          "NonUser"
        ]
      },
      "page": {
        "description": "Page number",
        "type": "integer",
        "format": "int32",
        "default": 1
      },
      "perPage": {
        "description": "Records count to be returned per one page. The default value is 1000. Specific keyword values: `all` - all records are returned in one page; `max` - maximum count of records that can be returned in one page",
        "maximum": 2000,
        "type": "integer",
        "format": "int32",
        "default": 1000
      },
      "siteId": {
        "description": "Internal identifier of the business site to which extensions belong",
        "type": "string"
      }
    }
  },
  {
    "name": "SearchDirectoryEntriesParameters",
    "description": "Query parameters for operation searchDirectoryEntries",
    "properties": {
      "accountId": {
        "description": "A list of Account IDs",
        "type": "string",
        "example": "400131426008"
      },
      "department": {
        "description": "A list of department names",
        "type": "string",
        "example": "North office"
      },
      "siteId": {
        "description": "A list of Site IDs",
        "type": "string",
        "example": "872781797006"
      },
      "extensionStatus": {
        "description": "Extension current state",
        "type": "string",
        "example": "Enabled"
      },
      "extensionType": {
        "description": "Extension types",
        "type": "string",
        "example": "User"
      }
    }
  },
  {
    "name": "ReadDirectoryFederationParameters",
    "description": "Query parameters for operation readDirectoryFederation",
    "properties": {
      "types": {
        "description": "Federation types for search",
        "type": "string",
        "enum": [
          "All",
          "Regular",
          "AdminOnly"
        ]
      }
    }
  },
  {
    "name": "ListPagingGroupUsersParameters",
    "description": "Query parameters for operation listPagingGroupUsers",
    "properties": {
      "page": {
        "description": "Indicates a page number to retrieve. Only positive number values\nare accepted\n",
        "type": "integer",
        "format": "int32",
        "default": 1
      },
      "perPage": {
        "description": "Indicates a page size (number of items)",
        "type": "integer",
        "format": "int32",
        "default": 100
      }
    }
  },
  {
    "name": "ListPagingGroupDevicesParameters",
    "description": "Query parameters for operation listPagingGroupDevices",
    "properties": {
      "page": {
        "description": "Indicates a page number to retrieve. Only positive number values\nare accepted\n",
        "type": "integer",
        "format": "int32",
        "default": 1
      },
      "perPage": {
        "description": "Indicates a page size (number of items)\n",
        "type": "integer",
        "format": "int32",
        "default": 100
      }
    }
  },
  {
    "name": "ListUserRolesParameters",
    "description": "Query parameters for operation listUserRoles",
    "properties": {
      "custom": {
        "description": "Specifies whether to return custom roles or predefined roles only.\nIf not specified, all roles are returned\n",
        "type": "boolean"
      },
      "page": {
        "description": "The result set page number (1-indexed) to return",
        "required": false,
        "explode": false,
        "example": 1,
        "type": "integer",
        "format": "int32",
        "minimum": 1,
        "maximum": 1000,
        "default": 1
      },
      "perPage": {
        "description": "The number of items per page. If provided value in the request\nis greater than a maximum, the maximum value is applied\n",
        "required": false,
        "explode": false,
        "example": 100,
        "type": "integer",
        "format": "int32",
        "minimum": 1,
        "maximum": 1000,
        "default": 100
      }
    }
  },
  {
    "name": "DeleteCustomRoleParameters",
    "description": "Query parameters for operation deleteCustomRole",
    "properties": {
      "validateOnly": {
        "description": "Specifies that role should be validated prior to deletion, whether\nit can be deleted or not\n",
        "type": "boolean"
      }
    }
  },
  {
    "name": "ListExtensionsParameters",
    "description": "Query parameters for operation listExtensions",
    "properties": {
      "extensionNumber": {
        "description": "Number of extension to be retrieved",
        "type": "string"
      },
      "email": {
        "description": "Extension email address. Multiple values are accepted\n",
        "example": "alice.smith@example.com&email=bob.johnson@example.com",
        "type": "string"
      },
      "page": {
        "description": "Indicates a page number to retrieve. Only positive number values\nare allowed\n",
        "type": "integer",
        "format": "int32",
        "default": 1
      },
      "perPage": {
        "description": "Indicates a page size (number of items)",
        "type": "integer",
        "format": "int32",
        "default": 100
      },
      "status": {
        "description": "Extension current state. Multiple values are supported. If 'Unassigned'\nis specified, then extensions without `extensionNumber` attribute are returned.\nIf not specified, then all extensions are returned\n",
        "allowEmptyValue": true,
        "style": "form",
        "explode": true,
        "type": "array",
        "items": {
          "type": "string",
          "enum": [
            "Enabled",
            "Disabled",
            "NotActivated",
            "Unassigned"
          ]
        }
      },
      "type": {
        "description": "Extension type. Multiple values are supported. Please note\nthat legacy 'Department' extension type corresponds to 'Call Queue'\nextensions in modern RingCentral product terminology\n",
        "allowEmptyValue": true,
        "style": "form",
        "explode": true,
        "type": "array",
        "items": {
          "type": "string",
          "enum": [
            "User",
            "FaxUser",
            "FlexibleUser",
            "VirtualUser",
            "DigitalUser",
            "Department",
            "Announcement",
            "Voicemail",
            "SharedLinesGroup",
            "PagingOnly",
            "IvrMenu",
            "ApplicationExtension",
            "ParkLocation",
            "Limited",
            "Bot",
            "ProxyAdmin",
            "DelegatedLinesGroup"
          ]
        }
      }
    }
  },
  {
    "name": "DeleteExtensionParameters",
    "description": "Query parameters for operation deleteExtension",
    "properties": {
      "savePhoneLines": {
        "type": "boolean",
        "default": false
      },
      "savePhoneNumbers": {
        "type": "boolean",
        "default": true
      }
    }
  },
  {
    "name": "ListExtensionDevicesParameters",
    "description": "Query parameters for operation listExtensionDevices",
    "properties": {
      "page": {
        "description": "The result set page number (1-indexed) to return",
        "required": false,
        "explode": false,
        "example": 1,
        "type": "integer",
        "format": "int32",
        "minimum": 1,
        "maximum": 1000,
        "default": 1
      },
      "perPage": {
        "description": "The number of items per page. If provided value in the request\nis greater than a maximum, the maximum value is applied\n",
        "required": false,
        "explode": false,
        "example": 100,
        "type": "integer",
        "format": "int32",
        "minimum": 1,
        "maximum": 1000,
        "default": 100
      },
      "linePooling": {
        "description": "Pooling type of a device",
        "type": "string",
        "enum": [
          "Host",
          "Guest",
          "None"
        ]
      },
      "feature": {
        "description": "Device feature",
        "type": "string",
        "enum": [
          "BLA",
          "CommonPhone",
          "Intercom",
          "Paging",
          "HELD"
        ]
      },
      "type": {
        "description": "Device type",
        "type": "string",
        "default": "HardPhone",
        "enum": [
          "HardPhone",
          "SoftPhone",
          "OtherPhone",
          "MobileDevice",
          "BLA",
          "Paging",
          "WebPhone",
          "Room"
        ]
      },
      "lineType": {
        "description": "The type of a phone line",
        "type": "string",
        "enum": [
          "Unknown",
          "Standalone",
          "StandaloneFree",
          "BlaPrimary",
          "BlaSecondary"
        ]
      }
    }
  },
  {
    "name": "ListExtensionGrantsParameters",
    "description": "Query parameters for operation listExtensionGrants",
    "properties": {
      "extensionType": {
        "description": "Type of extension to be returned. Multiple values are supported.\nPlease note that legacy 'Department' extension type corresponds\nto 'Call Queue' extensions in modern RingCentral product terminology\n",
        "type": "string",
        "enum": [
          "User",
          "FaxUser",
          "VirtualUser",
          "DigitalUser",
          "Department",
          "Announcement",
          "Voicemail",
          "SharedLinesGroup",
          "PagingOnly",
          "IvrMenu",
          "ApplicationExtension",
          "ParkLocation",
          "Limited",
          "Bot",
          "Room"
        ]
      },
      "page": {
        "description": "Indicates a page number to retrieve. Only positive number values\nare allowed. Default value is '1'\n",
        "type": "integer",
        "format": "int32",
        "default": 1
      },
      "perPage": {
        "description": "Indicates a page size (number of items). If not specified, the value is '100' by default",
        "type": "integer",
        "format": "int32",
        "default": 100
      }
    }
  },
  {
    "name": "ReadConferencingSettingsParameters",
    "description": "Query parameters for operation readConferencingSettings",
    "properties": {
      "countryId": {
        "description": "Internal identifier of a country. If not specified, the response\nis returned for the brand country\n",
        "type": "string"
      }
    }
  },
  {
    "name": "ReadExtensionCallQueuePresenceParameters",
    "description": "Query parameters for operation readExtensionCallQueuePresence",
    "properties": {
      "editableMemberStatus": {
        "description": "Filtering by the flag 'Allow members to change their Queue Status'. If 'true' only queues where user can change his availability status are returned",
        "type": "boolean"
      }
    }
  },
  {
    "name": "SyncMessagesParameters",
    "description": "Query parameters for operation syncMessages",
    "properties": {
      "conversationId": {
        "description": "Conversation identifier for the resulting messages. Meaningful\nfor SMS and Pager messages only.\n",
        "type": "integer",
        "format": "int64"
      },
      "dateFrom": {
        "description": "The start datetime for resulting messages in ISO 8601 format\nincluding timezone, for example 2016-03-10T18:07:52.534Z. The default value\nis dateTo minus 24 hours\n",
        "type": "string",
        "format": "date-time"
      },
      "dateTo": {
        "description": "The end datetime for resulting messages in ISO 8601 format including\ntimezone, for example 2016-03-10T18:07:52.534Z. The default value is current\ntime\n",
        "type": "string",
        "format": "date-time"
      },
      "direction": {
        "description": "Direction for the resulting messages. If not specified, both\ninbound and outbound messages are returned. Multiple values are accepted\n",
        "style": "form",
        "explode": true,
        "type": "array",
        "items": {
          "type": "string",
          "enum": [
            "Inbound",
            "Outbound"
          ],
          "description": "Text message direction. Note that for some message types not all\ndirections are allowed. For example voicemail messages can\nbe only inbound\n"
        }
      },
      "distinctConversations": {
        "description": "If 'True', then the latest messages per every conversation ID\nare returned\n",
        "type": "boolean"
      },
      "messageType": {
        "description": "Type for the resulting messages. If not specified, all types\nof messages are returned. Multiple values are accepted\n",
        "style": "form",
        "explode": true,
        "type": "array",
        "items": {
          "type": "string",
          "description": "Type of messages to be collected",
          "enum": [
            "EMail",
            "Fax",
            "SMS",
            "VoiceMail",
            "Pager",
            "Text"
          ],
          "example": "Fax"
        }
      },
      "recordCount": {
        "description": "Limits the number of records to be returned (works in combination\nwith dateFrom and dateTo if specified)\n",
        "type": "integer",
        "format": "int32"
      },
      "syncToken": {
        "description": "Value of syncToken property of last sync request response",
        "type": "string"
      },
      "syncType": {
        "description": "Type of message synchronization request:\n  - FSync -- full sync\n  - ISync -- incremental sync\n",
        "type": "string",
        "enum": [
          "FSync",
          "ISync"
        ]
      },
      "voicemailOwner": {
        "description": "This query parameter will filter voicemail messages based on its owner.\nThis parameter should be controlled by the 'SharedVoicemail' feature.\nIf the feature is disabled this filter shouldn't be applied.\n",
        "type": "array",
        "items": {
          "type": "string"
        }
      }
    }
  },
  {
    "name": "ReadUserCallLogParameters",
    "description": "Query parameters for operation readUserCallLog",
    "properties": {
      "extensionNumber": {
        "description": "Short extension number of a user. If specified, returns call log for this particular extension only.\nCannot be combined with `phoneNumber` filter\n",
        "example": "101",
        "type": "string"
      },
      "phoneNumber": {
        "description": "Phone number of a caller/callee in e.164 format without a '+' sign. If specified, all incoming/outgoing calls\nfrom/to this phone number are returned.\n",
        "example": "12053320032",
        "type": "string"
      },
      "showBlocked": {
        "description": "Indicates then calls from/to blocked numbers are returned",
        "type": "boolean",
        "default": true
      },
      "direction": {
        "description": "The direction of call records to be included in the result. If omitted, both\ninbound and outbound calls are returned. Multiple values are supported\n",
        "style": "form",
        "explode": true,
        "type": "array",
        "items": {
          "description": "The direction of a call",
          "type": "string",
          "enum": [
            "Inbound",
            "Outbound"
          ]
        }
      },
      "sessionId": {
        "description": "Internal identifier of a call session",
        "type": "string"
      },
      "type": {
        "description": "The type of call records to be included in the result.\nIf omitted, all call types are returned. Multiple values are supported\n",
        "style": "form",
        "explode": true,
        "type": "array",
        "items": {
          "type": "string",
          "description": "The type of a call",
          "enum": [
            "Voice",
            "Fax"
          ]
        }
      },
      "transport": {
        "description": "The type of call transport. Multiple values are supported. By default this filter is disabled\n",
        "style": "form",
        "explode": true,
        "type": "array",
        "items": {
          "type": "string",
          "description": "The type of a call transport. 'PSTN' indicates that a call leg was initiated\nfrom the PSTN network provider; 'VoIP' - from an RC phone.\n",
          "enum": [
            "PSTN",
            "VoIP"
          ]
        }
      },
      "view": {
        "description": "Defines the level of details for returned call records\n",
        "type": "string",
        "default": "Simple",
        "enum": [
          "Simple",
          "Detailed"
        ]
      },
      "withRecording": {
        "deprecated": true,
        "description": "Deprecated, replaced with `recordingType` filter, still supported for compatibility reasons.\nIndicates if only recorded calls should be returned.\n\nIf both `withRecording` and `recordingType` parameters are specified, then `withRecording` is ignored'\n",
        "type": "boolean",
        "default": false
      },
      "recordingType": {
        "description": "Indicates that call records with recordings of particular type should be returned.\nIf omitted, then calls with and without recordings are returned\n",
        "type": "string",
        "enum": [
          "Automatic",
          "OnDemand",
          "All"
        ]
      },
      "dateTo": {
        "description": "The end of the time range to return call records in ISO 8601 format including timezone,\nfor example 2016-03-10T18:07:52.534Z. The default value is current time\n",
        "type": "string",
        "format": "date-time"
      },
      "dateFrom": {
        "description": "The beginning of the time range to return call records in ISO 8601 format including timezone,\nfor example 2016-03-10T18:07:52.534Z. The default value is `dateTo` minus 24 hours\n",
        "type": "string",
        "format": "date-time"
      },
      "telephonySessionId": {
        "description": "Internal identifier of a telephony session",
        "type": "string"
      },
      "page": {
        "description": "Indicates the page number to retrieve. Only positive number values are allowed",
        "type": "integer",
        "format": "int32",
        "minimum": 1,
        "default": 1
      },
      "perPage": {
        "description": "Indicates the page size (number of items). The default value is 100.\nThe maximum value for `Simple` view is 1000, for `Detailed` view - 250\n",
        "type": "integer",
        "format": "int32",
        "minimum": 1,
        "default": 100
      },
      "showDeleted": {
        "description": "Indicates that deleted calls records should be returned",
        "type": "boolean",
        "default": false
      }
    }
  },
  {
    "name": "DeleteUserCallLogParameters",
    "description": "Query parameters for operation deleteUserCallLog",
    "properties": {
      "dateTo": {
        "description": "The time boundary to delete all older records in ISO 8601 format including\ntimezone, for example *2016-03-10T18:07:52.534Z*. The default value is current time\n",
        "type": "string",
        "format": "date-time"
      }
    }
  },
  {
    "name": "ReadUserCallRecordParameters",
    "description": "Query parameters for operation readUserCallRecord",
    "properties": {
      "view": {
        "description": "Defines the level of details for returned call records\n",
        "type": "string",
        "default": "Simple",
        "enum": [
          "Simple",
          "Detailed"
        ]
      }
    }
  },
  {
    "name": "SyncUserCallLogParameters",
    "description": "Query parameters for operation syncUserCallLog",
    "properties": {
      "syncType": {
        "description": "Type of call log synchronization request: full or incremental sync",
        "type": "string",
        "enum": [
          "FSync",
          "ISync"
        ]
      },
      "syncToken": {
        "description": "Value of syncToken property of last sync request response",
        "type": "string"
      },
      "dateFrom": {
        "description": "The start datetime for resulting records in ISO 8601 format including timezone, for example 2016-03-10T18:07:52.534Z. The default value is the current moment",
        "type": "string",
        "format": "date-time"
      },
      "recordCount": {
        "description": "For 'FSync' the parameter is mandatory, it limits the number of records to be returned in response. For 'ISync' it specifies with how many records to extend sync Frame to the past, the maximum number of records is 250",
        "type": "integer",
        "format": "int32"
      },
      "statusGroup": {
        "description": "Type of calls to be returned. The default value is 'All'",
        "style": "form",
        "explode": true,
        "type": "array",
        "items": {
          "type": "string",
          "enum": [
            "Missed",
            "All"
          ]
        }
      },
      "view": {
        "description": "Defines the level of details for returned call records\n",
        "type": "string",
        "default": "Simple",
        "enum": [
          "Simple",
          "Detailed"
        ]
      },
      "showDeleted": {
        "description": "Supported for `ISync` mode. Indicates that deleted call records should be returned",
        "type": "boolean",
        "default": false
      }
    }
  },
  {
    "name": "ListExtensionActiveCallsParameters",
    "description": "Query parameters for operation listExtensionActiveCalls",
    "properties": {
      "direction": {
        "description": "The direction of call records to be included in the result. If omitted, both\ninbound and outbound calls are returned. Multiple values are supported\n",
        "style": "form",
        "explode": true,
        "type": "array",
        "items": {
          "description": "The direction of a call",
          "type": "string",
          "enum": [
            "Inbound",
            "Outbound"
          ]
        }
      },
      "view": {
        "description": "Defines the level of details for returned call records\n",
        "type": "string",
        "default": "Simple",
        "enum": [
          "Simple",
          "Detailed"
        ]
      },
      "type": {
        "description": "The type of call records to be included in the result.\nIf omitted, all call types are returned. Multiple values are supported\n",
        "style": "form",
        "explode": true,
        "type": "array",
        "items": {
          "type": "string",
          "description": "The type of a call",
          "enum": [
            "Voice",
            "Fax"
          ]
        }
      },
      "page": {
        "description": "Indicates the page number to retrieve. Only positive number values are allowed",
        "type": "integer",
        "format": "int32",
        "default": 1
      },
      "perPage": {
        "description": "Indicates the page size (number of items)",
        "type": "integer",
        "format": "int32",
        "default": 100
      }
    }
  },
  {
    "name": "ListAnsweringRulesParameters",
    "description": "Query parameters for operation listAnsweringRules",
    "properties": {
      "type": {
        "description": "Filters custom call handling rules of the extension",
        "type": "string",
        "enum": [
          "Custom"
        ]
      },
      "view": {
        "type": "string",
        "default": "Simple",
        "enum": [
          "Detailed",
          "Simple"
        ]
      },
      "enabledOnly": {
        "description": "If true, then only active call handling rules are returned",
        "type": "boolean",
        "default": false
      },
      "page": {
        "description": "The result set page number (1-indexed) to return",
        "required": false,
        "explode": false,
        "example": 1,
        "type": "integer",
        "format": "int32",
        "minimum": 1,
        "maximum": 1000,
        "default": 1
      },
      "perPage": {
        "description": "The number of items per page. If provided value in the request\nis greater than a maximum, the maximum value is applied\n",
        "required": false,
        "explode": false,
        "example": 100,
        "type": "integer",
        "format": "int32",
        "minimum": 1,
        "maximum": 1000,
        "default": 100
      }
    }
  },
  {
    "name": "ReadAnsweringRuleParameters",
    "description": "Query parameters for operation readAnsweringRule",
    "properties": {
      "showInactiveNumbers": {
        "description": "Indicates whether inactive numbers should be returned or not",
        "type": "boolean",
        "default": false
      }
    }
  },
  {
    "name": "CheckUserPermissionParameters",
    "description": "Query parameters for operation checkUserPermission",
    "properties": {
      "permissionId": {
        "type": "string"
      },
      "targetExtensionId": {
        "type": "string"
      }
    }
  },
  {
    "name": "GetExtensionEmergencyLocationsParameters",
    "description": "Query parameters for operation getExtensionEmergencyLocations",
    "properties": {
      "siteId": {
        "description": "Internal identifier of a site for filtering. To indicate company main\nsite `main-site` value should be specified. Supported only if multi-site feature\nis enabled for the account. Multiple values are supported.\n",
        "style": "form",
        "explode": true,
        "type": "array",
        "items": {
          "type": "string"
        }
      },
      "searchString": {
        "description": "Filters entries by the specified substring (search by chassis\nID, switch name or address) The characters range is 0-64 (if\nempty the filter is ignored)\n",
        "type": "string"
      },
      "domesticCountryId": {
        "type": "string"
      },
      "orderBy": {
        "description": "Comma-separated list of fields to order results prefixed by '+'\nsign (ascending order) or '-' sign (descending order). The default\nsorting is by `name`\n",
        "type": "string",
        "default": "+visibility",
        "enum": [
          "+name",
          "+siteName",
          "+address",
          "+addressStatus",
          "+usageStatus",
          "+visibility",
          "-name",
          "-siteName",
          "-address",
          "-addressStatus",
          "-usageStatus",
          "-visibility"
        ]
      },
      "perPage": {
        "description": "Indicates a page size (number of items). The values supported:\n`Max` or numeric value. If not specified, 100 records are returned\nper one page\n",
        "format": "int32",
        "type": "integer"
      },
      "page": {
        "description": "Indicates a page number to retrieve. Only positive\nnumber values are supported\n",
        "type": "integer",
        "default": 1,
        "format": "int32"
      },
      "visibility": {
        "type": "string"
      }
    }
  },
  {
    "name": "DeleteExtensionEmergencyLocationParameters",
    "description": "Query parameters for operation deleteExtensionEmergencyLocation",
    "properties": {
      "validateOnly": {
        "description": "Flag indicating that only validation of Emergency Response Locations\nto be deleted is required\n",
        "required": false,
        "type": "boolean"
      }
    }
  },
  {
    "name": "DeleteMeetingParameters",
    "description": "Query parameters for operation deleteMeeting",
    "properties": {
      "occurrenceId": {
        "description": "Internal identifier of a recurrent meeting occurrence",
        "type": "string"
      }
    }
  },
  {
    "name": "ListForwardingNumbersParameters",
    "description": "Query parameters for operation listForwardingNumbers",
    "properties": {
      "page": {
        "description": "The result set page number (1-indexed) to return",
        "required": false,
        "explode": false,
        "example": 1,
        "type": "integer",
        "format": "int32",
        "minimum": 1,
        "maximum": 1000,
        "default": 1
      },
      "perPage": {
        "description": "The number of items per page. If provided value in the request\nis greater than a maximum, the maximum value is applied\n",
        "required": false,
        "explode": false,
        "example": 100,
        "type": "integer",
        "format": "int32",
        "minimum": 1,
        "maximum": 1000,
        "default": 100
      }
    }
  },
  {
    "name": "ReadUserPresenceStatusParameters",
    "description": "Query parameters for operation readUserPresenceStatus",
    "properties": {
      "detailedTelephonyState": {
        "description": "Whether to return detailed telephony state",
        "type": "boolean"
      },
      "sipData": {
        "description": "Whether to return SIP data",
        "type": "boolean"
      }
    }
  },
  {
    "name": "ListContactsParameters",
    "description": "Query parameters for operation listContacts",
    "properties": {
      "startsWith": {
        "description": "If specified, only contacts which 'First name' or 'Last name' start\nwith the mentioned substring will be returned. Case-insensitive\n",
        "type": "string"
      },
      "sortBy": {
        "description": "Sorts results by the specified property",
        "style": "form",
        "explode": true,
        "type": "array",
        "items": {
          "type": "string",
          "enum": [
            "FirstName",
            "LastName",
            "Company"
          ]
        }
      },
      "page": {
        "description": "The result set page number (1-indexed) to return",
        "required": false,
        "explode": false,
        "example": 1,
        "type": "integer",
        "format": "int32",
        "minimum": 1,
        "maximum": 1000,
        "default": 1
      },
      "perPage": {
        "description": "The number of items per page. If provided value in the request\nis greater than a maximum, the maximum value is applied\n",
        "required": false,
        "explode": false,
        "example": 100,
        "type": "integer",
        "format": "int32",
        "minimum": 1,
        "maximum": 1000,
        "default": 100
      },
      "phoneNumber": {
        "description": "Phone number in e.164 format",
        "style": "form",
        "explode": true,
        "type": "array",
        "items": {
          "type": "string"
        }
      }
    }
  },
  {
    "name": "CreateContactParameters",
    "description": "Query parameters for operation createContact",
    "properties": {
      "dialingPlan": {
        "description": "Country code value complying with the [ISO 3166-1 alpha-2](https://ru.wikipedia.org/wiki/ISO_3166-1_alpha-2)\nformat. The default value is home country of the current extension\n",
        "type": "string"
      }
    }
  },
  {
    "name": "UpdateContactParameters",
    "description": "Query parameters for operation updateContact",
    "properties": {
      "dialingPlan": {
        "description": "Country code value complying with the [ISO 3166-1 alpha-2](https://ru.wikipedia.org/wiki/ISO_3166-1_alpha-2)\nformat. The default value is home country of the current extension\n",
        "type": "string"
      }
    }
  },
  {
    "name": "PatchContactParameters",
    "description": "Query parameters for operation patchContact",
    "properties": {
      "dialingPlan": {
        "description": "Country code value complying with the [ISO 3166-1 alpha-2](https://ru.wikipedia.org/wiki/ISO_3166-1_alpha-2)\nformat. The default value is home country of the current extension\n",
        "type": "string"
      }
    }
  },
  {
    "name": "ListUserMeetingRecordingsParameters",
    "description": "Query parameters for operation listUserMeetingRecordings",
    "properties": {
      "meetingId": {
        "description": "Internal identifier of a meeting. Either `meetingId` or `meetingStartTime`/`meetingEndTime` can be specified",
        "type": "string"
      },
      "meetingStartTimeFrom": {
        "description": "Recordings of meetings started after the time specified will be returned. Either `meetingId` or `meetingStartTime`/`meetingEndTime` can be specified",
        "type": "string",
        "format": "date-time"
      },
      "meetingStartTimeTo": {
        "description": "Recordings of meetings started before the time specified will be returned. The default value is current time. Either `meetingId` or `meetingStartTime`/`meetingEndTime` can be specified",
        "type": "string",
        "format": "date-time"
      },
      "page": {
        "description": "Page number",
        "type": "integer",
        "format": "int32"
      },
      "perPage": {
        "description": "Number of items per page. The `max` value is supported to indicate the maximum size - 300",
        "maximum": 300,
        "type": "integer",
        "format": "int32",
        "default": 100
      }
    }
  },
  {
    "name": "ListUserAssignedRolesParameters",
    "description": "Query parameters for operation listUserAssignedRoles",
    "properties": {
      "showHidden": {
        "description": "Specifies if hidden roles are shown or not",
        "type": "boolean"
      }
    }
  },
  {
    "name": "ReadExtensionFeaturesParameters",
    "description": "Query parameters for operation readExtensionFeatures",
    "properties": {
      "availableOnly": {
        "description": "Allows to filter features by availability for an extension\n",
        "type": "boolean",
        "default": false
      },
      "featureId": {
        "description": "Internal identifier(s) of the feature(s)",
        "style": "form",
        "explode": true,
        "type": "array",
        "items": {
          "type": "string"
        }
      }
    }
  },
  {
    "name": "ListMessagesParameters",
    "description": "Query parameters for operation listMessages",
    "properties": {
      "availability": {
        "description": "Specifies the availability status for resulting messages.\nMultiple values are accepted\n",
        "style": "form",
        "explode": true,
        "type": "array",
        "items": {
          "type": "string",
          "enum": [
            "Alive",
            "Deleted",
            "Purged"
          ],
          "description": "Message availability status. Message in 'Deleted' state is still\npreserved with all its attachments and can be restored. 'Purged' means\nthat all attachments are already deleted and the message itself is about\nto be physically deleted shortly\n"
        }
      },
      "conversationId": {
        "description": "Specifies a conversation identifier for the resulting messages",
        "type": "integer",
        "format": "int64"
      },
      "dateFrom": {
        "description": "Start datetime for resulting messages in ISO 8601 format\nincluding timezone, for example 2016-03-10T18:07:52.534Z. The default value\nis dateTo minus 24 hours\n",
        "type": "string",
        "format": "date-time"
      },
      "dateTo": {
        "description": "End datetime for resulting messages in ISO 8601 format including\ntimezone, for example 2016-03-10T18:07:52.534Z. The default value is current\ntime\n",
        "type": "string",
        "format": "date-time"
      },
      "direction": {
        "description": "Direction for resulting messages. If not specified, both\ninbound and outbound messages are returned. Multiple values are accepted\n",
        "style": "form",
        "explode": true,
        "type": "array",
        "items": {
          "type": "string",
          "enum": [
            "Inbound",
            "Outbound"
          ],
          "description": "Text message direction. Note that for some message types not all\ndirections are allowed. For example voicemail messages can\nbe only inbound\n"
        }
      },
      "distinctConversations": {
        "description": "If 'True', then the latest messages per every conversation ID\nare returned\n",
        "type": "boolean"
      },
      "messageType": {
        "description": "Type of resulting messages. If not specified, all messages\nwithout message type filtering are returned. Multiple values are accepted\n",
        "style": "form",
        "explode": true,
        "type": "array",
        "items": {
          "type": "string",
          "description": "Type of messages to be collected",
          "enum": [
            "EMail",
            "Fax",
            "SMS",
            "VoiceMail",
            "Pager",
            "Text"
          ],
          "example": "Fax"
        }
      },
      "readStatus": {
        "description": "Read status for resulting messages. Multiple values are\naccepted\n",
        "style": "form",
        "explode": true,
        "type": "array",
        "items": {
          "description": "Message read status",
          "type": "string",
          "enum": [
            "Read",
            "Unread"
          ]
        }
      },
      "page": {
        "description": "Indicates a page number to retrieve. Only positive number values\nare accepted\n",
        "type": "integer",
        "format": "int32",
        "default": 1
      },
      "perPage": {
        "description": "Indicates a page size (number of items)",
        "type": "integer",
        "format": "int32",
        "default": 100
      },
      "phoneNumber": {
        "description": "Phone number. If specified, messages are returned for this\nparticular phone number only\n",
        "type": "string"
      }
    }
  },
  {
    "name": "DeleteMessageByFilterParameters",
    "description": "Query parameters for operation deleteMessageByFilter",
    "properties": {
      "conversationId": {
        "style": "form",
        "explode": true,
        "type": "array",
        "items": {
          "type": "string"
        }
      },
      "dateTo": {
        "description": "Messages received earlier then the date specified will be deleted.\nThe default value is current datetime\n",
        "type": "string",
        "format": "date-time"
      },
      "type": {
        "description": "Type of messages to be deleted",
        "type": "string",
        "default": "All",
        "enum": [
          "Fax",
          "SMS",
          "VoiceMail",
          "Pager",
          "Text",
          "All"
        ]
      }
    }
  },
  {
    "name": "DeleteMessageParameters",
    "description": "Query parameters for operation deleteMessage",
    "properties": {
      "purge": {
        "description": "If the value is `true`, then the message is purged immediately\nwith all the attachments\n",
        "type": "boolean",
        "default": false
      }
    }
  },
  {
    "name": "ReadMessageContentParameters",
    "description": "Query parameters for operation readMessageContent",
    "properties": {
      "contentDisposition": {
        "description": "Content disposition of a response",
        "type": "string",
        "default": "Inline",
        "enum": [
          "Inline",
          "Attachment"
        ]
      }
    }
  },
  {
    "name": "CreateCustomUserGreetingParameters",
    "description": "Query parameters for operation createCustomUserGreeting",
    "properties": {
      "apply": {
        "description": "Specifies whether to apply an answering rule or not. If set to\ntrue then `answeringRule` parameter is mandatory. If set to false, then\nthe answering rule is not applied even if specified\n",
        "type": "boolean",
        "default": true
      }
    }
  },
  {
    "name": "SyncAddressBookParameters",
    "description": "Query parameters for operation syncAddressBook",
    "properties": {
      "syncType": {
        "description": "Type of synchronization",
        "type": "string",
        "enum": [
          "FSync",
          "ISync"
        ]
      },
      "syncToken": {
        "description": "Value of syncToken property of the last sync request response\n",
        "type": "string"
      },
      "perPage": {
        "description": "Number of records per page to be returned. Max number of\nrecords is 250, which is also the default.\nFor 'FSync' - if the number of records exceeds the parameter value\n(either specified or default), all of the pages can be retrieved\nin several requests. For 'ISync' - if the number of records exceeds\npage size, then the number of incoming changes to this\nnumber is limited\n",
        "type": "integer",
        "format": "int32"
      },
      "pageId": {
        "description": "Internal identifier of a page. It can be obtained from the 'nextPageId'\nparameter passed in response body\n",
        "type": "integer",
        "format": "int64"
      }
    }
  },
  {
    "name": "ListBlockedAllowedNumbersParameters",
    "description": "Query parameters for operation listBlockedAllowedNumbers",
    "properties": {
      "page": {
        "description": "The result set page number (1-indexed) to return",
        "required": false,
        "explode": false,
        "example": 1,
        "type": "integer",
        "format": "int32",
        "minimum": 1,
        "maximum": 1000,
        "default": 1
      },
      "perPage": {
        "description": "The number of items per page. If provided value in the request\nis greater than a maximum, the maximum value is applied\n",
        "required": false,
        "explode": false,
        "example": 100,
        "type": "integer",
        "format": "int32",
        "minimum": 1,
        "maximum": 1000,
        "default": 100
      },
      "status": {
        "type": "string",
        "description": "Status of a phone number",
        "default": "Blocked",
        "enum": [
          "Blocked",
          "Allowed"
        ]
      }
    }
  },
  {
    "name": "ListExtensionPhoneNumbersParameters",
    "description": "Query parameters for operation listExtensionPhoneNumbers",
    "properties": {
      "status": {
        "description": "Status of a phone number. Multiple values are supported",
        "type": "string",
        "enum": [
          "Normal",
          "Pending",
          "PortedIn",
          "Temporary"
        ]
      },
      "usageType": {
        "description": "Usage type of a phone number",
        "style": "form",
        "explode": true,
        "type": "array",
        "items": {
          "type": "string",
          "enum": [
            "MainCompanyNumber",
            "AdditionalCompanyNumber",
            "CompanyNumber",
            "DirectNumber",
            "CompanyFaxNumber",
            "ForwardedNumber",
            "ForwardedCompanyNumber",
            "BusinessMobileNumber",
            "IntegrationNumber"
          ]
        }
      },
      "page": {
        "description": "Indicates a page number to retrieve. Only positive number values\nare allowed. Default value is '1'\n",
        "type": "integer",
        "format": "int32",
        "default": 1
      },
      "perPage": {
        "description": "Indicates a page size (number of items). If not specified, the value is '100' by default",
        "type": "integer",
        "format": "int32",
        "default": 100
      }
    }
  },
  {
    "name": "ListAutomaticLocationUpdatesUsersParameters",
    "description": "Query parameters for operation listAutomaticLocationUpdatesUsers",
    "properties": {
      "type": {
        "description": "Extension type. Multiple values are supported",
        "style": "form",
        "explode": true,
        "type": "array",
        "items": {
          "type": "string",
          "enum": [
            "User",
            "Limited"
          ]
        }
      },
      "searchString": {
        "description": "Filters entries containing the specified substring in user name,\nextension or department. The characters range is 0-64; not case-sensitive.\nIf empty then the filter is ignored\n",
        "type": "string"
      },
      "department": {
        "description": "Department name to filter the users. The value range is 0-64;\nnot case-sensitive. If not specified then the parameter is ignored. Multiple\nvalues are supported\n",
        "style": "form",
        "explode": true,
        "type": "array",
        "items": {
          "type": "string"
        }
      },
      "siteId": {
        "description": "Internal identifier of a site for filtering. To indicate company main\nsite `main-site` value should be specified. Supported only if multi-site feature\nis enabled for the account. Multiple values are supported.\n",
        "style": "form",
        "explode": true,
        "type": "array",
        "items": {
          "type": "string"
        }
      },
      "featureEnabled": {
        "description": "Filters entries by their status of Automatic Location Updates\nfeature\n",
        "type": "boolean"
      },
      "orderBy": {
        "description": "Comma-separated list of fields to order results prefixed by\nplus sign '+' (ascending order) or minus sign '-' (descending order).\nSupported values: 'name', 'modelName', 'siteName', 'featureEnabled'.\nThe default sorting is by `name`\n",
        "type": "string"
      },
      "perPage": {
        "description": "Indicates a page size (number of items). The values supported:\n`Max` or numeric value. If not specified, 100 records are returned per one\npage\n",
        "type": "integer",
        "format": "int32"
      },
      "page": {
        "description": "Indicates a page number to retrieve. Only positive number values\nare supported\n",
        "type": "integer",
        "format": "int32",
        "default": 1
      }
    }
  },
  {
    "name": "ListNetworksParameters",
    "description": "Query parameters for operation listNetworks",
    "properties": {
      "siteId": {
        "description": "Internal identifier of a site for filtering. To indicate company main\nsite `main-site` value should be specified. Supported only if multi-site feature\nis enabled for the account. Multiple values are supported.\n",
        "style": "form",
        "explode": true,
        "type": "array",
        "items": {
          "type": "string"
        }
      },
      "searchString": {
        "description": "Filters entries by the specified substring (search by chassis\nID, switch name or address) The characters range is 0-64 (if empty the filter\nis ignored)\n",
        "type": "string"
      },
      "orderBy": {
        "description": "Comma-separated list of fields to order results prefixed by '+'\nsign (ascending order) or '-' sign (descending order). The default\nsorting is by `name`\n",
        "type": "string"
      },
      "perPage": {
        "description": "Indicates a page size (number of items). The values supported:\n`Max` or numeric value. If not specified, 100 records are returned per one\npage'\n",
        "type": "integer",
        "format": "int32"
      },
      "page": {
        "description": "Indicates a page number to retrieve. Only positive number values\nare supported\n",
        "type": "integer",
        "format": "int32",
        "default": 1
      }
    }
  },
  {
    "name": "ListAccountSwitchesParameters",
    "description": "Query parameters for operation listAccountSwitches",
    "properties": {
      "siteId": {
        "description": "Internal identifier of a site for filtering. To indicate company main\nsite `main-site` value should be specified. Supported only if multi-site feature\nis enabled for the account. Multiple values are supported.\n",
        "style": "form",
        "explode": true,
        "type": "array",
        "items": {
          "type": "string"
        }
      },
      "searchString": {
        "description": "Filters entries by the specified substring (search by chassis\nID, switch name or address) The characters range is 0-64 (if empty the filter\nis ignored)\n",
        "type": "string"
      },
      "orderBy": {
        "description": "Comma-separated list of fields to order results prefixed by '+'\nsign (ascending order) or '-' sign (descending order). The default\nsorting is by `name`\n",
        "type": "string"
      },
      "perPage": {
        "description": "Indicates a page size (number of items). The values supported:\n`Max` or numeric value. If not specified, 100 records are returned per one\npage'\n",
        "type": "integer",
        "format": "int32"
      },
      "page": {
        "description": "Indicates a page number to retrieve. Only positive number values\nare supported\n",
        "type": "integer",
        "format": "int32",
        "default": 1
      }
    }
  },
  {
    "name": "ListWirelessPointsParameters",
    "description": "Query parameters for operation listWirelessPoints",
    "properties": {
      "siteId": {
        "description": "Internal identifier of a site for filtering. To indicate company main\nsite `main-site` value should be specified. Supported only if multi-site feature\nis enabled for the account. Multiple values are supported.\n",
        "style": "form",
        "explode": true,
        "type": "array",
        "items": {
          "type": "string"
        }
      },
      "searchString": {
        "description": "Filters entries by the specified substring (search by chassis\nID, switch name or address) The characters range is 0-64 (if empty the filter\nis ignored)\n",
        "type": "string"
      },
      "orderBy": {
        "description": "Comma-separated list of fields to order results prefixed by '+'\nsign (ascending order) or '-' sign (descending order).The default sorting\nis by `name`\n",
        "type": "string"
      },
      "perPage": {
        "description": "Indicates a page size (number of items). The values supported:\n`Max` or numeric value. If not specified, 100 records are returned per one\npage\n",
        "type": "integer",
        "format": "int32"
      },
      "page": {
        "description": "Indicates the page number to retrieve. Only positive number values\nare supported\n",
        "type": "integer",
        "format": "int32",
        "default": 1
      }
    }
  },
  {
    "name": "ListDevicesAutomaticLocationUpdatesParameters",
    "description": "Query parameters for operation listDevicesAutomaticLocationUpdates",
    "properties": {
      "siteId": {
        "description": "Internal identifier of a site for filtering. To indicate company main\nsite `main-site` value should be specified. Supported only if multi-site feature\nis enabled for the account. Multiple values are supported.\n",
        "style": "form",
        "explode": true,
        "type": "array",
        "items": {
          "type": "string"
        }
      },
      "featureEnabled": {
        "description": "Filters entries by their status of Automatic Location Updates\nfeature\n",
        "type": "boolean"
      },
      "modelId": {
        "description": "Internal identifier of a device model for filtering. Multiple\nvalues are supported\n",
        "type": "string"
      },
      "compatibleOnly": {
        "description": "Filters devices which support HELD protocol",
        "type": "boolean"
      },
      "searchString": {
        "description": "Filters entries which have device name or model name containing\nthe mentioned substring. The value should be split by spaces; the range\nis 0 - 64 characters, not case-sensitive. If empty the filter is ignored\n",
        "type": "string"
      },
      "orderBy": {
        "description": "Comma-separated list of fields to order results prefixed by\nplus sign '+' (ascending order) or minus sign '-' (descending order).\nSupported values: 'name', 'modelName', 'siteName', 'featureEnabled'.\nThe default sorting is by `name`\n",
        "type": "string"
      },
      "perPage": {
        "description": "Indicates a page size (number of items). The values supported:\n`Max` or numeric value. If not specified, 100 records are returned per one\npage\n",
        "type": "integer",
        "format": "int32"
      },
      "page": {
        "description": "Indicates a page number to retrieve. Only positive number values\nare supported\n",
        "type": "integer",
        "format": "int32",
        "default": 1
      }
    }
  },
  {
    "name": "ListAccountPhoneNumbersParameters",
    "description": "Query parameters for operation listAccountPhoneNumbers",
    "properties": {
      "page": {
        "description": "Indicates a page number to retrieve. Only positive number values\nare accepted\n",
        "type": "integer",
        "format": "int32",
        "default": 1
      },
      "perPage": {
        "description": "Indicates a page size (number of items)",
        "type": "integer",
        "format": "int32",
        "default": 100
      },
      "usageType": {
        "description": "Usage type of a phone number",
        "style": "form",
        "explode": true,
        "type": "array",
        "items": {
          "type": "string",
          "enum": [
            "MainCompanyNumber",
            "AdditionalCompanyNumber",
            "CompanyNumber",
            "DirectNumber",
            "CompanyFaxNumber",
            "ForwardedNumber",
            "ForwardedCompanyNumber",
            "ContactCenterNumber",
            "ConferencingNumber",
            "MeetingsNumber",
            "BusinessMobileNumber",
            "IntegrationNumber"
          ]
        }
      },
      "status": {
        "description": "Status of a phone number. Multiple values are supported",
        "type": "string",
        "enum": [
          "Normal",
          "Pending",
          "PortedIn",
          "Temporary"
        ]
      }
    }
  },
  {
    "name": "ParsePhoneNumberParameters",
    "description": "Query parameters for operation parsePhoneNumber",
    "properties": {
      "homeCountry": {
        "required": false,
        "description": "ISO 3166 alpha2 code of the home country to be used if it is impossible to determine country from the number itself.\nBy default this parameter is preset to the current user's home country or brand country if the user is undefined\n",
        "type": "string",
        "example": "US"
      },
      "nationalAsPriority": {
        "required": false,
        "description": "The default value is `false`. If `true`, the numbers that are\ncloser to the home country are given higher priority\n",
        "type": "boolean",
        "default": false
      }
    }
  },
  {
    "name": "ListDomesticCountriesParameters",
    "description": "Query parameters for operation listDomesticCountries",
    "properties": {
      "page": {
        "description": "Indicates a page number to retrieve. Only positive number values\nare accepted\n",
        "type": "integer",
        "format": "int32",
        "default": 1
      },
      "perPage": {
        "description": "Indicates a page size (number of items)",
        "type": "integer",
        "format": "int32",
        "default": 100
      }
    }
  },
  {
    "name": "ListStatesParameters",
    "description": "Query parameters for operation listStates",
    "properties": {
      "allCountries": {
        "description": "If set to 'True' then states of all countries are returned and\n`countryId` is ignored, even if specified. If the value is empty\nthen the parameter is ignored\n",
        "type": "boolean"
      },
      "countryId": {
        "description": "Internal identifier of a country",
        "type": "integer",
        "format": "int64"
      },
      "page": {
        "description": "Indicates a page number to retrieve. Only positive number values\nare accepted\n",
        "type": "integer",
        "format": "int32",
        "default": 1
      },
      "perPage": {
        "description": "Indicates a page size (number of items)",
        "type": "integer",
        "format": "int32",
        "default": 100
      },
      "withPhoneNumbers": {
        "description": "If 'True' the list of states with phone numbers available for\nbuying is returned\n",
        "type": "boolean",
        "default": false
      }
    }
  },
  {
    "name": "ListPermissionsParameters",
    "description": "Query parameters for operation listPermissions",
    "properties": {
      "page": {
        "description": "The result set page number (1-indexed) to return",
        "required": false,
        "explode": false,
        "example": 1,
        "type": "integer",
        "format": "int32",
        "minimum": 1,
        "maximum": 1000,
        "default": 1
      },
      "perPage": {
        "description": "The number of items per page. If provided value in the request\nis greater than a maximum, the maximum value is applied\n",
        "required": false,
        "explode": false,
        "example": 100,
        "type": "integer",
        "format": "int32",
        "minimum": 1,
        "maximum": 1000,
        "default": 100
      },
      "assignable": {
        "description": "Specifies whether to return only assignable permissions",
        "type": "boolean"
      },
      "servicePlanId": {
        "description": "Internal identifier of a service plan",
        "type": "string"
      }
    }
  },
  {
    "name": "ListLocationsParameters",
    "description": "Query parameters for operation listLocations",
    "properties": {
      "orderBy": {
        "description": "Sorts results by the property specified",
        "type": "string",
        "default": "City",
        "enum": [
          "Npa",
          "City"
        ]
      },
      "page": {
        "description": "Indicates a page number to retrieve. Only positive number values\nare accepted\n",
        "type": "integer",
        "format": "int32",
        "default": 1
      },
      "perPage": {
        "description": "Indicates a page size (number of items)",
        "type": "integer",
        "format": "int32",
        "default": 100
      },
      "stateId": {
        "description": "Internal identifier of a state",
        "type": "string"
      },
      "withNxx": {
        "description": "Specifies if `nxx` codes are returned",
        "type": "boolean"
      }
    }
  },
  {
    "name": "ListPermissionCategoriesParameters",
    "description": "Query parameters for operation listPermissionCategories",
    "properties": {
      "page": {
        "description": "The result set page number (1-indexed) to return",
        "required": false,
        "explode": false,
        "example": 1,
        "type": "integer",
        "format": "int32",
        "minimum": 1,
        "maximum": 1000,
        "default": 1
      },
      "perPage": {
        "description": "The number of items per page. If provided value in the request\nis greater than a maximum, the maximum value is applied\n",
        "required": false,
        "explode": false,
        "example": 100,
        "type": "integer",
        "format": "int32",
        "minimum": 1,
        "maximum": 1000,
        "default": 100
      },
      "servicePlanId": {
        "description": "Internal identifier of a service plan",
        "type": "string"
      }
    }
  },
  {
    "name": "ListStandardGreetingsParameters",
    "description": "Query parameters for operation listStandardGreetings",
    "properties": {
      "page": {
        "description": "The result set page number (1-indexed) to return",
        "required": false,
        "explode": false,
        "example": 1,
        "type": "integer",
        "format": "int32",
        "minimum": 1,
        "maximum": 1000,
        "default": 1
      },
      "perPage": {
        "description": "The number of items per page. If provided value in the request\nis greater than a maximum, the maximum value is applied\n",
        "required": false,
        "explode": false,
        "example": 100,
        "type": "integer",
        "format": "int32",
        "minimum": 1,
        "maximum": 1000,
        "default": 100
      },
      "type": {
        "description": "Type of a greeting, specifying the case when the greeting is played",
        "type": "string",
        "enum": [
          "Introductory",
          "Announcement",
          "ConnectingMessage",
          "ConnectingAudio",
          "Voicemail",
          "Unavailable",
          "HoldMusic",
          "Company"
        ]
      },
      "usageType": {
        "description": "Usage type of a greeting, specifying if the greeting is applied for user extension or department (call queue) extension",
        "type": "string",
        "enum": [
          "UserExtensionAnsweringRule",
          "ExtensionAnsweringRule",
          "DepartmentExtensionAnsweringRule",
          "CompanyAnsweringRule",
          "CompanyAfterHoursAnsweringRule",
          "VoicemailExtensionAnsweringRule",
          "AnnouncementExtensionAnsweringRule",
          "SharedLinesGroupAnsweringRule"
        ]
      }
    }
  },
  {
    "name": "ListTimezonesParameters",
    "description": "Query parameters for operation listTimezones",
    "properties": {
      "page": {
        "description": "Indicates a page number to retrieve. Only positive number values\nare allowed. Default value is '1'\n",
        "type": "integer",
        "format": "int32",
        "default": 1
      },
      "perPage": {
        "description": "Indicates a page size (number of items). If not specified, the value is '100' by default",
        "type": "integer",
        "format": "int32",
        "default": 100
      }
    }
  },
  {
    "name": "ListStandardUserRoleParameters",
    "description": "Query parameters for operation listStandardUserRole",
    "properties": {
      "servicePlanId": {
        "description": "Internal identifier of a service plan.",
        "type": "string"
      },
      "page": {
        "description": "The result set page number (1-indexed) to return",
        "required": false,
        "explode": false,
        "example": 1,
        "type": "integer",
        "format": "int32",
        "minimum": 1,
        "maximum": 1000,
        "default": 1
      },
      "perPage": {
        "description": "The number of items per page. If provided value in the request\nis greater than a maximum, the maximum value is applied\n",
        "required": false,
        "explode": false,
        "example": 100,
        "type": "integer",
        "format": "int32",
        "minimum": 1,
        "maximum": 1000,
        "default": 100
      }
    }
  },
  {
    "name": "ListFaxCoverPagesParameters",
    "description": "Query parameters for operation listFaxCoverPages",
    "properties": {
      "page": {
        "description": "Indicates a page number to retrieve. Only positive number values\nare accepted\n",
        "type": "integer",
        "format": "int32",
        "default": 1
      },
      "perPage": {
        "description": "Indicates a page size (number of items)",
        "type": "integer",
        "format": "int32",
        "default": 100
      }
    }
  },
  {
    "name": "ListCountriesParameters",
    "description": "Query parameters for operation listCountries",
    "properties": {
      "loginAllowed": {
        "description": "Specifies whether the logging-in with the phone numbers of this country\nis enabled or not\n",
        "type": "boolean"
      },
      "signupAllowed": {
        "description": "Indicates whether a signup/billing is allowed for a country. If\nnot specified all countries are returned (according to other\nspecified filters if any)\n",
        "type": "boolean"
      },
      "numberSelling": {
        "description": "Specifies if RingCentral sells phone numbers of this country\n",
        "type": "boolean"
      },
      "page": {
        "description": "Indicates a page number to retrieve. Only positive number values\nare accepted\n",
        "type": "integer",
        "format": "int32",
        "default": 1
      },
      "perPage": {
        "description": "Indicates a page size (number of items)\n",
        "type": "integer",
        "format": "int32",
        "default": 100
      },
      "freeSoftphoneLine": {
        "description": "Specifies if free phone line for softphone is available for a\ncountry or not\n",
        "type": "boolean"
      }
    }
  },
  {
    "name": "GetBridgeByPstnPinParameters",
    "description": "Query parameters for operation getBridgeByPstnPin",
    "properties": {
      "phoneNumber": {
        "description": "Phone number to find a phone group for PSTN PIN. If it is not specified, then the default phone group will be used.\n",
        "type": "string"
      },
      "pw": {
        "required": false,
        "description": "Bridge hash password",
        "type": "string"
      }
    }
  },
  {
    "name": "GetBridgeByWebPinParameters",
    "description": "Query parameters for operation getBridgeByWebPin",
    "properties": {
      "pw": {
        "required": false,
        "description": "Bridge hash password",
        "type": "string"
      }
    }
  },
  {
    "name": "GetBridgeParameters",
    "description": "Query parameters for operation getBridge",
    "properties": {
      "pw": {
        "required": false,
        "description": "Bridge hash password",
        "type": "string"
      }
    }
  },
  {
    "name": "ListVideoMeetingsParameters",
    "description": "Query parameters for operation listVideoMeetings",
    "properties": {
      "text": {
        "description": "Search text",
        "type": "string"
      },
      "pageToken": {
        "description": "Token to get the next page",
        "type": "string"
      },
      "perPage": {
        "description": "Number of records returned",
        "type": "integer",
        "format": "int32"
      },
      "type": {
        "description": "Type of returned data",
        "type": "string",
        "enum": [
          "All",
          "My",
          "Deleted",
          "Shared"
        ]
      }
    }
  },
  {
    "name": "RcvListDelegatorsParameters",
    "description": "Query parameters for operation rcvListDelegators",
    "properties": {
      "requuid": {
        "type": "string"
      }
    }
  },
  {
    "name": "ScimSearchViaGet2Parameters",
    "description": "Query parameters for operation scimSearchViaGet2",
    "properties": {
      "filter": {
        "description": "Only support 'userName' or 'email' filter expressions for now",
        "type": "string"
      },
      "startIndex": {
        "description": "Start index (1-based)",
        "type": "integer",
        "format": "int32",
        "default": 1
      },
      "count": {
        "description": "Page size",
        "type": "integer",
        "format": "int32",
        "default": 100
      }
    }
  },
  {
    "name": "ReadGlipEventsNewParameters",
    "description": "Query parameters for operation readGlipEventsNew",
    "properties": {
      "recordCount": {
        "description": "Number of groups to be fetched by one request. The maximum value is 250, by default - 30.",
        "maximum": 250,
        "type": "integer",
        "format": "int32",
        "default": 30
      },
      "pageToken": {
        "description": "Token of a page to be returned",
        "type": "string"
      }
    }
  },
  {
    "name": "ListRecentChatsNewParameters",
    "description": "Query parameters for operation listRecentChatsNew",
    "properties": {
      "type": {
        "description": "Type of chats to be fetched. By default all chat types are returned",
        "style": "form",
        "explode": true,
        "type": "array",
        "items": {
          "type": "string",
          "enum": [
            "Everyone",
            "Group",
            "Personal",
            "Direct",
            "Team"
          ]
        }
      },
      "recordCount": {
        "description": "Max number of chats to be fetched by one request (Not more than 250).",
        "maximum": 250,
        "type": "integer",
        "format": "int32",
        "default": 30
      }
    }
  },
  {
    "name": "CreateGlipFileNewParameters",
    "description": "Query parameters for operation createGlipFileNew",
    "properties": {
      "groupId": {
        "description": "Internal identifier of a group to which the post with attachment will be added to",
        "type": "integer",
        "format": "int64"
      },
      "name": {
        "description": "Name of a file attached",
        "type": "string"
      }
    }
  },
  {
    "name": "ListGlipChatsNewParameters",
    "description": "Query parameters for operation listGlipChatsNew",
    "properties": {
      "type": {
        "description": "Type of chats to be fetched. By default all type of chats will be fetched",
        "style": "form",
        "explode": true,
        "type": "array",
        "items": {
          "type": "string",
          "enum": [
            "Personal",
            "Direct",
            "Group",
            "Team",
            "Everyone"
          ]
        }
      },
      "recordCount": {
        "description": "Number of chats to be fetched by one request. The maximum value is 250, by default - 30.",
        "maximum": 250,
        "type": "integer",
        "format": "int32",
        "default": 30
      },
      "pageToken": {
        "description": "Pagination token.",
        "type": "string"
      }
    }
  },
  {
    "name": "ListChatTasksNewParameters",
    "description": "Query parameters for operation listChatTasksNew",
    "properties": {
      "creationTimeTo": {
        "description": "The end datetime for resulting records in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601)\nformat including timezone, e.g. 2019-03-10T18:23:45Z\n",
        "type": "string",
        "default": "now"
      },
      "creationTimeFrom": {
        "description": "The start datetime for resulting records in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601)\nformat including timezone, e.g. 2016-02-23T00:00:00\n",
        "type": "string"
      },
      "creatorId": {
        "description": "Internal identifier of a task creator",
        "style": "form",
        "explode": false,
        "type": "array",
        "items": {
          "type": "string"
        }
      },
      "status": {
        "description": "Task execution status",
        "style": "form",
        "explode": false,
        "type": "array",
        "items": {
          "type": "string",
          "enum": [
            "Pending",
            "InProgress",
            "Completed"
          ]
        }
      },
      "assignmentStatus": {
        "description": "Task assignment status",
        "type": "string",
        "enum": [
          "Unassigned",
          "Assigned"
        ]
      },
      "assigneeId": {
        "description": "Internal identifier of a task assignee",
        "style": "form",
        "explode": false,
        "type": "array",
        "items": {
          "type": "string"
        }
      },
      "assigneeStatus": {
        "description": "Task execution status by assignee(-s) specified in assigneeId",
        "type": "string",
        "enum": [
          "Pending",
          "Completed"
        ]
      },
      "pageToken": {
        "description": "Token of the current page. If token is omitted then the first\npage should be returned\n",
        "type": "string"
      },
      "recordCount": {
        "description": "Number of records to be returned per screen",
        "maximum": 250,
        "minimum": 1,
        "type": "integer",
        "format": "int32",
        "default": 30
      }
    }
  },
  {
    "name": "ReadGlipPostsNewParameters",
    "description": "Query parameters for operation readGlipPostsNew",
    "properties": {
      "recordCount": {
        "description": "Max number of posts to be fetched by one request (not more than 250).",
        "maximum": 250,
        "type": "integer",
        "format": "int32",
        "default": 30
      },
      "pageToken": {
        "description": "Pagination token.",
        "type": "string"
      }
    }
  },
  {
    "name": "ListChatNotesNewParameters",
    "description": "Query parameters for operation listChatNotesNew",
    "properties": {
      "creationTimeTo": {
        "description": "The end datetime for resulting records in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601)\nformat including timezone, e.g. 2019-03-10T18:23:45. The default value is\nNow.\n",
        "type": "string"
      },
      "creationTimeFrom": {
        "description": "The start datetime for resulting records in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601)\nformat including timezone\n",
        "type": "string"
      },
      "creatorId": {
        "description": "Internal identifier of the user that created the note. Multiple\nvalues are supported\n",
        "type": "string"
      },
      "status": {
        "description": "Status of notes to be fetched; if not specified all notes are\nfetched by default.\n",
        "type": "string",
        "enum": [
          "Active",
          "Draft"
        ]
      },
      "pageToken": {
        "description": "Pagination token",
        "type": "string"
      },
      "recordCount": {
        "description": "Max number of notes to be fetched by one request; the value range is 1-250.",
        "maximum": 250,
        "type": "integer",
        "format": "int32",
        "default": 30
      }
    }
  },
  {
    "name": "ListGlipConversationsNewParameters",
    "description": "Query parameters for operation listGlipConversationsNew",
    "properties": {
      "recordCount": {
        "description": "Number of conversations to be fetched by one request. The maximum value is 250, by default - 30",
        "maximum": 250,
        "type": "integer",
        "format": "int32",
        "default": 30
      },
      "pageToken": {
        "description": "Pagination token.",
        "type": "string"
      }
    }
  },
  {
    "name": "ListDataExportTasksNewParameters",
    "description": "Query parameters for operation listDataExportTasksNew",
    "properties": {
      "status": {
        "description": "Status of the task(s) to be returned. Multiple values are supported",
        "type": "string",
        "enum": [
          "Accepted",
          "InProgress",
          "Completed",
          "Failed",
          "Expired"
        ]
      },
      "page": {
        "description": "Page number to be retrieved; value range is > 0",
        "type": "integer",
        "format": "int32",
        "default": 1
      },
      "perPage": {
        "description": "Number of records to be returned per page; value range is 1 - 250",
        "type": "integer",
        "format": "int32",
        "default": 30
      }
    }
  },
  {
    "name": "ListGlipTeamsNewParameters",
    "description": "Query parameters for operation listGlipTeamsNew",
    "properties": {
      "recordCount": {
        "description": "Number of teams to be fetched by one request. The maximum value is 250, by default - 30",
        "maximum": 250,
        "type": "integer",
        "format": "int32",
        "default": 30
      },
      "pageToken": {
        "description": "Pagination token.",
        "type": "string"
      }
    }
  },
  {
    "name": "PatchNoteNewParameters",
    "description": "Query parameters for operation patchNoteNew",
    "properties": {
      "releaseLock": {
        "description": "If true then note lock (if any) will be released upon request",
        "type": "boolean",
        "default": false
      }
    }
  },
  {
    "name": "ListFavoriteChatsNewParameters",
    "description": "Query parameters for operation listFavoriteChatsNew",
    "properties": {
      "recordCount": {
        "description": "Max number of chats to be fetched by one request (Not more than 250).",
        "maximum": 250,
        "type": "integer",
        "format": "int32",
        "default": 30
      }
    }
  },
  {
    "name": "AnalyticsCallsAggregationFetchParameters",
    "description": "Query parameters for operation analyticsCallsAggregationFetch",
    "properties": {
      "page": {
        "description": "The current page number (positive numbers only)",
        "required": false,
        "type": "integer",
        "format": "int32",
        "minimum": 1
      },
      "perPage": {
        "description": "Number of records displayed on a page (positive numbers only, max value of 200)",
        "required": false,
        "type": "integer",
        "format": "int32",
        "minimum": 1,
        "maximum": 200
      }
    }
  },
  {
    "name": "AnalyticsCallsTimelineFetchParameters",
    "description": "Query parameters for operation analyticsCallsTimelineFetch",
    "properties": {
      "interval": {
        "description": "Aggregation interval",
        "required": true,
        "type": "string",
        "enum": [
          "Hour",
          "Day",
          "Week",
          "Month"
        ]
      },
      "page": {
        "description": "The current page number (positive numbers only)",
        "required": false,
        "type": "integer",
        "format": "int32",
        "minimum": 1
      },
      "perPage": {
        "description": "Number of records displayed on a page (positive numbers only, max value of 20)",
        "required": false,
        "type": "integer",
        "format": "int32",
        "minimum": 1,
        "maximum": 20
      }
    }
  },
  {
    "name": "GetTokenRequest",
    "description": "Request body for operation getToken",
    "type": "object",
    "required": [
      "grant_type"
    ],
    "properties": {
      "username": {
        "type": "string",
        "description": "For `password` grant type only. User login name: email or phone number in E.164 format\n"
      },
      "password": {
        "type": "string",
        "description": "For `password` grant type only. User's password",
        "format": "password"
      },
      "extension": {
        "type": "string",
        "deprecated": true,
        "description": "For `password` grant type only. Optional. Extension short number. If company number\nis specified as a username, and extension is not specified, the\nserver will attempt to authenticate client as main company administrator\n\nDEPRECATED: use extension number embedded into username string like `+16501234567*101`\n"
      },
      "grant_type": {
        "type": "string",
        "description": "Grant type",
        "enum": [
          "authorization_code",
          "password",
          "refresh_token",
          "client_credentials",
          "urn:ietf:params:oauth:grant-type:jwt-bearer",
          "urn:ietf:params:oauth:grant-type:device_code"
        ]
      },
      "code": {
        "type": "string",
        "description": "For `authorization_code` grant type only. User's authorization code"
      },
      "redirect_uri": {
        "type": "string",
        "format": "uri",
        "description": "For `authorization_code` grant type only. This is a callback URI which determines where the response\nis sent. The value of this parameter must exactly match one of\nthe URIs you have provided for your app upon registration\n"
      },
      "access_token_ttl": {
        "maximum": 3600,
        "minimum": 600,
        "type": "integer",
        "description": "Access token lifetime in seconds",
        "format": "int32",
        "default": 3600
      },
      "refresh_token_ttl": {
        "maximum": 604800,
        "type": "integer",
        "description": "Refresh token lifetime in seconds",
        "format": "int32",
        "default": 604800
      },
      "scope": {
        "type": "string",
        "description": "List of application permissions to be used with access token.\nBy default the scope includes all permissions configured during\nthe application registration phase\n"
      },
      "refresh_token": {
        "type": "string",
        "description": "For `refresh_token` grant type only. Previously issued refresh token.\n"
      },
      "endpoint_id": {
        "type": "string",
        "description": "The unique identifier of a client application instance. If not\nspecified, the derived or auto generated value will be used\n"
      },
      "pin": {
        "type": "string"
      },
      "client_id": {
        "type": "string",
        "description": "OAuth client identifier (if not specified via `Authorization` header)"
      },
      "account_id": {
        "type": "string"
      },
      "partner_account_id": {
        "type": "string"
      },
      "client_assertion_type": {
        "type": "string",
        "description": "Client assertion type"
      },
      "client_assertion": {
        "type": "string",
        "description": "Client assertion"
      },
      "assertion": {
        "type": "string",
        "description": "For `jwt_bearer` grant type only. Assertion"
      },
      "brand_id": {
        "type": "string"
      },
      "code_verifier": {
        "type": "string",
        "description": "PKCE code verifier"
      },
      "device_code": {
        "type": "string"
      }
    }
  },
  {
    "name": "AuthorizeRequest",
    "description": "Request body for operation authorize2",
    "type": "object",
    "required": [
      "client_id",
      "redirect_uri",
      "response_type"
    ],
    "properties": {
      "response_type": {
        "type": "string",
        "description": "Determines authorization flow:\n- **code** - Authorization Code,\n- **token** - Implicit\n",
        "enum": [
          "code",
          "token"
        ]
      },
      "redirect_uri": {
        "type": "string",
        "format": "uri",
        "description": "This is a callback URI which determines where the response\nis sent. The value of this parameter must exactly match one of\nthe URIs you have provided for your app upon registration\n"
      },
      "client_id": {
        "type": "string",
        "description": "Identifier (key) of a client application"
      },
      "state": {
        "type": "string",
        "description": "Client state. Returned back to the client at the end of the flow"
      },
      "brand_id": {
        "type": "string",
        "description": "Brand identifier. If it is not provided in request,\nserver will try to determine brand from client app profile. The\ndefault value is `1210` - RingCentral US brand ID\n",
        "default": "1210"
      },
      "display": {
        "type": "string",
        "description": "Style of login form. The default value is 'page'. The\n'popup' and 'touch' values are featured for mobile applications\n",
        "enum": [
          "page",
          "popup",
          "touch",
          "mobile"
        ],
        "default": "page"
      },
      "prompt": {
        "type": "string",
        "description": "Specifies which login form will be displayed. Space-separated\nset of the following values:\n- **login** - RingCentral native login form,\n- **sso** - Single Sign-On login form,\n- **consent** - form to show the requested scope and prompt user for consent.\n\nEither `login` or `sso` (or both) must be specified. The default\nvalue is `login sso`\n",
        "default": "login sso"
      },
      "localeId": {
        "type": "string",
        "description": "Locale code of a language. Overwrites 'Accept-Language' header value.\n\nDEPRECATED: `ui_locales` parameter should be used instead\n",
        "deprecated": true,
        "example": "en-US"
      },
      "ui_locales": {
        "type": "string",
        "description": "Locale code of a language. Overwrites 'Accept-Language' header value and 'localeId' parameter value",
        "example": "en-US"
      },
      "ui_options": {
        "type": "string",
        "description": "User interface options (space-separated)"
      },
      "scope": {
        "type": "string",
        "description": "OAuth scope"
      },
      "accept_language": {
        "type": "string"
      },
      "request": {
        "type": "string"
      },
      "request_uri": {
        "type": "string",
        "format": "uri"
      },
      "nonce": {
        "type": "string"
      },
      "code_challenge": {
        "type": "string"
      },
      "code_challenge_method": {
        "type": "string",
        "enum": [
          "plain",
          "S256"
        ]
      }
    }
  },
  {
    "name": "RevokeTokenRequest",
    "description": "Request body for operation revokeToken",
    "type": "object",
    "required": [
      "token"
    ],
    "properties": {
      "token": {
        "type": "string",
        "description": "Access or refresh token to be revoked"
      },
      "client_assertion_type": {
        "type": "string",
        "description": "Client assertion type"
      },
      "client_assertion": {
        "type": "string",
        "description": "Client assertion"
      }
    }
  },
  {
    "type": "object",
    "required": [
      "attachment"
    ],
    "properties": {
      "attachment": {
        "type": "string",
        "description": "Audio file that will be used as a prompt. Attachment cannot be empty, only audio files are supported",
        "format": "binary"
      },
      "name": {
        "type": "string",
        "description": "Description of file contents."
      }
    },
    "name": "CreateIVRPromptRequest",
    "description": "Request body for operation createIVRPrompt"
  },
  {
    "type": "object",
    "required": [
      "binary",
      "type"
    ],
    "properties": {
      "type": {
        "type": "string",
        "description": "Type of a greeting, specifying the case when the greeting\nis played.\n",
        "enum": [
          "Company",
          "StartRecording",
          "StopRecording",
          "AutomaticRecording",
          "TemplateGreeting"
        ]
      },
      "languageId": {
        "type": "string",
        "description": "Internal identifier of a language. See Get Language\nList\n"
      },
      "binary": {
        "type": "string",
        "description": "Media file to upload",
        "format": "binary"
      },
      "answeringRule": {
        "$ref": "#/components/schemas/GreetingAnsweringRuleId"
      }
    },
    "name": "CreateCompanyGreetingRequest",
    "description": "Request body for operation createCompanyGreeting"
  },
  {
    "type": "object",
    "required": [
      "profilePic"
    ],
    "properties": {
      "profilePic": {
        "type": "string",
        "description": "Profile image file size cannot exceed 2Mb. Supported formats are: JPG/JPEG, GIF and PNG",
        "format": "binary"
      }
    },
    "name": "CreateUserMeetingProfileImageRequest",
    "description": "Request body for operation createUserMeetingProfileImage"
  },
  {
    "type": "object",
    "properties": {
      "image": {
        "type": "string",
        "format": "binary"
      }
    },
    "name": "UpdateUserProfileImageRequest",
    "description": "Request body for operation updateUserProfileImage"
  },
  {
    "type": "object",
    "required": [
      "image"
    ],
    "properties": {
      "image": {
        "type": "string",
        "format": "binary"
      }
    },
    "name": "CreateUserProfileImageRequest",
    "description": "Request body for operation createUserProfileImage"
  },
  {
    "type": "object",
    "required": [
      "attachments",
      "to"
    ],
    "properties": {
      "faxResolution": {
        "type": "string",
        "description": "Fax only. Resolution of a fax message. 'High' for black and\nwhite image scanned at 200 dpi, 'Low' for black and white image scanned\nat 100 dpi\n",
        "enum": [
          "High",
          "Low"
        ]
      },
      "to": {
        "type": "array",
        "description": "Recipient's phone number",
        "items": {
          "$ref": "#/components/schemas/FaxReceiver"
        }
      },
      "sendTime": {
        "type": "string",
        "description": "Timestamp to send a fax at. If not specified, current or the past\na fax message is sent immediately\n",
        "format": "date-time"
      },
      "isoCode": {
        "type": "string",
        "description": "ISO Code. e.g UK"
      },
      "coverIndex": {
        "type": "integer",
        "description": "Cover page identifier. If `coverIndex` is set to '0' (zero) a cover page\nis not attached. For a list of available cover page identifiers (1-13)\nplease call the Fax Cover Pages method. If not specified, the default cover\npage is attached (which is configured in 'Outbound Fax Settings')\n",
        "format": "int32"
      },
      "coverPageText": {
        "type": "string",
        "description": "Cover page text, entered by a fax sender and printed\non a cover page. Maximum length is limited to 1024 symbols\n"
      },
      "attachments": {
        "type": "array",
        "items": {
          "type": "string",
          "format": "binary",
          "description": "File to upload"
        }
      }
    },
    "name": "CreateFaxMessageRequest",
    "description": "Request body for operation createFaxMessage"
  },
  {
    "name": "CreateSMSMessage",
    "description": "Request body for operation createSMSMessage",
    "required": [
      "from",
      "text",
      "to"
    ],
    "type": "object",
    "properties": {
      "from": {
        "$ref": "#/components/schemas/MessageStoreCallerInfoRequest"
      },
      "to": {
        "type": "array",
        "description": "Message receiver(s) information. The `phoneNumber` value is required",
        "items": {
          "$ref": "#/components/schemas/MessageStoreCallerInfoRequest"
        }
      },
      "text": {
        "type": "string",
        "description": "Text of a message. Max length is 1000 symbols (2-byte UTF-16\nencoded). If a character is encoded in 4 bytes in UTF-16 it is treated\nas 2 characters, thus restricting the maximum message length to 500 symbols\n"
      },
      "country": {
        "$ref": "#/components/schemas/MessageCountryInfo"
      }
    }
  },
  {
    "name": "CreateMMSMessage",
    "description": "Request body for operation createMMS",
    "required": [
      "attachments",
      "from",
      "to"
    ],
    "type": "object",
    "properties": {
      "from": {
        "$ref": "#/components/schemas/MessageStoreCallerInfoRequest"
      },
      "to": {
        "type": "array",
        "description": "Message receiver(s) information. The `phoneNumber` value is required",
        "items": {
          "$ref": "#/components/schemas/MessageStoreCallerInfoRequest"
        }
      },
      "text": {
        "type": "string",
        "description": "Text of a message. Max length is 1000 symbols (2-byte UTF-16\nencoded). If a character is encoded in 4 bytes in UTF-16 it is treated\nas 2 characters, thus restricting the maximum message length to 500 symbols\n"
      },
      "country": {
        "$ref": "#/components/schemas/MessageCountryInfo"
      },
      "attachments": {
        "type": "array",
        "description": "Media file(s) to upload",
        "items": {
          "type": "string",
          "format": "binary"
        }
      }
    }
  },
  {
    "type": "object",
    "required": [
      "answeringRuleId",
      "binary",
      "type"
    ],
    "properties": {
      "type": {
        "type": "string",
        "description": "Type of a greeting, specifying the case when the greeting is played.",
        "enum": [
          "Introductory",
          "Announcement",
          "ConnectingMessage",
          "ConnectingAudio",
          "Voicemail",
          "Unavailable",
          "HoldMusic",
          "TemplateGreeting"
        ]
      },
      "binary": {
        "type": "string",
        "description": "Media file to upload",
        "format": "binary"
      },
      "answeringRule": {
        "$ref": "#/components/schemas/GreetingAnsweringRuleId"
      }
    },
    "name": "CreateCustomUserGreetingRequest",
    "description": "Request body for operation createCustomUserGreeting"
  },
  {
    "type": "object",
    "required": [
      "body"
    ],
    "properties": {
      "body": {
        "type": "string",
        "description": "The file (binary or multipart/form-data) to upload",
        "format": "binary"
      }
    },
    "name": "CreateGlipFileNewRequest",
    "description": "Request body for operation createGlipFileNew"
  },
  {
    "type": "object",
    "properties": {
      "uri": {
        "type": "string",
        "format": "uri",
        "description": "Canonical URI of API version"
      },
      "versionString": {
        "type": "string",
        "description": "Version of the RingCentral REST API"
      },
      "releaseDate": {
        "type": "string",
        "format": "date-time",
        "description": "Release date of this version"
      },
      "uriString": {
        "type": "string",
        "description": "URI part determining the current version"
      }
    },
    "example": {
      "uri": "https://platform.ringcentral.com/restapi/v1.0",
      "versionString": "1.0.34",
      "releaseDate": "2018-02-09T00:00:00.000Z",
      "uriString": "v1.0"
    },
    "name": "ApiVersionInfo"
  },
  {
    "type": "object",
    "properties": {
      "uri": {
        "type": "string",
        "format": "uri",
        "description": "Canonical URI of the API version"
      },
      "apiVersions": {
        "type": "array",
        "description": "Full API version information: uri, number, release date",
        "items": {
          "$ref": "#/components/schemas/ApiVersionInfo"
        }
      },
      "serverVersion": {
        "type": "string",
        "description": "Server version"
      },
      "serverRevision": {
        "type": "string",
        "description": "Server revision"
      }
    },
    "example": {
      "uri": "https://platform.ringcentral.com/restapi",
      "apiVersions": [
        {
          "uri": "https://platform.ringcentral.com/restapi/v1.0",
          "versionString": "1.0.34",
          "releaseDate": "2018-02-09T00:00:00.000Z",
          "uriString": "v1.0"
        }
      ],
      "serverVersion": "10.0.4.7854",
      "serverRevision": "32f2a96b769c"
    },
    "name": "ApiVersionsList"
  },
  {
    "type": "object",
    "required": [
      "grant_type"
    ],
    "properties": {
      "username": {
        "type": "string",
        "description": "For `password` grant type only. User login name: email or phone number in E.164 format\n"
      },
      "password": {
        "type": "string",
        "description": "For `password` grant type only. User's password",
        "format": "password"
      },
      "extension": {
        "type": "string",
        "deprecated": true,
        "description": "For `password` grant type only. Optional. Extension short number. If company number\nis specified as a username, and extension is not specified, the\nserver will attempt to authenticate client as main company administrator\n\nDEPRECATED: use extension number embedded into username string like `+16501234567*101`\n"
      },
      "grant_type": {
        "type": "string",
        "description": "Grant type",
        "enum": [
          "authorization_code",
          "password",
          "refresh_token",
          "client_credentials",
          "urn:ietf:params:oauth:grant-type:jwt-bearer",
          "urn:ietf:params:oauth:grant-type:device_code"
        ]
      },
      "code": {
        "type": "string",
        "description": "For `authorization_code` grant type only. User's authorization code"
      },
      "redirect_uri": {
        "type": "string",
        "format": "uri",
        "description": "For `authorization_code` grant type only. This is a callback URI which determines where the response\nis sent. The value of this parameter must exactly match one of\nthe URIs you have provided for your app upon registration\n"
      },
      "access_token_ttl": {
        "maximum": 3600,
        "minimum": 600,
        "type": "integer",
        "description": "Access token lifetime in seconds",
        "format": "int32",
        "default": 3600
      },
      "refresh_token_ttl": {
        "maximum": 604800,
        "type": "integer",
        "description": "Refresh token lifetime in seconds",
        "format": "int32",
        "default": 604800
      },
      "scope": {
        "type": "string",
        "description": "List of application permissions to be used with access token.\nBy default the scope includes all permissions configured during\nthe application registration phase\n"
      },
      "refresh_token": {
        "type": "string",
        "description": "For `refresh_token` grant type only. Previously issued refresh token.\n"
      },
      "endpoint_id": {
        "type": "string",
        "description": "The unique identifier of a client application instance. If not\nspecified, the derived or auto generated value will be used\n"
      },
      "pin": {
        "type": "string"
      },
      "client_id": {
        "type": "string",
        "description": "OAuth client identifier (if not specified via `Authorization` header)"
      },
      "account_id": {
        "type": "string"
      },
      "partner_account_id": {
        "type": "string"
      },
      "client_assertion_type": {
        "type": "string",
        "description": "Client assertion type"
      },
      "client_assertion": {
        "type": "string",
        "description": "Client assertion"
      },
      "assertion": {
        "type": "string",
        "description": "For `jwt_bearer` grant type only. Assertion"
      },
      "brand_id": {
        "type": "string"
      },
      "code_verifier": {
        "type": "string",
        "description": "PKCE code verifier"
      },
      "device_code": {
        "type": "string"
      }
    },
    "name": "GetTokenRequest"
  },
  {
    "type": "object",
    "required": [
      "access_token",
      "expires_in",
      "scope",
      "token_type"
    ],
    "properties": {
      "access_token": {
        "type": "string",
        "description": "OAuth access token to pass to subsequent API requests",
        "example": "U1BCMDFUMDRKV1MwMXxzLFSvXdw5PHMsVLEn_MrtcyxUsw"
      },
      "expires_in": {
        "type": "integer",
        "format": "int32",
        "description": "Issued access token TTL (time-to-live) in seconds",
        "example": 7199
      },
      "refresh_token": {
        "type": "string",
        "description": "OAuth refresh token (in case the one was issued)\n",
        "example": "U1BCMDFUMDRKV1MwMXxzLFL4ec6A0XMsUv9wLriecyxS_w"
      },
      "refresh_token_expires_in": {
        "type": "integer",
        "format": "int32",
        "description": "Issued refresh token TTL (time-to-live) in seconds",
        "example": 604799
      },
      "scope": {
        "type": "string",
        "description": "List of permissions (space separated) granted to the application with this access token\n",
        "example": "AccountInfo CallLog ExtensionInfo Messages SMS"
      },
      "token_type": {
        "type": "string",
        "description": "Type of token. The only supported value is `bearer`. This value should be used when specifying access token in `Authorization` header of subsequent API requests",
        "example": "bearer"
      },
      "owner_id": {
        "type": "string",
        "description": "Token owner (extension/user) identifier",
        "example": "256440016"
      },
      "endpoint_id": {
        "type": "string",
        "description": "Application instance identifier",
        "example": "8zXq6oaLT7WvwWITlGiA1A"
      },
      "id_token": {
        "type": "string",
        "description": "OIDC ID token (if OpenId Connect flow was activated during authorization)"
      }
    },
    "name": "TokenInfo"
  },
  {
    "type": "object",
    "required": [
      "client_id",
      "redirect_uri",
      "response_type"
    ],
    "properties": {
      "response_type": {
        "type": "string",
        "description": "Determines authorization flow:\n- **code** - Authorization Code,\n- **token** - Implicit\n",
        "enum": [
          "code",
          "token"
        ]
      },
      "redirect_uri": {
        "type": "string",
        "format": "uri",
        "description": "This is a callback URI which determines where the response\nis sent. The value of this parameter must exactly match one of\nthe URIs you have provided for your app upon registration\n"
      },
      "client_id": {
        "type": "string",
        "description": "Identifier (key) of a client application"
      },
      "state": {
        "type": "string",
        "description": "Client state. Returned back to the client at the end of the flow"
      },
      "brand_id": {
        "type": "string",
        "description": "Brand identifier. If it is not provided in request,\nserver will try to determine brand from client app profile. The\ndefault value is `1210` - RingCentral US brand ID\n",
        "default": "1210"
      },
      "display": {
        "type": "string",
        "description": "Style of login form. The default value is 'page'. The\n'popup' and 'touch' values are featured for mobile applications\n",
        "enum": [
          "page",
          "popup",
          "touch",
          "mobile"
        ],
        "default": "page"
      },
      "prompt": {
        "type": "string",
        "description": "Specifies which login form will be displayed. Space-separated\nset of the following values:\n- **login** - RingCentral native login form,\n- **sso** - Single Sign-On login form,\n- **consent** - form to show the requested scope and prompt user for consent.\n\nEither `login` or `sso` (or both) must be specified. The default\nvalue is `login sso`\n",
        "default": "login sso"
      },
      "localeId": {
        "type": "string",
        "description": "Locale code of a language. Overwrites 'Accept-Language' header value.\n\nDEPRECATED: `ui_locales` parameter should be used instead\n",
        "deprecated": true,
        "example": "en-US"
      },
      "ui_locales": {
        "type": "string",
        "description": "Locale code of a language. Overwrites 'Accept-Language' header value and 'localeId' parameter value",
        "example": "en-US"
      },
      "ui_options": {
        "type": "string",
        "description": "User interface options (space-separated)"
      },
      "scope": {
        "type": "string",
        "description": "OAuth scope"
      },
      "accept_language": {
        "type": "string"
      },
      "request": {
        "type": "string"
      },
      "request_uri": {
        "type": "string",
        "format": "uri"
      },
      "nonce": {
        "type": "string"
      },
      "code_challenge": {
        "type": "string"
      },
      "code_challenge_method": {
        "type": "string",
        "enum": [
          "plain",
          "S256"
        ]
      }
    },
    "name": "AuthorizeRequest"
  },
  {
    "type": "object",
    "required": [
      "token"
    ],
    "properties": {
      "token": {
        "type": "string",
        "description": "Access or refresh token to be revoked"
      },
      "client_assertion_type": {
        "type": "string",
        "description": "Client assertion type"
      },
      "client_assertion": {
        "type": "string",
        "description": "Client assertion"
      }
    },
    "name": "RevokeTokenRequest"
  },
  {
    "type": "object",
    "properties": {
      "id": {
        "type": "integer",
        "format": "int64",
        "description": "Internal identifier of an account"
      },
      "uri": {
        "type": "string",
        "format": "uri",
        "description": "Canonical URI of an account"
      },
      "bsid": {
        "type": "string",
        "description": "Internal identifier of an account in the billing system\n"
      },
      "mainNumber": {
        "type": "string",
        "description": "Main phone number of the current account\n"
      },
      "operator": {
        "$ref": "#/components/schemas/AccountOperatorInfo"
      },
      "partnerId": {
        "type": "string",
        "description": "Additional account identifier, created by partner application\nand applied on client side\n"
      },
      "serviceInfo": {
        "$ref": "#/components/schemas/ServiceInfo"
      },
      "setupWizardState": {
        "type": "string",
        "description": "Specifies account configuration wizard state (web service setup)\n",
        "default": "NotStarted",
        "enum": [
          "NotStarted",
          "Incomplete",
          "Completed"
        ]
      },
      "signupInfo": {
        "$ref": "#/components/schemas/SignupInfoResource"
      },
      "status": {
        "type": "string",
        "description": "Status of the current account",
        "enum": [
          "Initial",
          "Confirmed",
          "Unconfirmed",
          "Disabled"
        ]
      },
      "statusInfo": {
        "$ref": "#/components/schemas/AccountStatusInfo"
      },
      "regionalSettings": {
        "$ref": "#/components/schemas/AccountRegionalSettings"
      },
      "federated": {
        "type": "boolean",
        "description": "Specifies whether an account is included into any federation\nof accounts or not\n"
      },
      "outboundCallPrefix": {
        "type": "integer",
        "format": "int32",
        "description": "If outbound call prefix is not specified, or set to null (0),\nthen the parameter is not returned; the supported value range is 2-9\n"
      },
      "cfid": {
        "type": "string",
        "description": "Customer facing identifier. Returned for accounts with the\nturned off PBX features. Equals to main company number in\n[E.164](https://www.itu.int/rec/T-REC-E.164-201011-I)\n(without ''+'' sign)format\n"
      },
      "limits": {
        "$ref": "#/components/schemas/AccountLimits"
      }
    },
    "name": "GetAccountInfoResponse"
  },
  {
    "type": "object",
    "properties": {
      "id": {
        "type": "integer",
        "format": "int64",
        "description": "Internal identifier of a currency"
      },
      "code": {
        "type": "string",
        "description": "Official code of a currency"
      },
      "name": {
        "type": "string",
        "description": "Official name of a currency"
      },
      "symbol": {
        "type": "string",
        "description": "Graphic symbol of a currency"
      },
      "minorSymbol": {
        "type": "string",
        "description": "Minor graphic symbol of a currency"
      }
    },
    "description": "Currency information",
    "name": "CurrencyInfo"
  },
  {
    "type": "object",
    "description": "Operator extension information. This extension will receive\nall calls and messages addressed to an operator.\n",
    "properties": {
      "uri": {
        "type": "string",
        "format": "uri",
        "description": "Link to an operator extension resource"
      },
      "id": {
        "type": "integer",
        "format": "int64",
        "description": "Internal identifier of an operator extension"
      },
      "extensionNumber": {
        "type": "string",
        "description": "Number of an operator extension"
      }
    },
    "name": "AccountOperatorInfo"
  },
  {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "Internal identifier of a timezone"
      },
      "uri": {
        "type": "string",
        "format": "uri",
        "description": "Canonical URI of a timezone"
      },
      "name": {
        "type": "string",
        "description": "Short name of a timezone"
      },
      "description": {
        "type": "string",
        "description": "Meaningful description of the timezone"
      },
      "bias": {
        "type": "string"
      }
    },
    "description": "Extension timezone information",
    "name": "TimezoneInfo"
  },
  {
    "type": "object",
    "properties": {
      "freeSoftPhoneLinesPerExtension": {
        "type": "integer",
        "format": "int32",
        "description": "Max number of free softphone phone lines per user extension\n"
      },
      "meetingSize": {
        "type": "integer",
        "format": "int32",
        "description": "Max number of participants in RingCentral meeting hosted by\nthis account's user\n"
      },
      "cloudRecordingStorage": {
        "type": "integer",
        "format": "int32",
        "description": "Meetings recording cloud storage limitation in Gb\n"
      },
      "maxMonitoredExtensionsPerUser": {
        "type": "integer",
        "format": "int32",
        "description": "Max number of extensions which can be included in the list\nof users monitored for Presence\n"
      },
      "maxExtensionNumberLength": {
        "type": "integer",
        "format": "int32",
        "description": "Max length of extension numbers of an account; the supported\nvalue is up to 8 symbols, depends on account type\n"
      },
      "siteCodeLength": {
        "type": "integer",
        "format": "int32",
        "description": "Length of a site code"
      },
      "shortExtensionNumberLength": {
        "type": "integer",
        "format": "int32",
        "description": "Length of a short extension number"
      }
    },
    "description": "Limits which are effective for the account",
    "name": "AccountLimits"
  },
  {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "Internal identifier of a language set as regional"
      },
      "localeCode": {
        "type": "string",
        "description": "Localization code of a language set as regional"
      },
      "name": {
        "type": "string",
        "description": "Official name of a language set as regional"
      }
    },
    "description": "Information on a language set as regional",
    "name": "RegionalLanguageInfo"
  },
  {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "Internal identifier of a billing plan"
      },
      "name": {
        "type": "string",
        "description": "Billing plan name"
      },
      "durationUnit": {
        "type": "string",
        "description": "Duration period",
        "enum": [
          "Day",
          "Month",
          "Year"
        ]
      },
      "duration": {
        "type": "integer",
        "format": "int32",
        "description": "Number of duration units"
      },
      "type": {
        "type": "string",
        "description": "Billing plan type",
        "enum": [
          "Initial",
          "Regular",
          "Suspended",
          "Trial",
          "TrialNoCC",
          "Free"
        ]
      },
      "includedPhoneLines": {
        "type": "integer",
        "format": "int32",
        "description": "Included digital lines count"
      }
    },
    "description": "Information on account billing plan",
    "name": "BillingPlanInfo"
  },
  {
    "type": "object",
    "properties": {
      "tosAccepted": {
        "type": "boolean",
        "default": false
      },
      "signupState": {
        "type": "array",
        "items": {
          "type": "string",
          "enum": [
            "AccountCreated",
            "BillingEntered",
            "CreditCardApproved",
            "AccountConfirmed",
            "PhoneVerificationRequired",
            "PhoneVerificationPassed"
          ]
        }
      },
      "verificationReason": {
        "type": "string",
        "enum": [
          "CC_Failed",
          "Phone_Suspicious",
          "CC_Phone_Not_Match",
          "AVS_Not_Available",
          "MaxMind",
          "CC_Blacklisted",
          "Email_Blacklisted",
          "Phone_Blacklisted",
          "Cookie_Blacklisted",
          "Device_Blacklisted",
          "IP_Blacklisted",
          "Agent_Instance_Blacklisted",
          "Charge_Limit",
          "Other_Country",
          "Unknown"
        ]
      },
      "marketingAccepted": {
        "type": "boolean",
        "description": "Updates 'Send Marketing Information' flag on web interface\n"
      }
    },
    "description": "Account sign up data",
    "name": "SignupInfoResource"
  },
  {
    "type": "object",
    "properties": {
      "homeCountry": {
        "$ref": "#/components/schemas/CountryInfoShortModel"
      },
      "timezone": {
        "$ref": "#/components/schemas/TimezoneInfo"
      },
      "language": {
        "$ref": "#/components/schemas/RegionalLanguageInfo"
      },
      "greetingLanguage": {
        "$ref": "#/components/schemas/GreetingLanguageInfo"
      },
      "formattingLocale": {
        "$ref": "#/components/schemas/FormattingLocaleInfo"
      },
      "timeFormat": {
        "type": "string",
        "description": "Time format setting. The default value is '12h' = ['12h', '24h']",
        "enum": [
          "12h",
          "24h"
        ]
      },
      "currency": {
        "$ref": "#/components/schemas/CurrencyInfo"
      }
    },
    "description": "Account level region data (web service Auto-Receptionist settings)\n",
    "name": "AccountRegionalSettings"
  },
  {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "Internal identifier of a greeting language"
      },
      "localeCode": {
        "type": "string",
        "description": "Localization code of a greeting language"
      },
      "name": {
        "type": "string",
        "description": "Official name of a greeting language"
      }
    },
    "description": "Information on language used for telephony greetings\n",
    "name": "GreetingLanguageInfo"
  },
  {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "Internal identifier of a service plan"
      },
      "name": {
        "type": "string",
        "description": "Name of a service plan"
      },
      "edition": {
        "type": "string",
        "description": "Edition of a service plan"
      },
      "freemiumProductType": {
        "type": "string",
        "enum": [
          "Freyja",
          "Phoenix"
        ]
      }
    },
    "description": "Information on account service plan",
    "name": "ServicePlanInfo"
  },
  {
    "type": "object",
    "properties": {
      "uri": {
        "type": "string",
        "format": "uri",
        "description": "Canonical URI of a service info resource"
      },
      "billingPlan": {
        "$ref": "#/components/schemas/BillingPlanInfo"
      },
      "brand": {
        "$ref": "#/components/schemas/BrandInfo"
      },
      "servicePlan": {
        "$ref": "#/components/schemas/ServicePlanInfo"
      },
      "targetServicePlan": {
        "$ref": "#/components/schemas/TargetServicePlanInfo"
      },
      "contractedCountry": {
        "$ref": "#/components/schemas/CountryInfoShortModel"
      }
    },
    "description": "Account service information, including brand, service plan and\nbilling plan\n",
    "name": "ServiceInfo"
  },
  {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "Internal identifier of a target service plan"
      },
      "name": {
        "type": "string",
        "description": "Name of a target service plan"
      },
      "edition": {
        "type": "string",
        "description": "Edition of a service plan"
      },
      "freemiumProductType": {
        "type": "string",
        "enum": [
          "Freyja",
          "Phoenix"
        ]
      }
    },
    "description": "Information on account target service plan",
    "name": "TargetServicePlanInfo"
  },
  {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "Internal identifier of a formatting language"
      },
      "localeCode": {
        "type": "string",
        "description": "Localization code of a formatting language"
      },
      "name": {
        "type": "string",
        "description": "Official name of a formatting language"
      }
    },
    "description": "Formatting language preferences for numbers, dates and currencies\n",
    "name": "FormattingLocaleInfo"
  },
  {
    "type": "object",
    "properties": {
      "comment": {
        "type": "string",
        "description": "A free-form user comment, describing the status change reason\n"
      },
      "reason": {
        "type": "string",
        "description": "Type of suspension",
        "enum": [
          "SuspendedVoluntarily",
          "SuspendedInvoluntarily",
          "UserResumed"
        ]
      },
      "till": {
        "type": "string",
        "description": "Date until which an account will get deleted. The default\nvalue is 30 days since the current date\n"
      }
    },
    "description": "Status information (reason, comment, lifetime). Returned for 'Disabled'\nstatus only\n",
    "name": "AccountStatusInfo"
  },
  {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "Internal identifier of a country"
      },
      "uri": {
        "type": "string",
        "format": "uri",
        "description": "Canonical URI of a country resource"
      }
    },
    "name": "CountryInfoMinimalModel"
  },
  {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "Internal identifier of a brand"
      },
      "name": {
        "type": "string",
        "description": "Brand name, for example  RingCentral UK ,  ClearFax "
      },
      "homeCountry": {
        "$ref": "#/components/schemas/CountryInfoShortModel"
      }
    },
    "description": "Information on account brand",
    "name": "BrandInfo"
  },
  {
    "name": "CountryInfoBasicModel",
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "Internal identifier of a country"
      },
      "uri": {
        "type": "string",
        "format": "uri",
        "description": "Canonical URI of a country resource"
      },
      "name": {
        "type": "string",
        "description": "The official name of a country"
      }
    }
  },
  {
    "name": "CountryInfoShortModel",
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "Internal identifier of a country"
      },
      "uri": {
        "type": "string",
        "format": "uri",
        "description": "Canonical URI of a country resource"
      },
      "name": {
        "type": "string",
        "description": "The official name of a country"
      },
      "isoCode": {
        "type": "string",
        "description": "A ISO country code value complying with the\n[ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)\nformat.\n"
      },
      "callingCode": {
        "type": "string",
        "description": "Country calling code defined by [ITU-T](http://en.wikipedia.org/wiki/ITU-T)\nrecommendations [E.123](http://en.wikipedia.org/wiki/E.123) and\n[E.164](http://en.wikipedia.org/wiki/E.164),\nsee [Calling Codes](http://en.wikipedia.org/wiki/List_of_country_calling_codes)\n"
      }
    }
  },
  {
    "type": "object",
    "properties": {
      "schedule": {
        "$ref": "#/components/schemas/CompanyBusinessHoursScheduleInfo"
      }
    },
    "example": {
      "schedule": {
        "weeklyRanges": {
          "tuesday": [
            {
              "from": "09:00",
              "to": "18:00"
            }
          ],
          "friday": [
            {
              "from": "09:00",
              "to": "18:00"
            }
          ],
          "thursday": [
            {
              "from": "09:00",
              "to": "18:00"
            }
          ],
          "wednesday": [
            {
              "from": "09:00",
              "to": "18:00"
            }
          ],
          "monday": [
            {
              "from": "09:00",
              "to": "18:00"
            }
          ]
        }
      }
    },
    "name": "CompanyBusinessHoursUpdateRequest"
  },
  {
    "type": "object",
    "properties": {
      "monday": {
        "type": "array",
        "description": "Time intervals for a particular day",
        "items": {
          "$ref": "#/components/schemas/TimeInterval"
        }
      },
      "tuesday": {
        "type": "array",
        "description": "Time intervals for a particular day",
        "items": {
          "$ref": "#/components/schemas/TimeInterval"
        }
      },
      "wednesday": {
        "type": "array",
        "description": "Time intervals for a particular day",
        "items": {
          "$ref": "#/components/schemas/TimeInterval"
        }
      },
      "thursday": {
        "type": "array",
        "description": "Time intervals for a particular day",
        "items": {
          "$ref": "#/components/schemas/TimeInterval"
        }
      },
      "friday": {
        "type": "array",
        "description": "Time intervals for a particular day",
        "items": {
          "$ref": "#/components/schemas/TimeInterval"
        }
      },
      "saturday": {
        "type": "array",
        "description": "Time intervals for a particular day",
        "items": {
          "$ref": "#/components/schemas/TimeInterval"
        }
      },
      "sunday": {
        "type": "array",
        "description": "Time intervals for a particular day",
        "items": {
          "$ref": "#/components/schemas/TimeInterval"
        }
      }
    },
    "description": "Weekly schedule",
    "name": "WeeklyScheduleInfo"
  },
  {
    "type": "object",
    "properties": {
      "uri": {
        "type": "string",
        "format": "uri",
        "description": "Canonical URI of a business-hours resource "
      },
      "schedule": {
        "$ref": "#/components/schemas/CompanyBusinessHoursScheduleInfo"
      }
    },
    "example": {
      "uri": "https://platform.ringcentral.com/restapi/v1.0/account/401800045008/business-hours",
      "schedule": {
        "weeklyRanges": {
          "wednesday": [
            {
              "from": "09:00",
              "to": "18:00"
            }
          ],
          "friday": [
            {
              "from": "09:00",
              "to": "18:00"
            }
          ],
          "tuesday": [
            {
              "from": "09:00",
              "to": "18:00"
            }
          ],
          "monday": [
            {
              "from": "09:00",
              "to": "18:00"
            }
          ],
          "thursday": [
            {
              "from": "09:00",
              "to": "18:00"
            }
          ]
        }
      }
    },
    "name": "CompanyBusinessHours"
  },
  {
    "type": "object",
    "properties": {
      "from": {
        "type": "string",
        "description": "Time in format hh:mm"
      },
      "to": {
        "type": "string",
        "description": "Time in format hh:mm"
      }
    },
    "name": "TimeInterval"
  },
  {
    "type": "object",
    "properties": {
      "weeklyRanges": {
        "$ref": "#/components/schemas/WeeklyScheduleInfo"
      }
    },
    "description": "Schedule when an answering rule is applied",
    "name": "CompanyBusinessHoursScheduleInfo"
  },
  {
    "type": "object",
    "description": "Standard error response which may include parameterized errors",
    "required": [
      "errors"
    ],
    "properties": {
      "errors": {
        "type": "array",
        "description": "The array of errors (there will be just one in the most of cases)",
        "minItems": 1,
        "items": {
          "$ref": "#/components/schemas/ApiErrorWithParameter"
        }
      }
    },
    "name": "ParameterizedErrorResponseModel"
  },
  {
    "type": "object",
    "description": "Standard error response model which is returned in case of any unsuccessful operation",
    "required": [
      "errors"
    ],
    "properties": {
      "errors": {
        "type": "array",
        "description": "The array of errors (there will be just one in the most of cases)",
        "minItems": 1,
        "items": {
          "$ref": "#/components/schemas/ApiError"
        }
      }
    },
    "name": "ApiErrorResponseModel"
  },
  {
    "type": "object",
    "description": "Generalized API error structure suitable for any error type",
    "required": [
      "errorCode",
      "message"
    ],
    "properties": {
      "errorCode": {
        "type": "string",
        "description": "Logical error code (typically, 3 letters followed with number, dash separated)",
        "example": "XXX-123"
      },
      "message": {
        "type": "string",
        "description": "User-friendly error message",
        "example": "Something went wrong"
      }
    },
    "name": "ApiError"
  },
  {
    "description": "Generalized API error structure suitable for any error type",
    "name": "ApiErrorWithParameter",
    "type": "object",
    "required": [
      "errorCode",
      "message"
    ],
    "properties": {
      "errorCode": {
        "type": "string",
        "description": "Logical error code (typically, 3 letters followed with number, dash separated)",
        "example": "XXX-123"
      },
      "message": {
        "type": "string",
        "description": "User-friendly error message",
        "example": "Something went wrong"
      },
      "parameterName": {
        "type": "string",
        "description": "The name of the API parameter/attribute which caused the error"
      },
      "parameterValue": {
        "type": "string",
        "description": "The value of the API parameter/attribute which caused the error"
      }
    }
  },
  {
    "type": "object",
    "properties": {
      "street": {
        "type": "string"
      },
      "street2": {
        "type": "string"
      },
      "city": {
        "type": "string"
      },
      "zip": {
        "type": "string"
      },
      "customerName": {
        "type": "string"
      },
      "state": {
        "type": "string",
        "description": "State/province name"
      },
      "stateId": {
        "type": "string",
        "description": "Internal identifier of a state"
      },
      "stateIsoCode": {
        "type": "string",
        "description": "ISO code of a state"
      },
      "stateName": {
        "type": "string",
        "description": "Full name of a state"
      },
      "countryId": {
        "type": "string",
        "description": "Internal identifier of a country"
      },
      "countryIsoCode": {
        "type": "string",
        "description": "ISO code of a country"
      },
      "country": {
        "type": "string",
        "description": "Country name"
      },
      "countryName": {
        "type": "string",
        "description": "Full name of a country"
      },
      "outOfCountry": {
        "type": "boolean",
        "description": "Specifies if emergency address is out of country"
      },
      "syncStatus": {
        "type": "string",
        "description": "Resulting status of emergency address synchronization. Returned\nif `syncEmergencyAddress` parameter is set to 'True'\n",
        "enum": [
          "Verified",
          "Updated",
          "Deleted",
          "NotRequired",
          "Unsupported",
          "Failed"
        ]
      },
      "additionalCustomerName": {
        "type": "string",
        "description": "Name of an additional contact person. Should be specified for\ncountries except the US, Canada, the UK and Australia.\n"
      },
      "customerEmail": {
        "type": "string",
        "format": "email",
        "description": "Email of a primary contact person (receiver). Should be specified\nfor countries except the US, Canada, the UK and Australia.\n"
      },
      "additionalCustomerEmail": {
        "type": "string",
        "format": "email",
        "description": "Email of an additional contact person. Should be specified\nfor countries except the US, Canada, the UK and Australia.\n"
      },
      "customerPhone": {
        "type": "string",
        "description": "Phone number of a primary contact person (receiver). Should\nbe specified for countries except the US, Canada, the UK and Australia\n"
      },
      "additionalCustomerPhone": {
        "type": "string",
        "description": "Phone number of an additional contact person. Should be specified\nfor countries except the US, Canada, the UK & Australia.\n"
      },
      "lineProvisioningStatus": {
        "type": "string",
        "description": "Status of digital line provisioning",
        "enum": [
          "Provisioning",
          "Valid",
          "Invalid"
        ]
      },
      "taxId": {
        "type": "string",
        "description": "Internal identifier of a tax"
      }
    },
    "description": "Address for emergency cases. The same emergency address is assigned\nto all the numbers of one device\n",
    "name": "EmergencyServiceAddressResource"
  },
  {
    "type": "object",
    "properties": {
      "customerName": {
        "type": "string",
        "description": "Name of a primary contact person (receiver)"
      },
      "additionalCustomerName": {
        "type": "string",
        "description": "Name of an additional contact person. Should be specified for\ncountries except the US, Canada, the UK and Australia.\n"
      },
      "customerEmail": {
        "type": "string",
        "format": "email",
        "description": "Email of a primary contact person (receiver). Should be specified\nfor countries except the US, Canada, the UK and Australia.\n"
      },
      "additionalCustomerEmail": {
        "type": "string",
        "format": "email",
        "description": "Email of an additional contact person. Should be specified\nfor countries except the US, Canada, the UK and Australia.\n"
      },
      "customerPhone": {
        "type": "string",
        "description": "Phone number of a primary contact person (receiver). Should\nbe specified for countries except the US, Canada, the UK and Australia\n"
      },
      "additionalCustomerPhone": {
        "type": "string",
        "description": "Phone number of an additional contact person. Should be specified\nfor countries except the US, Canada, the UK & Australia.\n"
      },
      "street": {
        "type": "string",
        "description": "Street address, line 1 - street address, P.O. box, company\nname, c/o\n"
      },
      "street2": {
        "type": "string",
        "description": "Street address, line 2 - apartment, suite, unit, building,\nfloor, etc.\n"
      },
      "city": {
        "type": "string",
        "description": "City name"
      },
      "state": {
        "type": "string",
        "description": "State/province name"
      },
      "stateId": {
        "type": "string",
        "description": "Internal identifier of a state"
      },
      "stateIsoCode": {
        "type": "string",
        "description": "ISO code of a state"
      },
      "stateName": {
        "type": "string",
        "description": "Full name of a state"
      },
      "countryId": {
        "type": "string",
        "description": "Internal identifier of a country"
      },
      "countryIsoCode": {
        "type": "string",
        "description": "ISO code of a country"
      },
      "country": {
        "type": "string",
        "description": "Country name"
      },
      "countryName": {
        "type": "string",
        "description": "Full name of a country"
      },
      "zip": {
        "type": "string",
        "description": "Zip code"
      },
      "taxId": {
        "type": "string",
        "description": "National taxpayer identification number. Should be specified\nfor Brazil (CNPJ/CPF number) and Argentina (CUIT number).\n"
      }
    },
    "description": "Shipping address for the order. If it coincides with the Emergency\nService Address, then can be omitted. By default the same value as the\nemergencyServiceAddress. Multiple addresses can be specified; in case\nan order contains several devices, they can be delivered to different addresses\n",
    "name": "ShippingAddressInfo"
  },
  {
    "type": "object",
    "properties": {
      "required": {
        "type": "boolean",
        "description": "If set to 'True' then specifying emergency address is required"
      },
      "localOnly": {
        "type": "boolean",
        "description": "If set to 'True' then only local emergency address can be specified"
      },
      "lineProvisioningStatus": {
        "type": "string",
        "description": "This status is associated with a phone line provision state",
        "enum": [
          "Valid",
          "Provisioning",
          "Invalid"
        ]
      }
    },
    "name": "EmergencyAddress"
  },
  {
    "type": "object",
    "properties": {
      "status": {
        "description": "Order item shipping status. It is set to `Initial` when the order is submitted.\nThen it is changed to `Accepted` when a distributor starts processing the order.\nFinally it is changed to `Shipped` which means that the distributor has shipped the device.\n",
        "type": "string",
        "enum": [
          "Initial",
          "Accepted",
          "Shipped"
        ],
        "example": "Shipped"
      },
      "carrier": {
        "type": "string",
        "description": "Shipping carrier name. Appears only if the device status is 'Shipped'\n"
      },
      "trackingNumber": {
        "type": "string",
        "description": "Carrier-specific tracking number. Appears only if the device status is 'Shipped'\n"
      },
      "method": {
        "$ref": "#/components/schemas/MethodInfo"
      },
      "address": {
        "$ref": "#/components/schemas/ShippingAddressInfo"
      }
    },
    "description": "Shipping information, according to which devices (in case of  HardPhone)\nor e911 stickers (in case of  SoftPhone  and  OtherPhone ) will be delivered\nto the customer\n",
    "name": "ShippingInfo"
  },
  {
    "type": "object",
    "properties": {
      "street": {
        "type": "string"
      },
      "street2": {
        "type": "string"
      },
      "city": {
        "type": "string"
      },
      "zip": {
        "type": "string"
      },
      "customerName": {
        "type": "string"
      },
      "state": {
        "type": "string",
        "description": "State/province name"
      },
      "stateId": {
        "type": "string",
        "description": "Internal identifier of a state"
      },
      "country": {
        "type": "string",
        "description": "Country name"
      },
      "countryId": {
        "type": "string",
        "description": "Internal identifier of a country"
      }
    },
    "description": "Address for emergency cases. The same emergency address is assigned to all\nnumbers of a single device. If the emergency address is also specified in\n`emergency` resource, then this value is ignored\n",
    "name": "EmergencyServiceAddressResourceRequest"
  },
  {
    "type": "object",
    "properties": {
      "emergencyServiceAddress": {
        "$ref": "#/components/schemas/EmergencyServiceAddressResourceRequest"
      },
      "emergency": {
        "$ref": "#/components/schemas/DeviceEmergencyInfo"
      },
      "extension": {
        "$ref": "#/components/schemas/DeviceUpdateExtensionInfo"
      },
      "phoneLines": {
        "$ref": "#/components/schemas/DeviceUpdatePhoneLinesInfo"
      },
      "useAsCommonPhone": {
        "type": "boolean",
        "description": "Supported only for devices assigned to Limited extensions.\nIf true, enables users to log in to this phone as a common phone\n"
      },
      "name": {
        "type": "string",
        "description": "Device label, maximum number of symbols is 64"
      }
    },
    "name": "AccountDeviceUpdate"
  },
  {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "Internal identifier of a device"
      },
      "uri": {
        "type": "string",
        "format": "uri",
        "description": "Canonical URI of a device"
      },
      "sku": {
        "type": "string",
        "description": "Device identification number (stock keeping unit) in the format\nTP-ID [-AT-AC], where TP is a device type (HP for RC HardPhone, DV for all\nother devices including SoftPhone); ID - device model ID; AT -addon type\nID; AC - addon count (if any). For example 'HP-56-2-2'\n"
      },
      "type": {
        "type": "string",
        "description": "Device type",
        "default": "HardPhone",
        "enum": [
          "BLA",
          "SoftPhone",
          "OtherPhone",
          "HardPhone",
          "WebPhone",
          "Paging",
          "Room",
          "WebRTC"
        ]
      },
      "name": {
        "type": "string",
        "description": "Device name. Mandatory if ordering SoftPhone or OtherPhone.\nOptional for  HardPhone. If not specified for HardPhone, then\na device model is used as a device name\n"
      },
      "serial": {
        "type": "string",
        "description": "Serial number for HardPhone (is returned only when the phone\nis shipped and provisioned); endpoint_id for SoftPhone and\nmobile applications\n"
      },
      "status": {
        "type": "string",
        "description": "Device status",
        "enum": [
          "Offline",
          "Online"
        ]
      },
      "computerName": {
        "type": "string",
        "description": "PC name for softphone"
      },
      "model": {
        "$ref": "#/components/schemas/ModelInfo"
      },
      "extension": {
        "$ref": "#/components/schemas/ExtensionInfoIntId"
      },
      "emergency": {
        "$ref": "#/components/schemas/DeviceEmergencyInfo"
      },
      "emergencyServiceAddress": {
        "$ref": "#/components/schemas/EmergencyServiceAddressResource"
      },
      "phoneLines": {
        "type": "array",
        "description": "Phone lines information",
        "items": {
          "$ref": "#/components/schemas/PhoneLinesInfo"
        }
      },
      "shipping": {
        "$ref": "#/components/schemas/ShippingInfo"
      },
      "boxBillingId": {
        "type": "integer",
        "format": "int64",
        "description": "Box billing identifier of a device. Applicable only for HardPhones.\nIt is an alternative way to identify the device to be ordered. Either\nmodel  structure, or  boxBillingId  must be specified for HardPhone\n"
      },
      "useAsCommonPhone": {
        "type": "boolean",
        "description": "Supported only for devices assigned to Limited extensions.\nIf true, enables users to log in to this phone as a common phone.\n"
      },
      "inCompanyNet": {
        "type": "boolean",
        "description": "Network location status. 'True' if the device is located in\nthe configured corporate network (On-Net); 'False' for Off-Net location.\nParameter is not returned if `EmergencyAddressAutoUpdate` feature is not\nenabled for the account/user, or if device network location is not determined\n"
      },
      "site": {
        "$ref": "#/components/schemas/DeviceSiteInfo"
      },
      "lastLocationReportTime": {
        "type": "string",
        "format": "date-time",
        "description": "Datetime of receiving last location report in\n[ISO 8601](https://en.wikipedia.org/wiki/ISO_8601)\nformat including timezone, for example *2016-03-10T18:07:52.534Z\n"
      },
      "linePooling": {
        "type": "string",
        "description": "Pooling type of a device:\n- Host - a device with standalone paid phone line which can be linked to a soft client instance\n- Guest - a device with a linked phone line\n- None - a device without a phone line or with specific line (free, BLA, etc.)\n",
        "enum": [
          "Host",
          "Guest",
          "None"
        ]
      },
      "billingStatement": {
        "$ref": "#/components/schemas/BillingStatementInfo"
      }
    },
    "name": "DeviceResource"
  },
  {
    "type": "object",
    "properties": {
      "description": {
        "type": "string"
      },
      "amount": {
        "type": "number",
        "format": "double"
      },
      "feature": {
        "type": "string"
      },
      "freeServiceCredit": {
        "type": "number",
        "format": "double"
      }
    },
    "name": "BillingStatementCharges"
  },
  {
    "type": "object",
    "properties": {
      "phoneLines": {
        "type": "array",
        "description": "Information on phone lines added to a device",
        "items": {
          "$ref": "#/components/schemas/UpdateDevicePhoneInfo"
        }
      }
    },
    "description": "Information on phone lines added to a device",
    "name": "DeviceUpdatePhoneLinesInfo"
  },
  {
    "type": "object",
    "properties": {
      "id": {
        "type": "string"
      },
      "name": {
        "type": "string"
      },
      "count": {
        "type": "integer",
        "format": "int32"
      }
    },
    "name": "AddonInfo"
  },
  {
    "type": "object",
    "properties": {
      "customerName": {
        "type": "string",
        "description": "Name of a customer"
      },
      "street": {
        "type": "string",
        "description": "Street address, line 1 - street address, P.O. box, company name, c/o"
      },
      "street2": {
        "type": "string",
        "description": "Street address, line 2 - apartment, suite, unit, building, floor, etc."
      },
      "city": {
        "type": "string",
        "description": "City name"
      },
      "zip": {
        "type": "string",
        "description": "Zip code"
      },
      "state": {
        "type": "string",
        "description": "State/province name"
      },
      "stateId": {
        "type": "string",
        "description": "Internal identifier of a state"
      },
      "stateIsoCode": {
        "type": "string",
        "description": "ISO code of a state"
      },
      "stateName": {
        "type": "string",
        "description": "Full name of a state"
      },
      "countryId": {
        "type": "string",
        "description": "Internal identifier of a country"
      },
      "countryIsoCode": {
        "type": "string",
        "description": "ISO code of a country"
      },
      "country": {
        "type": "string",
        "description": "Country name"
      },
      "countryName": {
        "type": "string",
        "description": "Full name of a country"
      },
      "syncStatus": {
        "type": "string",
        "description": "Resulting status of emergency address synchronization. Returned\nfor 'Get Device Info' request if `syncEmergencyAddress` parameter is set\nto 'True'\n",
        "enum": [
          "Verified",
          "Updated",
          "Deleted",
          "NotRequired",
          "Unsupported",
          "Failed"
        ]
      }
    },
    "description": "Automatically determined emergency address. If `emergencyAddressState`\nvalue is 'Assigned', then this address is assigned to the current device.\nIf `emergencyAddressState` value is 'Unconfirmed', then the specified address\nmust be confirmed by the user before being registered as emergency address\nfor the current device. In all other cases the value is null\n",
    "name": "DeviceEmergencyAddress"
  },
  {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "Internal identifier of a phone number"
      }
    },
    "name": "UpdateDevicePhoneInfo"
  },
  {
    "type": "object",
    "properties": {
      "id": {
        "type": "integer",
        "description": "Internal identifier of an extension",
        "format": "int64"
      },
      "uri": {
        "type": "string",
        "format": "uri",
        "description": "Canonical URI of an extension"
      },
      "extensionNumber": {
        "type": "string",
        "description": "Number of extension"
      },
      "partnerId": {
        "type": "string",
        "description": "For Partner Applications Internal identifier of an extension\ncreated by partner. The RingCentral supports the mapping of accounts and\nstores the corresponding account ID/extension ID for each partner ID of\na client application. In request URIs partner IDs are accepted instead\nof regular RingCentral native IDs as path parameters using pid = XXX clause.\nThough in response URIs contain the corresponding account IDs and extension\nIDs. In all request and response bodies these values are reflected via\npartnerId attributes of account and extension\n"
      }
    },
    "description": "This attribute can be omitted for unassigned devices",
    "name": "ExtensionInfoIntId"
  },
  {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "Internal identifier of a home country"
      },
      "uri": {
        "type": "string",
        "format": "uri",
        "description": "Canonical URI of a home country"
      },
      "name": {
        "type": "string",
        "description": "Official name of a home country"
      }
    },
    "description": "Brief information on a phone number country",
    "name": "PhoneNumberCountryInfo"
  },
  {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "Internal identifier of a phone line"
      },
      "lineType": {
        "type": "string",
        "description": "The type of a phone line",
        "enum": [
          "Unknown",
          "Standalone",
          "StandaloneFree",
          "BlaPrimary",
          "BlaSecondary"
        ]
      },
      "phoneInfo": {
        "$ref": "#/components/schemas/PhoneNumberInfoIntId"
      },
      "emergencyAddress": {
        "$ref": "#/components/schemas/EmergencyAddress"
      }
    },
    "name": "PhoneLinesInfo"
  },
  {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "Internal identifier of a site"
      },
      "name": {
        "type": "string",
        "description": "Name of a site"
      }
    },
    "description": "Site data",
    "name": "DeviceSiteInfo"
  },
  {
    "type": "object",
    "properties": {
      "currency": {
        "type": "string",
        "description": "Currency code complying with [ISO-4217](https://en.wikipedia.org/wiki/ISO_4217)\nstandard\n"
      },
      "charges": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/BillingStatementCharges"
        }
      },
      "fees": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/BillingStatementFees"
        }
      },
      "totalCharged": {
        "type": "number",
        "format": "double"
      },
      "totalCharges": {
        "type": "number",
        "format": "double"
      },
      "totalFees": {
        "type": "number",
        "format": "double"
      },
      "subtotal": {
        "type": "number",
        "format": "double"
      },
      "totalFreeServiceCredit": {
        "type": "number",
        "format": "double"
      }
    },
    "description": "Billing information. Returned for device update request if `prestatement`\nquery parameter is set to 'true'\n",
    "name": "BillingStatementInfo"
  },
  {
    "type": "object",
    "properties": {
      "description": {
        "type": "string"
      },
      "amount": {
        "type": "number",
        "format": "double"
      },
      "freeServiceCredit": {
        "type": "number",
        "format": "double"
      }
    },
    "name": "BillingStatementFees"
  },
  {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "Method identifier. The default value is 1 (Ground)",
        "enum": [
          "1",
          "2",
          "3"
        ]
      },
      "name": {
        "type": "string",
        "description": "Method name, corresponding to the identifier",
        "enum": [
          "Ground",
          "2 Day",
          "Overnight"
        ]
      }
    },
    "description": "Shipping method information",
    "name": "MethodInfo"
  },
  {
    "type": "object",
    "properties": {
      "address": {
        "$ref": "#/components/schemas/DeviceEmergencyAddress"
      },
      "location": {
        "$ref": "#/components/schemas/DeviceEmergencyLocationInfo"
      },
      "outOfCountry": {
        "type": "boolean",
        "description": "Specifies if emergency address is out of country"
      },
      "addressStatus": {
        "type": "string",
        "description": "Emergency address status",
        "enum": [
          "Valid",
          "Invalid",
          "Provisioning"
        ]
      },
      "visibility": {
        "type": "string",
        "description": "Visibility of an emergency response location. If `Private`\nis set, then location is visible only for the restricted number of users,\nspecified in `owners` array\n",
        "enum": [
          "Private",
          "Public"
        ]
      },
      "syncStatus": {
        "type": "string",
        "description": "Resulting status of the emergency address synchronization. Returned\nif `syncEmergencyAddress` parameter is set to 'True'\n",
        "enum": [
          "Verified",
          "Updated",
          "Deleted",
          "NotRequired",
          "Unsupported",
          "Failed"
        ]
      },
      "addressEditableStatus": {
        "type": "string",
        "description": "Ability to register new emergency address for a phone line\nusing devices sharing this line or only main device (line owner)\n",
        "enum": [
          "MainDevice",
          "AnyDevice"
        ]
      }
    },
    "description": "Device emergency settings",
    "name": "DeviceEmergencyInfo"
  },
  {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "Internal identifier of an extension"
      },
      "uri": {
        "type": "string",
        "format": "uri",
        "description": "Canonical URI of an extension"
      },
      "extensionNumber": {
        "type": "string",
        "description": "Number of extension"
      },
      "partnerId": {
        "type": "string",
        "description": "For Partner Applications Internal identifier of an extension\ncreated by partner. The RingCentral supports the mapping of accounts and\nstores the corresponding account ID/extension ID for each partner ID of\na client application. In request URIs partner IDs are accepted instead\nof regular RingCentral native IDs as path parameters using pid = XXX clause.\nThough in response URIs contain the corresponding account IDs and extension\nIDs. In all request and response bodies these values are reflected via\npartnerId attributes of account and extension\n"
      }
    },
    "description": "Information on the extension, to which the phone number is assigned. Returned only for the request of Account phone number list",
    "name": "DeviceProvisioningExtensionInfo"
  },
  {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "Internal identifier of a HardPhone device model"
      },
      "name": {
        "type": "string",
        "description": "Device name"
      },
      "addons": {
        "type": "array",
        "description": "Addons description",
        "items": {
          "$ref": "#/components/schemas/AddonInfo"
        }
      },
      "deviceClass": {
        "type": "string"
      },
      "features": {
        "type": "array",
        "description": "Device feature or multiple features supported",
        "items": {
          "type": "string",
          "description": "Device feature",
          "enum": [
            "BLA",
            "CommonPhone",
            "Intercom",
            "Paging",
            "HELD"
          ]
        }
      },
      "lineCount": {
        "type": "integer",
        "format": "int32",
        "description": "Max supported count of phone lines"
      }
    },
    "description": "HardPhone model information",
    "name": "ModelInfo"
  },
  {
    "type": "object",
    "properties": {
      "id": {
        "type": "integer",
        "description": "Internal identifier of a phone number",
        "format": "int64"
      },
      "country": {
        "$ref": "#/components/schemas/PhoneNumberCountryInfo"
      },
      "extension": {
        "$ref": "#/components/schemas/DeviceProvisioningExtensionInfo"
      },
      "label": {
        "type": "string",
        "description": "Custom user name of a phone number, if any"
      },
      "location": {
        "type": "string",
        "description": "Location (City, State). Filled for local US numbers"
      },
      "paymentType": {
        "type": "string",
        "description": "Payment type. 'External' is returned for forwarded numbers\nwhich are not terminated in the RingCentral phone system\n",
        "enum": [
          "External",
          "TollFree",
          "Local"
        ]
      },
      "phoneNumber": {
        "type": "string",
        "description": "Phone number"
      },
      "status": {
        "type": "string",
        "description": "Status of a phone number. If the value is 'Normal', the phone\nnumber is ready to be used. Otherwise it is an external number not yet\nported to RingCentral\n"
      },
      "type": {
        "type": "string",
        "description": "Phone number type",
        "enum": [
          "VoiceFax",
          "FaxOnly",
          "VoiceOnly"
        ]
      },
      "usageType": {
        "type": "string",
        "description": "Usage type of the phone number",
        "enum": [
          "MainCompanyNumber",
          "AdditionalCompanyNumber",
          "CompanyNumber",
          "DirectNumber",
          "CompanyFaxNumber",
          "ForwardedNumber",
          "ForwardedCompanyNumber",
          "ContactCenterNumber"
        ]
      }
    },
    "description": "Phone number information",
    "name": "PhoneNumberInfoIntId"
  },
  {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "Internal identifier of an extension"
      }
    },
    "description": "Information on extension that the device is assigned to",
    "name": "DeviceUpdateExtensionInfo"
  },
  {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "Internal identifier of the emergency response location"
      },
      "name": {
        "type": "string",
        "description": "Location name"
      }
    },
    "description": "Company emergency response location details",
    "name": "DeviceEmergencyLocationInfo"
  },
  {
    "type": "object",
    "properties": {
      "region": {
        "type": "string",
        "description": "Geographical region",
        "example": "APAC"
      },
      "proxy": {
        "type": "string",
        "description": "SIP outbound proxy"
      },
      "proxyTLS": {
        "type": "string",
        "description": "SIP details for TLS (Transport Layer Security)"
      }
    },
    "name": "OutboundProxyInfo"
  },
  {
    "type": "object",
    "properties": {
      "domain": {
        "type": "string",
        "description": "SIP domain"
      },
      "outboundProxies": {
        "type": "array",
        "description": "List of outbound proxies",
        "items": {
          "$ref": "#/components/schemas/OutboundProxyInfo"
        }
      },
      "userName": {
        "type": "string",
        "description": "User credentials"
      },
      "password": {
        "type": "string",
        "description": "User password"
      },
      "authorizationId": {
        "type": "string",
        "description": "Internal identifier for SIP authorization"
      }
    },
    "name": "SipInfoResource"
  },
  {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "Custom field identifier"
      },
      "category": {
        "type": "string",
        "description": "Object category to attach custom fields",
        "enum": [
          "User"
        ]
      },
      "displayName": {
        "type": "string",
        "description": "Custom field display name"
      }
    },
    "name": "CustomFieldModel"
  },
  {
    "type": "object",
    "properties": {
      "category": {
        "type": "string",
        "description": "Object category to attach custom fields",
        "enum": [
          "User"
        ]
      },
      "displayName": {
        "type": "string",
        "description": "Custom field display name"
      }
    },
    "name": "CustomFieldCreateRequest"
  },
  {
    "type": "object",
    "properties": {
      "records": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/CustomFieldModel"
        }
      }
    },
    "name": "CustomFieldList"
  },
  {
    "type": "object",
    "properties": {
      "displayName": {
        "type": "string",
        "description": "Custom field display name"
      }
    },
    "name": "CustomFieldUpdateRequest"
  },
  {
    "type": "object",
    "properties": {
      "enabled": {
        "type": "boolean",
        "description": "Flag for controlling Automatic Call Recording settings"
      },
      "outboundCallTones": {
        "type": "boolean",
        "description": "Flag for controlling 'Play Call Recording Announcement for Outbound Calls' settings"
      },
      "outboundCallAnnouncement": {
        "type": "boolean",
        "description": "Flag for controlling 'Play periodic tones for outbound calls' settings"
      },
      "allowMute": {
        "type": "boolean",
        "description": "Flag for controlling 'Allow mute in auto call recording' settings"
      },
      "extensionCount": {
        "type": "integer",
        "format": "int32",
        "description": "Total amount of extension that are used in call recordings"
      },
      "retentionPeriod": {
        "type": "integer",
        "format": "int32",
        "description": "Retention period of a call recording, the default value is 90 days"
      },
      "maxNumberLimit": {
        "type": "integer",
        "format": "int32",
        "description": "Maximum number of automatic call recordings per account, the default value is 100 000"
      }
    },
    "name": "AutomaticRecordingResource"
  },
  {
    "type": "object",
    "properties": {
      "type": {
        "type": "string",
        "enum": [
          "StartRecording",
          "StopRecording",
          "AutomaticRecording"
        ]
      },
      "mode": {
        "type": "string",
        "description": "Here `Default` indicates that all greetings of that type\n(in all languages) are default. If at least one greeting (in any language)\nof the specified type is custom, then `Custom` is returned.\n",
        "enum": [
          "Default",
          "Custom"
        ]
      }
    },
    "name": "GreetingResource"
  },
  {
    "type": "object",
    "properties": {
      "enabled": {
        "type": "boolean",
        "description": "Flag for controlling OnDemand Call Recording settings"
      },
      "retentionPeriod": {
        "type": "integer",
        "format": "int32",
        "description": "Retention period of a call recording, the default value is 90 days"
      }
    },
    "name": "OnDemandResource"
  },
  {
    "type": "object",
    "properties": {
      "onDemand": {
        "$ref": "#/components/schemas/OnDemandResource"
      },
      "automatic": {
        "$ref": "#/components/schemas/AutomaticRecordingResource"
      },
      "greetings": {
        "type": "array",
        "description": "Collection of Greeting Info",
        "items": {
          "$ref": "#/components/schemas/GreetingResource"
        }
      }
    },
    "name": "CallRecordingSettingsResource"
  },
  {
    "type": "object",
    "properties": {
      "type": {
        "type": "string",
        "enum": [
          "StartRecording",
          "StopRecording",
          "AutomaticRecording"
        ]
      },
      "custom": {
        "$ref": "#/components/schemas/CallRecordingCustomGreetingData"
      },
      "language": {
        "$ref": "#/components/schemas/CallRecordingCustomGreetingLanguage"
      }
    },
    "name": "CallRecordingCustomGreeting"
  },
  {
    "type": "object",
    "description": "Custom greeting language",
    "properties": {
      "uri": {
        "type": "string",
        "format": "uri",
        "description": "Link to a language"
      },
      "id": {
        "type": "string",
        "description": "Internal identifier of a language"
      },
      "name": {
        "type": "string",
        "description": "Language name"
      },
      "localeCode": {
        "type": "string",
        "description": "Language locale code"
      }
    },
    "name": "CallRecordingCustomGreetingLanguage"
  },
  {
    "type": "object",
    "properties": {
      "uri": {
        "type": "string",
        "format": "uri",
        "description": "Link to a custom company greeting"
      },
      "id": {
        "type": "string",
        "description": "Internal identifier of a custom company greeting"
      }
    },
    "description": "Custom greeting data",
    "name": "CallRecordingCustomGreetingData"
  },
  {
    "type": "object",
    "description": "Returns data on call recording custom greetings.",
    "properties": {
      "records": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/CallRecordingCustomGreeting"
        }
      }
    },
    "name": "CallRecordingCustomGreetings"
  },
  {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "Internal identifier of an extension"
      },
      "uri": {
        "type": "string",
        "format": "uri"
      },
      "extensionNumber": {
        "type": "string"
      },
      "type": {
        "type": "string"
      },
      "callDirection": {
        "type": "string",
        "description": "Direction of call",
        "enum": [
          "Outbound",
          "Inbound",
          "All"
        ]
      }
    },
    "name": "CallRecordingExtensionResource"
  },
  {
    "type": "object",
    "properties": {
      "addedExtensions": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/CallRecordingExtensionResource"
        }
      },
      "updatedExtensions": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/CallRecordingExtensionResource"
        }
      },
      "removedExtensions": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/CallRecordingExtensionResource"
        }
      }
    },
    "name": "BulkAccountCallRecordingsResource"
  },
  {
    "type": "object",
    "properties": {
      "uri": {
        "type": "string",
        "format": "uri",
        "description": "Link to call recording extension list resource"
      },
      "records": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/CallRecordingExtensionInfo"
        }
      },
      "navigation": {
        "$ref": "#/components/schemas/PageNavigationModel"
      },
      "paging": {
        "$ref": "#/components/schemas/EnumeratedPagingModel"
      }
    },
    "name": "CallRecordingExtensions"
  },
  {
    "type": "object",
    "properties": {
      "uri": {
        "type": "string",
        "description": "Canonical URI to retrieve the particular page of the result set",
        "format": "uri"
      }
    },
    "name": "PageNavigationUri"
  },
  {
    "type": "object",
    "required": [
      "perPage"
    ],
    "properties": {
      "perPage": {
        "type": "integer",
        "format": "int32",
        "minimum": 1,
        "maximum": 1000,
        "description": "Current page size, describes how many items are in each page.\nMatches \"perPage\" parameter from the request.\n",
        "example": 50
      },
      "page": {
        "type": "integer",
        "format": "int32",
        "minimum": 1,
        "maximum": 1000,
        "description": "The current page number. 1-indexed, so the first page is 1\nby default. May be omitted if result is empty (because non-existent page\nwas specified or perPage=0 was requested)\n",
        "example": 5
      },
      "pageStart": {
        "type": "integer",
        "format": "int32",
        "minimum": 0,
        "description": "The zero-based number of the first element on the current page. Omitted if the page is omitted or result is empty",
        "example": 0
      },
      "pageEnd": {
        "type": "integer",
        "format": "int32",
        "minimum": 0,
        "description": "The zero-based index of the last element on the current page. Omitted if the page is omitted or result is empty",
        "example": 5
      },
      "totalPages": {
        "type": "integer",
        "format": "int32",
        "minimum": 0,
        "description": "The total number of pages in a dataset. May be omitted for some resources due to performance reasons",
        "example": 25
      },
      "totalElements": {
        "type": "integer",
        "format": "int32",
        "minimum": 0,
        "description": "The total number of elements in a dataset. May be omitted for some resource due to performance reasons",
        "example": 25
      }
    },
    "name": "EnumeratedPagingModel"
  },
  {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "Internal identifier of an extension"
      },
      "uri": {
        "type": "string",
        "format": "uri",
        "description": "Link to an extension resource"
      },
      "extensionNumber": {
        "type": "string",
        "description": "Number of an extension"
      },
      "name": {
        "type": "string",
        "description": "Name of an extension"
      }
    },
    "name": "CallRecordingExtensionInfo"
  },
  {
    "type": "object",
    "description": "Links to other pages of the current result set",
    "properties": {
      "firstPage": {
        "$ref": "#/components/schemas/PageNavigationUri"
      },
      "nextPage": {
        "$ref": "#/components/schemas/PageNavigationUri"
      },
      "previousPage": {
        "$ref": "#/components/schemas/PageNavigationUri"
      },
      "lastPage": {
        "$ref": "#/components/schemas/PageNavigationUri"
      }
    },
    "name": "PageNavigationModel"
  },
  {
    "type": "object",
    "properties": {
      "version": {
        "type": "string",
        "description": "Billing package version"
      },
      "id": {
        "type": "string",
        "description": "Billing package identifier"
      }
    },
    "name": "PackageInfo"
  },
  {
    "type": "object",
    "properties": {
      "uri": {
        "type": "string",
        "format": "uri",
        "description": "Canonical URI of the account Service Info resource"
      },
      "servicePlanName": {
        "type": "string",
        "description": "Account Service Plan name"
      },
      "brand": {
        "$ref": "#/components/schemas/BrandInfo"
      },
      "contractedCountry": {
        "$ref": "#/components/schemas/CountryInfoShortModel"
      },
      "servicePlan": {
        "$ref": "#/components/schemas/ServicePlanInfo"
      },
      "targetServicePlan": {
        "$ref": "#/components/schemas/TargetServicePlanInfo"
      },
      "billingPlan": {
        "$ref": "#/components/schemas/BillingPlanInfo"
      },
      "serviceFeatures": {
        "type": "array",
        "description": "Service features information, see Service Feature List",
        "items": {
          "$ref": "#/components/schemas/ServiceFeatureInfo"
        }
      },
      "limits": {
        "$ref": "#/components/schemas/AccountLimits"
      },
      "package": {
        "$ref": "#/components/schemas/PackageInfo"
      }
    },
    "description": "Account service information, including brand, service plan and billing plan\n",
    "name": "AccountServiceInfo"
  },
  {
    "type": "object",
    "properties": {
      "featureName": {
        "type": "string",
        "description": "Feature name",
        "enum": [
          "AccountFederation",
          "Archiver",
          "AutomaticCallRecordingMute",
          "AutomaticInboundCallRecording",
          "AutomaticOutboundCallRecording",
          "BlockedMessageForwarding",
          "Calendar",
          "CallerIdControl",
          "CallForwarding",
          "CallPark",
          "CallParkLocations",
          "CallSupervision",
          "CallSwitch",
          "CallQualitySurvey",
          "Conferencing",
          "ConferencingNumber",
          "ConfigureDelegates",
          "DeveloperPortal",
          "DND",
          "DynamicConference",
          "EmergencyAddressAutoUpdate",
          "EmergencyCalling",
          "EncryptionAtRest",
          "ExternalDirectoryIntegration",
          "Fax",
          "FaxReceiving",
          "FreeSoftPhoneLines",
          "HDVoice",
          "HipaaCompliance",
          "Intercom",
          "InternationalCalling",
          "InternationalSMS",
          "LinkedSoftphoneLines",
          "MMS",
          "MobileVoipEmergencyCalling",
          "OnDemandCallRecording",
          "Pager",
          "PagerReceiving",
          "Paging",
          "PasswordAuth",
          "PromoMessage",
          "Reports",
          "Presence",
          "RCTeams",
          "RingOut",
          "SalesForce",
          "SharedLines",
          "SingleExtensionUI",
          "SiteCodes",
          "SMS",
          "SMSReceiving",
          "SoftPhoneUpdate",
          "TelephonySessions",
          "UserManagement",
          "VideoConferencing",
          "VoipCalling",
          "VoipCallingOnMobile",
          "Voicemail",
          "VoicemailToText",
          "WebPhone"
        ]
      },
      "enabled": {
        "type": "boolean",
        "description": "Feature status, shows feature availability for the extension\n"
      }
    },
    "name": "ServiceFeatureInfo"
  },
  {
    "required": [
      "from",
      "to"
    ],
    "type": "object",
    "properties": {
      "from": {
        "$ref": "#/components/schemas/MakeCallOutCallerInfoRequestFrom"
      },
      "to": {
        "$ref": "#/components/schemas/MakeCallOutCallerInfoRequestTo"
      }
    },
    "name": "MakeCallOutRequest"
  },
  {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "Internal identifier of a party"
      },
      "status": {
        "$ref": "#/components/schemas/CallStatusInfo"
      },
      "muted": {
        "type": "boolean",
        "description": "Specifies if a call participant is muted or not. **Note:**\nIf a call is also controlled via Hard phone or RingCentral App (not only\nthrough the API by calling call control methods) then it cannot be fully\nmuted/unmuted via API only, in this case the action should be duplicated\nvia Hard phone/RC App interfaces\n"
      },
      "standAlone": {
        "type": "boolean",
        "description": "If 'True' then the party is not connected to a session voice\nconference, 'False' means the party is connected to other parties in a\nsession\n"
      },
      "park": {
        "$ref": "#/components/schemas/ParkInfo"
      },
      "from": {
        "$ref": "#/components/schemas/PartyInfo"
      },
      "to": {
        "$ref": "#/components/schemas/PartyInfo"
      },
      "owner": {
        "$ref": "#/components/schemas/OwnerInfo"
      },
      "direction": {
        "type": "string",
        "description": "Direction of a call",
        "enum": [
          "Inbound",
          "Outbound"
        ]
      },
      "conferenceRole": {
        "type": "string",
        "description": "A party's role in the conference scenarios. For calls of 'Conference' type only",
        "enum": [
          "Host",
          "Participant"
        ]
      },
      "ringOutRole": {
        "type": "string",
        "description": "A party's role in 'Ring Me'/'RingOut' scenarios. For calls of 'Ringout' type only",
        "enum": [
          "Initiator",
          "Target"
        ]
      },
      "ringMeRole": {
        "type": "string",
        "description": "A party's role in 'Ring Me'/'RingOut' scenarios. For calls of 'Ringme' type only",
        "enum": [
          "Initiator",
          "Target"
        ]
      },
      "recordings": {
        "type": "array",
        "description": "Active recordings list",
        "items": {
          "$ref": "#/components/schemas/RecordingInfo"
        }
      }
    },
    "description": "Information on a party of a call session",
    "name": "CallParty"
  },
  {
    "type": "object",
    "properties": {
      "accountId": {
        "type": "string",
        "description": "Internal identifier of an account that monitors a call"
      },
      "extensionId": {
        "type": "string",
        "description": "Internal identifier of an extension that monitors a call"
      }
    },
    "description": "Deprecated. Information on call owner",
    "name": "OwnerInfo"
  },
  {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "Internal identifier of a recording resource"
      },
      "active": {
        "type": "boolean",
        "description": "True if the recording is active. False if the recording is paused."
      }
    },
    "name": "RecordingInfo"
  },
  {
    "type": "object",
    "properties": {
      "deviceId": {
        "type": "string",
        "description": "Internal identifier of a device",
        "example": "59474004"
      }
    },
    "description": "Instance id of the caller. It corresponds to the 1st leg of the CallOut call.",
    "name": "MakeCallOutCallerInfoRequestFrom"
  },
  {
    "type": "object",
    "properties": {
      "phoneNumber": {
        "type": "string",
        "description": "Phone number of a party"
      },
      "name": {
        "type": "string",
        "description": "Displayed name of a party"
      },
      "deviceId": {
        "type": "string",
        "description": "Internal identifier of a device"
      },
      "extensionId": {
        "type": "string",
        "description": "Internal identifier of an extension"
      }
    },
    "name": "PartyInfo"
  },
  {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "Internal identifier of a call session"
      },
      "origin": {
        "$ref": "#/components/schemas/OriginInfo"
      },
      "voiceCallToken": {
        "type": "string",
        "description": "For calls of 'Conference' type only"
      },
      "parties": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/CallParty"
        }
      },
      "creationTime": {
        "type": "string",
        "format": "date-time",
        "description": "Date and time of the latest session update represented in Unix time format"
      }
    },
    "description": "Call session information",
    "name": "CallSessionObject"
  },
  {
    "type": "object",
    "properties": {
      "code": {
        "type": "string",
        "description": "Status code of a call",
        "enum": [
          "Setup",
          "Proceeding",
          "Answered",
          "Disconnected",
          "Gone",
          "Parked",
          "Hold",
          "VoiceMail",
          "FaxReceive",
          "Tds",
          "VoiceMailScreening"
        ]
      },
      "peerId": {
        "$ref": "#/components/schemas/PeerInfo"
      },
      "reason": {
        "type": "string",
        "description": "Reason for call termination. For 'Disconnected' code only",
        "enum": [
          "Pickup",
          "Supervising",
          "TakeOver",
          "Timeout",
          "BlindTransfer",
          "RccTransfer",
          "AttendedTransfer",
          "CallerInputRedirect",
          "CallFlip",
          "ParkLocation",
          "DtmfTransfer",
          "AgentAnswered",
          "AgentDropped",
          "Rejected",
          "Cancelled",
          "InternalError",
          "NoAnswer",
          "TargetBusy",
          "InvalidNumber",
          "InternationalDisabled",
          "DestinationBlocked",
          "NotEnoughFunds",
          "NoSuchUser",
          "CallPark",
          "CallRedirected",
          "CallReplied",
          "CallSwitch",
          "CallFinished",
          "CallDropped"
        ]
      },
      "description": {
        "type": "string",
        "description": "Optional message"
      }
    },
    "description": "Status data of a call session",
    "name": "CallStatusInfo"
  },
  {
    "type": "object",
    "properties": {
      "sessionId": {
        "type": "string"
      },
      "telephonySessionId": {
        "type": "string"
      },
      "partyId": {
        "type": "string"
      }
    },
    "description": "Peer session/party details. Valid in 'Gone' state of a call",
    "name": "PeerInfo"
  },
  {
    "type": "object",
    "properties": {
      "type": {
        "type": "string",
        "description": "Session origin type",
        "enum": [
          "Call",
          "RingOut",
          "RingMe",
          "Conference",
          "GreetingsRecording",
          "VerificationCall",
          "Zoom",
          "CallOut"
        ]
      }
    },
    "description": "Session origin details",
    "name": "OriginInfo"
  },
  {
    "type": "object",
    "properties": {
      "phoneNumber": {
        "type": "string",
        "description": "Phone number in E.164 format",
        "example": "+16502223366"
      },
      "extensionNumber": {
        "type": "string",
        "description": "Extension number",
        "example": "103"
      }
    },
    "description": "Phone number of the called party. This number corresponds to the 2nd leg of a CallOut call",
    "name": "MakeCallOutCallerInfoRequestTo"
  },
  {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "Call park identifier"
      }
    },
    "description": "Call park information",
    "name": "ParkInfo"
  },
  {
    "type": "object",
    "properties": {
      "session": {
        "$ref": "#/components/schemas/CallSessionObject"
      }
    },
    "name": "CallSession"
  },
  {
    "type": "object",
    "properties": {
      "code": {
        "type": "string"
      },
      "reason": {
        "type": "string"
      },
      "parkData": {
        "type": "string"
      },
      "peerId": {
        "$ref": "#/components/schemas/PeerInfo"
      },
      "mobilePickupData": {
        "$ref": "#/components/schemas/MobilePickupData"
      }
    },
    "name": "CallSessionStatusInfo"
  },
  {
    "type": "object",
    "properties": {
      "phoneNumber": {
        "type": "string",
        "description": "Call party phone number in [E.164](https://www.itu.int/rec/T-REC-E.164-201011-I)(with '+' sign) format"
      },
      "name": {
        "type": "string",
        "description": "Call party name"
      },
      "extensionId": {
        "type": "string",
        "description": "Internal identifier of a call party extensionId"
      }
    },
    "name": "CallPartyInfo"
  },
  {
    "type": "object",
    "properties": {
      "uuid": {
        "type": "string",
        "description": "Universally unique identifier of a notification"
      },
      "event": {
        "type": "string",
        "description": "Event filter URI"
      },
      "timestamp": {
        "type": "string",
        "description": "Datetime of sending a notification in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format including timezone, for example *2016-03-10T18:07:52.534Z*"
      },
      "subscriptionId": {
        "type": "string",
        "description": "Internal identifier of a subscription"
      },
      "ownerId": {
        "type": "string",
        "description": "Internal identifier of a subscription owner extension"
      },
      "body": {
        "$ref": "#/components/schemas/TelephonySessionsEventBody"
      }
    },
    "name": "ExtensionTelephonySessionsEvent"
  },
  {
    "type": "object",
    "properties": {
      "uuid": {
        "type": "string",
        "description": "Universally unique identifier of a notification"
      },
      "event": {
        "type": "string",
        "description": "Event filter URI"
      },
      "timestamp": {
        "type": "string",
        "description": "Datetime of sending a notification in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format including timezone, for example *2016-03-10T18:07:52.534Z*"
      },
      "subscriptionId": {
        "type": "string",
        "description": "Internal identifier of a subscription"
      },
      "ownerId": {
        "type": "string",
        "description": "Internal identifier of a subscription owner extension"
      },
      "body": {
        "$ref": "#/components/schemas/TelephonySessionsEventBody"
      }
    },
    "name": "AccountTelephonySessionsEvent"
  },
  {
    "type": "object",
    "properties": {
      "sequence": {
        "type": "integer",
        "format": "int64",
        "description": "Order number of a notification to state the chronology"
      },
      "sessionId": {
        "type": "string",
        "description": "Legacy identifier of a call session"
      },
      "telephonySessionId": {
        "type": "string",
        "description": "Call session identifier, required for Telephony API"
      },
      "serverId": {
        "type": "string",
        "description": "Identifier of a server"
      },
      "eventTime": {
        "type": "string",
        "format": "date-time",
        "description": "The call start datetime in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format including timezone, for example *2016-03-10T18:07:52.534Z*"
      },
      "origin": {
        "$ref": "#/components/schemas/OriginInfo"
      },
      "parties": {
        "type": "array",
        "description": "Call participants details",
        "items": {
          "$ref": "#/components/schemas/TelephonySessionsEventPartyInfo"
        }
      }
    },
    "description": "Notification payload body",
    "name": "TelephonySessionsEventBody"
  },
  {
    "type": "object",
    "properties": {
      "ccMailboxes": {
        "type": "array",
        "description": "List of extension IDs, configured to pick up a call from Desktop/Mobile applications",
        "items": {
          "type": "string"
        }
      },
      "to": {
        "type": "string",
        "description": "SIP proxy registration name"
      },
      "sid": {
        "type": "string",
        "description": "User data"
      },
      "srvlvl": {
        "type": "string",
        "description": "User data"
      },
      "srvLvlExt": {
        "type": "string",
        "description": "User data"
      }
    },
    "name": "MobilePickupData"
  },
  {
    "type": "object",
    "properties": {
      "accountId": {
        "type": "string"
      },
      "extensionId": {
        "type": "string"
      },
      "id": {
        "type": "string"
      },
      "direction": {
        "type": "string",
        "enum": [
          "Inbound",
          "Outbound"
        ]
      },
      "to": {
        "$ref": "#/components/schemas/CallPartyInfo"
      },
      "from": {
        "$ref": "#/components/schemas/CallPartyInfo"
      },
      "status": {
        "$ref": "#/components/schemas/CallSessionStatusInfo"
      }
    },
    "name": "TelephonySessionsEventPartyInfo"
  },
  {
    "type": "object",
    "properties": {
      "from": {
        "$ref": "#/components/schemas/PartyInfo"
      },
      "to": {
        "$ref": "#/components/schemas/PartyInfo"
      },
      "direction": {
        "type": "string",
        "description": "Direction of a call",
        "enum": [
          "Outbound",
          "Inbound"
        ]
      },
      "id": {
        "type": "string",
        "description": "Internal identifier of a party that monitors a call"
      },
      "accountId": {
        "type": "string",
        "description": "Internal identifier of an account that monitors a call"
      },
      "extensionId": {
        "type": "string",
        "description": "Internal identifier of an extension that monitors a call"
      },
      "muted": {
        "type": "boolean",
        "description": "Specifies if a call participant is muted or not. **Note:** If a call is also controlled via Hard phone or RingCentral App (not only through the API by calling call control methods) then it cannot be fully muted/unmuted via API only, in this case the action should be duplicated via Hard phone/RC App interfaces"
      },
      "owner": {
        "$ref": "#/components/schemas/OwnerInfo"
      },
      "standAlone": {
        "type": "boolean",
        "description": "If 'True' then the party is not connected to a session voice conference, 'False' means the party is connected to other parties in a session"
      },
      "status": {
        "$ref": "#/components/schemas/CallStatusInfo"
      }
    },
    "name": "SuperviseCallSessionResponse"
  },
  {
    "required": [
      "mode",
      "supervisorDeviceId"
    ],
    "type": "object",
    "properties": {
      "mode": {
        "type": "string",
        "description": "Supervising mode",
        "example": "Listen",
        "enum": [
          "Listen"
        ]
      },
      "supervisorDeviceId": {
        "type": "string",
        "description": "Internal identifier of a supervisor's device which will be used for call session monitoring",
        "example": "191888004"
      },
      "agentExtensionId": {
        "type": "string",
        "description": "Extension identifier of the user that will be monitored",
        "example": "400378008008"
      },
      "autoAnswer": {
        "type": "boolean",
        "description": "Specifies if auto-answer SIP header should be sent. If auto-answer is set to 'True', the call is automatically answered by the supervising party, if set to 'False' - then the supervising party has to accept or decline the monitored call",
        "default": true
      },
      "mediaSDP": {
        "type": "string",
        "description": "Specifies session description protocol setting",
        "enum": [
          "sendOnly",
          "sendRecv"
        ]
      }
    },
    "name": "SuperviseCallSessionRequest"
  },
  {
    "required": [
      "partyId",
      "sessionId"
    ],
    "type": "object",
    "properties": {
      "sessionId": {
        "type": "string",
        "description": "Internal identifier of a call session"
      },
      "partyId": {
        "type": "string",
        "description": "Internal identifier of a party that should be added to the call session"
      }
    },
    "name": "AddPartyRequest"
  },
  {
    "type": "object",
    "properties": {
      "party": {
        "$ref": "#/components/schemas/PartyUpdateInfo"
      }
    },
    "name": "PartyUpdateRequest"
  },
  {
    "type": "object",
    "properties": {
      "muted": {
        "type": "boolean",
        "description": "Specifies if a call participant is muted or not. **Note:** If a call is also controlled via Hard phone or RingCentral App (not only through the API by calling call control methods) then it cannot be fully muted/unmuted via API only, in this case the action should be duplicated via Hard phone/RC App interfaces"
      },
      "standAlone": {
        "type": "boolean",
        "description": "If 'True' then the party is not connected to a session voice conference, 'False' means the party is connected to other parties in a session"
      }
    },
    "description": "Party update data",
    "name": "PartyUpdateInfo"
  },
  {
    "type": "object",
    "properties": {
      "callFlipId": {
        "type": "string",
        "description": "Call flip id"
      }
    },
    "name": "CallPartyFlip"
  },
  {
    "type": "object",
    "properties": {
      "pattern": {
        "type": "string",
        "description": "Predefined reply pattern name.",
        "example": "OnMyWay",
        "enum": [
          "WillCallYouBack",
          "CallMeBack",
          "OnMyWay",
          "OnTheOtherLine",
          "WillCallYouBackLater",
          "CallMeBackLater",
          "InAMeeting",
          "OnTheOtherLineNoCall"
        ]
      },
      "time": {
        "type": "integer",
        "format": "int32",
        "description": "Number of time units. Applicable only to WillCallYouBack, CallMeBack patterns.",
        "example": 5
      },
      "timeUnit": {
        "type": "string",
        "description": "Time unit name.",
        "example": "Minute",
        "enum": [
          "Minute",
          "Hour",
          "Day"
        ]
      }
    },
    "name": "ReplyWithPattern"
  },
  {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "Internal identifier of a party"
      },
      "status": {
        "$ref": "#/components/schemas/CallStatusInfo"
      },
      "muted": {
        "type": "boolean",
        "description": "Specifies if a call participant is muted or not. **Note:** If a call is also controlled via Hard phone or RingCentral App (not only through the API by calling call control methods) then it cannot be fully muted/unmuted via API only, in this case the action should be duplicated via Hard phone/RC App interfaces"
      },
      "standAlone": {
        "type": "boolean",
        "description": "If 'True' then the party is not connected to a session voice conference, 'False' means the party is connected to other parties in a session"
      },
      "park": {
        "$ref": "#/components/schemas/ParkInfo"
      },
      "from": {
        "$ref": "#/components/schemas/PartyInfo"
      },
      "to": {
        "$ref": "#/components/schemas/PartyInfo"
      },
      "owner": {
        "$ref": "#/components/schemas/OwnerInfo"
      },
      "direction": {
        "type": "string",
        "description": "Direction of a call",
        "enum": [
          "Inbound",
          "Outbound"
        ]
      }
    },
    "name": "ReplyParty"
  },
  {
    "type": "object",
    "properties": {
      "replyWithText": {
        "type": "string",
        "description": "Text to reply"
      },
      "replyWithPattern": {
        "$ref": "#/components/schemas/ReplyWithPattern"
      }
    },
    "name": "CallPartyReply"
  },
  {
    "required": [
      "partyId",
      "telephonySessionId"
    ],
    "type": "object",
    "properties": {
      "telephonySessionId": {
        "type": "string",
        "description": "Internal identifier of a call session to be connected to (bridged)"
      },
      "partyId": {
        "type": "string",
        "description": "Internal identifier of a call party to be connected to (bridged)"
      }
    },
    "name": "BridgeTargetRequest"
  },
  {
    "required": [
      "deviceId"
    ],
    "type": "object",
    "properties": {
      "deviceId": {
        "type": "string",
        "description": "Internal device identifier",
        "example": "400020454008"
      }
    },
    "name": "IgnoreRequestBody"
  },
  {
    "type": "object",
    "properties": {
      "from": {
        "$ref": "#/components/schemas/PartyInfo"
      },
      "to": {
        "$ref": "#/components/schemas/PartyInfo"
      },
      "direction": {
        "type": "string",
        "description": "Direction of a call",
        "enum": [
          "Outbound",
          "Inbound"
        ]
      },
      "id": {
        "type": "string",
        "description": "Internal identifier of a party that monitors a call"
      },
      "accountId": {
        "type": "string",
        "description": "Internal identifier of an account that monitors a call"
      },
      "extensionId": {
        "type": "string",
        "description": "Internal identifier of an extension that monitors a call"
      },
      "muted": {
        "type": "boolean",
        "description": "Specifies if a call party is muted"
      },
      "owner": {
        "$ref": "#/components/schemas/OwnerInfo"
      },
      "standAlone": {
        "type": "boolean",
        "description": "Specifies if a device is stand-alone"
      },
      "status": {
        "$ref": "#/components/schemas/CallStatusInfo"
      }
    },
    "name": "PartySuperviseResponse"
  },
  {
    "required": [
      "agentExtensionId",
      "mode",
      "supervisorDeviceId"
    ],
    "type": "object",
    "properties": {
      "mode": {
        "type": "string",
        "description": "Supervising mode",
        "example": "Listen",
        "enum": [
          "Listen"
        ]
      },
      "supervisorDeviceId": {
        "type": "string",
        "description": "Internal identifier of a supervisor's device",
        "example": "191888004"
      },
      "agentExtensionId": {
        "type": "string",
        "description": "Mailbox ID of a user that will be monitored",
        "example": "400378008008"
      },
      "autoAnswer": {
        "type": "boolean",
        "description": "Specifies if auto-answer SIP header should be sent. If auto-answer is set to 'True', the call is automatically answered by the supervising party, if set to 'False' - then the supervising party has to accept or decline the monitored call",
        "default": true
      },
      "mediaSDP": {
        "type": "string",
        "description": "Specifies session description protocol (SDP) setting. The possible values are 'sendOnly' (only sending) meaning one-way audio streaming; and 'sendRecv' (sending/receiving) meaning two-way audio streaming",
        "enum": [
          "sendOnly",
          "sendRecv"
        ]
      }
    },
    "name": "PartySuperviseRequest"
  },
  {
    "type": "object",
    "properties": {
      "active": {
        "type": "boolean",
        "description": "Recording status"
      }
    },
    "name": "CallRecordingUpdate"
  },
  {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "Internal identifier of a call recording"
      },
      "active": {
        "type": "boolean",
        "description": "Call recording status"
      }
    },
    "name": "CallRecording"
  },
  {
    "type": "object",
    "properties": {
      "deviceId": {
        "type": "string",
        "description": "Device ID that is used to answer to incoming call.",
        "example": "400018633008"
      }
    },
    "name": "AnswerTarget"
  },
  {
    "type": "object",
    "description": "Identifier of a call party the call will be transferred to. Only **one of** these parameters: `phoneNumber`, `voicemail`, `extensionNumber` or `parkOrbit` must be specified, otherwise an error is returned.",
    "properties": {
      "phoneNumber": {
        "type": "string",
        "description": "Phone number"
      },
      "voicemail": {
        "type": "string",
        "description": "Voicemail owner extension identifier"
      },
      "parkOrbit": {
        "type": "string",
        "description": "Park orbit identifier"
      },
      "extensionNumber": {
        "type": "string",
        "description": "Extension short number"
      }
    },
    "name": "TransferTarget"
  },
  {
    "required": [
      "deviceId"
    ],
    "type": "object",
    "properties": {
      "deviceId": {
        "type": "string",
        "description": "Device identifier that is used to pick up the parked call.",
        "example": "400018633008"
      }
    },
    "name": "PickupTarget"
  },
  {
    "type": "object",
    "description": "Identifier of a call party the call will be forwarded to. Only **one of** these parameters:\n`phoneNumber`, `voicemail` or `extensionNumber` must be specified, otherwise an error is returned.\n",
    "properties": {
      "phoneNumber": {
        "type": "string",
        "description": "Phone number"
      },
      "voicemail": {
        "type": "string",
        "description": "Voicemail owner extension identifier"
      },
      "extensionNumber": {
        "type": "string",
        "description": "Extension short number"
      }
    },
    "name": "ForwardTarget"
  },
  {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "Internal identifier of a cal log record"
      },
      "uri": {
        "type": "string",
        "format": "uri",
        "description": "Canonical URI of a call log record"
      },
      "sessionId": {
        "type": "string",
        "description": "Internal identifier of a call session"
      },
      "extension": {
        "$ref": "#/components/schemas/ExtensionInfoCallLog"
      },
      "telephonySessionId": {
        "type": "string",
        "description": "Telephony identifier of a call session"
      },
      "sipUuidInfo": {
        "type": "string",
        "description": "Call session identifier, required for Telephony REST API"
      },
      "transferTarget": {
        "$ref": "#/components/schemas/CompanyCallLogRecordTransferTarget"
      },
      "transferee": {
        "$ref": "#/components/schemas/CompanyCallLogRecordTransferee"
      },
      "partyId": {
        "type": "string",
        "description": "Internal Identifier of Participant"
      },
      "transport": {
        "type": "string",
        "description": "The type of a call transport. 'PSTN' indicates that a call leg was initiated\nfrom the PSTN network provider; 'VoIP' - from an RC phone.\n",
        "enum": [
          "PSTN",
          "VoIP"
        ]
      },
      "from": {
        "$ref": "#/components/schemas/CallLogCallerInfo"
      },
      "to": {
        "$ref": "#/components/schemas/CallLogCallerInfo"
      },
      "type": {
        "type": "string",
        "description": "The type of a call",
        "enum": [
          "Voice",
          "Fax"
        ]
      },
      "direction": {
        "description": "The direction of a call",
        "type": "string",
        "enum": [
          "Inbound",
          "Outbound"
        ]
      },
      "message": {
        "$ref": "#/components/schemas/CallLogRecordMessage"
      },
      "delegate": {
        "$ref": "#/components/schemas/CallLogDelegateInfo"
      },
      "deleted": {
        "type": "boolean",
        "description": "Indicates whether the record is deleted. Returned for deleted records, for ISync requests"
      },
      "action": {
        "type": "string",
        "description": "The internal action corresponding to the call operation",
        "enum": [
          "Unknown",
          "Phone Call",
          "Phone Login",
          "Calling Card",
          "VoIP Call",
          "Paging",
          "Hunting",
          "Call Park",
          "Monitoring",
          "Text Relay",
          "External Application",
          "Park Location",
          "CallOut-CallMe",
          "Conference Call",
          "Move",
          "RC Meetings",
          "Accept Call",
          "FindMe",
          "FollowMe",
          "RingMe",
          "Transfer",
          "Call Return",
          "Ring Directly",
          "RingOut Web",
          "RingOut PC",
          "RingOut Mobile",
          "411 Info",
          "Emergency",
          "E911 Update",
          "Support",
          "Incoming Fax",
          "Outgoing Fax"
        ]
      },
      "result": {
        "type": "string",
        "description": "The result of the call operation",
        "enum": [
          "Unknown",
          "Accepted",
          "Call connected",
          "In Progress",
          "Voicemail",
          "Reply",
          "Missed",
          "Busy",
          "Rejected",
          "No Answer",
          "Hang Up",
          "Blocked",
          "ResultEmpty",
          "Suspended account",
          "Call Failed",
          "Call Failure",
          "Internal Error",
          "IP Phone Offline",
          "No Calling Credit",
          "Not Allowed",
          "Restricted Number",
          "Wrong Number",
          "Answered Not Accepted",
          "Stopped",
          "Poor Line Quality",
          "International Disabled",
          "International Restricted",
          "Abandoned",
          "Declined",
          "Received",
          "Fax on Demand",
          "Partial Receive",
          "Receive Error",
          "Fax Receipt Error",
          "Fax Partially Sent",
          "No fax machine",
          "Send Error",
          "Sent",
          "Fax Not Sent",
          "Fax Poor Line"
        ]
      },
      "reasonDescription": {
        "type": "string"
      },
      "startTime": {
        "type": "string",
        "description": "The call start datetime in ISO 8601 format including timezone, for example 2016-03-10T18:07:52.534Z",
        "format": "date-time"
      },
      "duration": {
        "type": "integer",
        "format": "int32",
        "description": "Call duration in seconds"
      },
      "recording": {
        "$ref": "#/components/schemas/CallLogRecordingInfo"
      },
      "shortRecording": {
        "type": "boolean",
        "description": "Indicates that the recording is too short and therefore wouldn't be returned. The flag is not returned if the value is false"
      },
      "legs": {
        "type": "array",
        "description": "For 'Detailed' view only. Leg description",
        "items": {
          "$ref": "#/components/schemas/CallLogRecordLegInfo"
        }
      },
      "billing": {
        "$ref": "#/components/schemas/BillingInfo"
      },
      "lastModifiedTime": {
        "type": "string",
        "description": "For 'Detailed' view only. The datetime when the call log record\nwas modified in (ISO 8601)[https://en.wikipedia.org/wiki/ISO_8601] format\nincluding timezone, for example *2016-03-10T18:07:52.534Z*\n",
        "format": "date-time"
      },
      "internalType": {
        "type": "string",
        "description": "The internal type of the call",
        "enum": [
          "Local",
          "LongDistance",
          "International",
          "Sip",
          "RingMe",
          "RingOut",
          "Usual",
          "TollFreeNumber",
          "VerificationNumber",
          "Vma",
          "LocalNumber",
          "ImsOutgoing",
          "ImsIncoming"
        ]
      }
    },
    "name": "CompanyCallLogRecord"
  },
  {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "Internal identifier of a message"
      },
      "type": {
        "type": "string",
        "description": "Type of a message"
      },
      "uri": {
        "type": "string",
        "format": "uri",
        "description": "Link to a message resource"
      }
    },
    "description": "Linked message (Fax/Voicemail)",
    "name": "CallLogRecordMessage"
  },
  {
    "type": "object",
    "properties": {
      "action": {
        "type": "string",
        "description": "The internal action corresponding to the call operation",
        "enum": [
          "Unknown",
          "Phone Call",
          "Phone Login",
          "Calling Card",
          "VoIP Call",
          "Paging",
          "Hunting",
          "Call Park",
          "Monitoring",
          "Text Relay",
          "External Application",
          "Park Location",
          "CallOut-CallMe",
          "Conference Call",
          "Move",
          "RC Meetings",
          "Accept Call",
          "FindMe",
          "FollowMe",
          "RingMe",
          "Transfer",
          "Call Return",
          "Ring Directly",
          "RingOut Web",
          "RingOut PC",
          "RingOut Mobile",
          "411 Info",
          "Emergency",
          "E911 Update",
          "Support",
          "Incoming Fax",
          "Outgoing Fax"
        ]
      },
      "direction": {
        "description": "The direction of a call",
        "type": "string",
        "enum": [
          "Inbound",
          "Outbound"
        ]
      },
      "billing": {
        "$ref": "#/components/schemas/BillingInfo"
      },
      "delegate": {
        "$ref": "#/components/schemas/CallLogDelegateInfo"
      },
      "extensionId": {
        "type": "string",
        "description": "Internal identifier of an extension"
      },
      "duration": {
        "type": "integer",
        "format": "int32",
        "description": "Call duration in seconds"
      },
      "extension": {
        "$ref": "#/components/schemas/ExtensionInfoCallLog"
      },
      "legType": {
        "type": "string",
        "description": "Leg type",
        "enum": [
          "SipForwarding",
          "ServiceMinus2",
          "ServiceMinus3",
          "PstnToSip",
          "Accept",
          "FindMe",
          "FollowMe",
          "TestCall",
          "FaxSent",
          "CallBack",
          "CallingCard",
          "RingDirectly",
          "RingOutWebToSubscriber",
          "RingOutWebToCaller",
          "SipToPstnMetered",
          "RingOutClientToSubscriber",
          "RingOutClientToCaller",
          "RingMe",
          "TransferCall",
          "SipToPstnUnmetered",
          "RingOutDeviceToSubscriber",
          "RingOutDeviceToCaller",
          "RingOutOneLegToCaller",
          "ExtensionToExtension",
          "CallPark",
          "PagingServer",
          "Hunting",
          "OutgoingFreeSpDl",
          "ParkLocation",
          "ConferenceCall",
          "MobileApp",
          "Monitoring",
          "MoveToConference",
          "Unknown"
        ]
      },
      "startTime": {
        "type": "string",
        "description": "The call start datetime in ISO 8601 format including timezone, for example 2016-03-10T18:07:52.534Z",
        "format": "date-time"
      },
      "type": {
        "type": "string",
        "description": "The type of a call",
        "enum": [
          "Voice",
          "Fax"
        ]
      },
      "result": {
        "type": "string",
        "description": "The result of the call operation",
        "enum": [
          "Unknown",
          "Accepted",
          "Call connected",
          "In Progress",
          "Voicemail",
          "Reply",
          "Missed",
          "Busy",
          "Rejected",
          "No Answer",
          "Hang Up",
          "Blocked",
          "ResultEmpty",
          "Suspended account",
          "Call Failed",
          "Call Failure",
          "Internal Error",
          "IP Phone Offline",
          "No Calling Credit",
          "Not Allowed",
          "Restricted Number",
          "Wrong Number",
          "Answered Not Accepted",
          "Stopped",
          "Poor Line Quality",
          "International Disabled",
          "International Restricted",
          "Abandoned",
          "Declined",
          "Received",
          "Fax on Demand",
          "Partial Receive",
          "Receive Error",
          "Fax Receipt Error",
          "Fax Partially Sent",
          "No fax machine",
          "Send Error",
          "Sent",
          "Fax Not Sent",
          "Fax Poor Line"
        ]
      },
      "reasonDescription": {
        "type": "string"
      },
      "from": {
        "$ref": "#/components/schemas/CallLogCallerInfo"
      },
      "to": {
        "$ref": "#/components/schemas/CallLogCallerInfo"
      },
      "transport": {
        "type": "string",
        "description": "The type of a call transport. 'PSTN' indicates that a call leg was initiated\nfrom the PSTN network provider; 'VoIP' - from an RC phone.\n",
        "enum": [
          "PSTN",
          "VoIP"
        ]
      },
      "recording": {
        "$ref": "#/components/schemas/CallLogRecordingInfo"
      },
      "shortRecording": {
        "type": "boolean",
        "description": "Indicates that the recording is too short and therefore wouldn't be returned. The flag is not returned if the value is false"
      },
      "master": {
        "type": "boolean",
        "description": "Returned for 'Detailed' call log. Specifies if the leg is master-leg"
      },
      "message": {
        "$ref": "#/components/schemas/CallLogRecordMessage"
      },
      "telephonySessionId": {
        "type": "string",
        "description": "Telephony identifier of a call session"
      },
      "sipUuidInfo": {
        "type": "string",
        "description": "Call session identifier, required for Telephony REST API"
      },
      "transferTarget": {
        "$ref": "#/components/schemas/CallLogRecordLegInfoTransferTarget"
      },
      "transferee": {
        "$ref": "#/components/schemas/CallLogRecordLegInfoTransferee"
      },
      "partyId": {
        "type": "string",
        "description": "Internal Identifier of Participant"
      },
      "internalType": {
        "type": "string",
        "description": "The internal type of the call",
        "enum": [
          "Local",
          "LongDistance",
          "International",
          "Sip",
          "RingMe",
          "RingOut",
          "Usual",
          "TollFreeNumber",
          "VerificationNumber",
          "Vma",
          "LocalNumber",
          "ImsOutgoing",
          "ImsIncoming"
        ]
      }
    },
    "name": "CallLogRecordLegInfo"
  },
  {
    "required": [
      "navigation",
      "paging",
      "records"
    ],
    "type": "object",
    "properties": {
      "uri": {
        "type": "string",
        "format": "uri",
        "description": "Link to the list of company call log records"
      },
      "records": {
        "type": "array",
        "description": "List of call log records",
        "items": {
          "$ref": "#/components/schemas/CompanyCallLogRecord"
        }
      },
      "navigation": {
        "$ref": "#/components/schemas/CallLogNavigationInfo"
      },
      "paging": {
        "$ref": "#/components/schemas/CallLogPagingInfo"
      }
    },
    "name": "AccountCallLogResponse"
  },
  {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "Internal identifier of the call recording"
      },
      "uri": {
        "type": "string",
        "format": "uri",
        "description": "Link to the call recording metadata resource"
      },
      "type": {
        "type": "string",
        "description": "Indicates recording mode used",
        "enum": [
          "Automatic",
          "OnDemand"
        ]
      },
      "contentUri": {
        "type": "string",
        "format": "uri",
        "description": "Link to a call recording binary content. Has to be retrieved with proper authorization\n(access token must be passed via `Authorization` header or query parameter)\n"
      }
    },
    "description": "Call recording data. Returned if the call was recorded",
    "name": "CallLogRecordingInfo"
  },
  {
    "type": "object",
    "properties": {
      "phoneNumber": {
        "type": "string",
        "description": "Phone number of a party. Usually it is a plain number including country and area code like 18661234567. But sometimes it could be returned from database with some formatting applied, for example (866)123-4567. This property is filled in all cases where parties communicate by means of global phone numbers, for example when calling to direct numbers or sending/receiving SMS"
      },
      "extensionNumber": {
        "type": "string",
        "description": "Extension short number (usually 3 or 4 digits). This property is filled when parties communicate by means of short internal numbers, for example when calling to other extension or sending/receiving Company Pager message"
      },
      "extensionId": {
        "type": "string",
        "description": "Internal identifier of an extension"
      },
      "location": {
        "type": "string",
        "description": "Contains party location (city, state) if one can be determined from phoneNumber. This property is filled only when phoneNumber is not empty and server can calculate location information from it (for example, this information is unavailable for US toll-free numbers)"
      },
      "name": {
        "type": "string",
        "description": "Symbolic name associated with a party. If the phone does not belong to the known extension, only the location is returned, the name is not determined then"
      },
      "device": {
        "$ref": "#/components/schemas/CallLogRecordDeviceInfo"
      }
    },
    "name": "CallLogCallerInfo"
  },
  {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "Internal identifier of a device"
      },
      "uri": {
        "type": "string",
        "format": "uri",
        "description": "Canonical URI of a device resource"
      }
    },
    "name": "CallLogRecordDeviceInfo"
  },
  {
    "type": "object",
    "properties": {
      "id": {
        "type": "integer",
        "format": "int64",
        "description": "Internal identifier of an extension"
      },
      "uri": {
        "type": "string",
        "format": "uri",
        "description": "Canonical URI of an extension"
      }
    },
    "name": "ExtensionInfoCallLog"
  },
  {
    "type": "object",
    "properties": {
      "firstPage": {
        "$ref": "#/components/schemas/CallLogNavigationInfoURI"
      },
      "nextPage": {
        "$ref": "#/components/schemas/CallLogNavigationInfoURI"
      },
      "previousPage": {
        "$ref": "#/components/schemas/CallLogNavigationInfoURI"
      }
    },
    "name": "CallLogNavigationInfo"
  },
  {
    "type": "object",
    "properties": {
      "costIncluded": {
        "type": "number",
        "format": "double",
        "description": "Cost per minute, paid and already included in your RingCentral service plan.\nFor example International Calls\n"
      },
      "costPurchased": {
        "type": "number",
        "format": "double",
        "description": "Cost per minute, paid and not included in your RingCentral service plan"
      }
    },
    "description": "Billing information related to the call. Returned for 'Detailed' view only",
    "name": "BillingInfo"
  },
  {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "Internal identifier of a Secretary extension"
      },
      "name": {
        "type": "string",
        "description": "Custom name of a Secretary extension"
      }
    },
    "description": "Information on a delegate extension that actually implemented a call action. For Secretary call log the field is returned if the current extension implemented a call. For Boss call log the field contains information on a Secretary extension which actually implemented a call on behalf of the current extension",
    "name": "CallLogDelegateInfo"
  },
  {
    "type": "object",
    "properties": {
      "page": {
        "type": "integer",
        "format": "int32",
        "description": "The current page number. 1-indexed, so the first page is 1 by default. May be omitted if result is empty (because non-existent page was specified or perPage=0 was requested)"
      },
      "perPage": {
        "type": "integer",
        "format": "int32",
        "description": "Current page size, describes how many items are in each page. Maximum value is 1000. If perPage value in the request is greater than 1000, the maximum value (1000) is applied"
      },
      "pageStart": {
        "type": "integer",
        "format": "int32",
        "description": "The zero-based number of the first element on the current page. Omitted if the page is omitted or result is empty"
      },
      "pageEnd": {
        "type": "integer",
        "format": "int32",
        "description": "The zero-based index of the last element on the current page. Omitted if the page is omitted or result is empty"
      }
    },
    "name": "CallLogPagingInfo"
  },
  {
    "type": "object",
    "properties": {
      "uri": {
        "type": "string",
        "format": "uri"
      }
    },
    "name": "CallLogNavigationInfoURI"
  },
  {
    "type": "object",
    "properties": {
      "uri": {
        "type": "string",
        "format": "uri",
        "description": "Link to account call log sync resource"
      },
      "records": {
        "type": "array",
        "description": "List of call log records with synchronization information. For 'ISync' the total number of returned records is limited to 250; this includes both new records and the old ones, specified by the recordCount parameter",
        "items": {
          "$ref": "#/components/schemas/CompanyCallLogRecord"
        }
      },
      "syncInfo": {
        "$ref": "#/components/schemas/CallLogSyncInfo"
      }
    },
    "name": "AccountCallLogSyncResponse"
  },
  {
    "type": "object",
    "properties": {
      "syncType": {
        "type": "string",
        "description": "Type of call log synchronization request: full or incremental sync",
        "enum": [
          "FSync",
          "ISync"
        ]
      },
      "syncToken": {
        "type": "string",
        "description": "Synchronization token"
      },
      "syncTime": {
        "type": "string",
        "format": "date-time",
        "description": "Time of the last synchronization in (ISO 8601)[https://en.wikipedia.org/wiki/ISO_8601] format including timezone, for example *2016-03-10T18:07:52.534Z*"
      }
    },
    "name": "CallLogSyncInfo"
  },
  {
    "required": [
      "navigation",
      "paging",
      "records"
    ],
    "type": "object",
    "properties": {
      "uri": {
        "type": "string",
        "format": "uri",
        "description": "Link to the list of company active call records"
      },
      "records": {
        "type": "array",
        "description": "List of call log records",
        "items": {
          "$ref": "#/components/schemas/CompanyCallLogRecord"
        }
      },
      "navigation": {
        "$ref": "#/components/schemas/CallLogNavigationInfo"
      },
      "paging": {
        "$ref": "#/components/schemas/CallLogPagingInfo"
      }
    },
    "name": "CompanyActiveCallsResponse"
  },
  {
    "type": "object",
    "properties": {
      "errorCode": {
        "type": "string",
        "description": "Error code"
      },
      "message": {
        "type": "string",
        "description": "Error message"
      },
      "parameterName": {
        "type": "string",
        "description": "Name of invalid parameter"
      },
      "parameterValue": {
        "type": "string",
        "description": "Value of invalid parameter"
      }
    },
    "name": "ErrorEntity"
  },
  {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "Internal Identifier of a formatting language"
      }
    },
    "name": "ExtensionFormattingLocaleInfoRequest"
  },
  {
    "required": [
      "creationTime",
      "id",
      "lastModifiedTime",
      "status",
      "uri"
    ],
    "type": "object",
    "description": "Information on a task for updating multiple extensions\n",
    "properties": {
      "uri": {
        "type": "string",
        "format": "uri",
        "description": "Link to a task resource"
      },
      "id": {
        "type": "string",
        "description": "Internal identifier of a task"
      },
      "status": {
        "type": "string",
        "description": "Task status",
        "enum": [
          "Accepted",
          "InProgress",
          "Completed",
          "Failed"
        ]
      },
      "creationTime": {
        "type": "string",
        "format": "date-time",
        "description": "Task creation datetime"
      },
      "lastModifiedTime": {
        "type": "string",
        "format": "date-time",
        "description": "Task latest update datetime"
      },
      "result": {
        "$ref": "#/components/schemas/ExtensionBulkUpdateTaskResult"
      }
    },
    "name": "ExtensionBulkUpdateTaskResource"
  },
  {
    "type": "object",
    "properties": {
      "slaGoal": {
        "type": "integer",
        "format": "int32",
        "description": "Target percentage of calls that must be answered by agents\nwithin the service level time threshold\n"
      },
      "slaThresholdSeconds": {
        "type": "integer",
        "format": "int32"
      },
      "includeAbandonedCalls": {
        "type": "boolean"
      },
      "abandonedThresholdSeconds": {
        "type": "integer",
        "format": "int32"
      }
    },
    "description": "For Call Queue extension type only. Please note that legacy 'Department'\nextension type corresponds to 'Call Queue' extensions in modern RingCentral\nproduct terminology\n",
    "name": "CallQueueInfoRequest"
  },
  {
    "type": "object",
    "properties": {
      "comment": {
        "type": "string",
        "description": "A free-form user comment, describing the status change reason"
      },
      "reason": {
        "type": "string",
        "description": "Type of suspension",
        "enum": [
          "Voluntarily",
          "Involuntarily",
          "SuspendedVoluntarily"
        ]
      }
    },
    "description": "Status information (reason, comment). Returned for 'Disabled'\nstatus only\n",
    "name": "ExtensionStatusInfo"
  },
  {
    "type": "object",
    "properties": {
      "ref": {
        "type": "string",
        "description": "Non-RC identifier of an extension"
      },
      "type": {
        "type": "string",
        "description": "Type of external identifier",
        "enum": [
          "PartnerId",
          "CustomerDirectoryId"
        ]
      }
    },
    "name": "ReferenceInfo"
  },
  {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "Internal identifier of a greeting language"
      }
    },
    "name": "ExtensionGreetingLanguageInfoRequest"
  },
  {
    "type": "object",
    "properties": {
      "type": {
        "type": "string",
        "description": "Voice name type. 'Default' - default extension name; first\nname and last name specified in user profile; 'TextToSpeech' - custom\ntext; user name spelled the way it sounds and specified by user; 'Recorded'\n- custom audio, user name recorded in user's own voice (supported only\nfor extension retrieval)\n",
        "enum": [
          "Default",
          "TextToSpeech",
          "Recorded"
        ]
      },
      "text": {
        "type": "string",
        "description": "Custom text"
      },
      "prompt": {
        "$ref": "#/components/schemas/PronouncedNamePromptInfo"
      }
    },
    "name": "PronouncedNameInfo"
  },
  {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "Internal identifier of a country"
      }
    },
    "name": "ExtensionCountryInfoRequest"
  },
  {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "Internal identifier of an extension"
      },
      "status": {
        "type": "string",
        "enum": [
          "Disabled",
          "Enabled",
          "NotActivated",
          "Frozen"
        ]
      },
      "statusInfo": {
        "$ref": "#/components/schemas/ExtensionStatusInfo"
      },
      "reason": {
        "type": "string",
        "description": "Type of suspension"
      },
      "comment": {
        "type": "string",
        "description": "Free form user comment"
      },
      "extensionNumber": {
        "type": "string",
        "description": "Extension number available"
      },
      "contact": {
        "$ref": "#/components/schemas/ContactInfoUpdateRequest"
      },
      "regionalSettings": {
        "$ref": "#/components/schemas/ExtensionRegionalSettingRequest"
      },
      "setupWizardState": {
        "type": "string",
        "enum": [
          "NotStarted",
          "Incomplete",
          "Completed"
        ]
      },
      "partnerId": {
        "type": "string",
        "description": "Additional extension identifier created by partner application\nand applied on client side\n"
      },
      "ivrPin": {
        "type": "string",
        "description": "IVR PIN"
      },
      "password": {
        "type": "string",
        "description": "Password for extension"
      },
      "callQueueInfo": {
        "$ref": "#/components/schemas/CallQueueInfoRequest"
      },
      "transition": {
        "$ref": "#/components/schemas/UserTransitionInfo"
      },
      "customFields": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/CustomFieldInfo"
        }
      },
      "hidden": {
        "type": "boolean",
        "description": "Hides extension from showing in company directory. Supported for extensions of User type only"
      },
      "site": {
        "$ref": "#/components/schemas/ProvisioningSiteInfo"
      },
      "type": {
        "type": "string",
        "description": "Extension type. Please note that legacy 'Department' extension\ntype corresponds to 'Call Queue' extensions in modern RingCentral\nproduct terminology\n",
        "enum": [
          "User",
          "FaxUser",
          "VirtualUser",
          "DigitalUser",
          "Department",
          "Announcement",
          "Voicemail",
          "SharedLinesGroup",
          "PagingOnly",
          "IvrMenu",
          "ApplicationExtension",
          "ParkLocation",
          "DelegatedLinesGroup"
        ]
      },
      "references": {
        "type": "array",
        "description": "List of non-RC internal identifiers assigned to an extension\n",
        "items": {
          "$ref": "#/components/schemas/ReferenceInfo"
        }
      }
    },
    "name": "ExtensionBulkUpdateInfo"
  },
  {
    "type": "object",
    "properties": {
      "id": {
        "type": "string"
      },
      "contentUri": {
        "type": "string",
        "format": "uri",
        "description": "Link to a prompt resource"
      },
      "contentType": {
        "type": "string",
        "description": "Content media type",
        "enum": [
          "audio/mpeg",
          "audio/wav"
        ]
      }
    },
    "name": "PronouncedNamePromptInfo"
  },
  {
    "type": "object",
    "properties": {
      "country": {
        "type": "string",
        "description": "Country name of an extension user company"
      },
      "state": {
        "type": "string",
        "description": "State/province name of an extension user company. Mandatory\nfor the USA, UK and Canada\n"
      },
      "city": {
        "type": "string",
        "description": "City name of an extension user company"
      },
      "street": {
        "type": "string",
        "description": "Street address of an extension user company"
      },
      "zip": {
        "type": "string",
        "description": "Zip code of an extension user company"
      }
    },
    "description": "Extension user business address. The default is\nCompany (Auto-Receptionist) settings\n",
    "name": "ContactBusinessAddressInfo"
  },
  {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "format": "uri",
        "description": "Internal identifier of a site"
      },
      "uri": {
        "type": "string",
        "format": "uri",
        "description": "Link to a site resource"
      },
      "name": {
        "type": "string",
        "description": "Name of a site"
      },
      "code": {
        "type": "string",
        "description": "Site code value. Returned only if specified"
      }
    },
    "description": "Site data. If multi-site feature is turned on for an account,\nthen ID of a site must be specified. In order to assign a wireless\npoint to the main site (company) the site ID should be set to `main-site`\n",
    "name": "ProvisioningSiteInfo"
  },
  {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "Internal identifier of a custom field"
      },
      "value": {
        "type": "string",
        "description": "Custom field value"
      },
      "displayName": {
        "type": "string"
      }
    },
    "name": "CustomFieldInfo"
  },
  {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "Internal identifier of a timezone"
      }
    },
    "name": "ExtensionTimezoneInfoRequest"
  },
  {
    "type": "object",
    "properties": {
      "homeCountry": {
        "$ref": "#/components/schemas/ExtensionCountryInfoRequest"
      },
      "timezone": {
        "$ref": "#/components/schemas/ExtensionTimezoneInfoRequest"
      },
      "language": {
        "$ref": "#/components/schemas/ExtensionLanguageInfoRequest"
      },
      "greetingLanguage": {
        "$ref": "#/components/schemas/ExtensionGreetingLanguageInfoRequest"
      },
      "formattingLocale": {
        "$ref": "#/components/schemas/ExtensionFormattingLocaleInfoRequest"
      },
      "timeFormat": {
        "type": "string",
        "description": "Time format setting",
        "default": "12h",
        "enum": [
          "12h",
          "24h"
        ]
      }
    },
    "name": "ExtensionRegionalSettingRequest"
  },
  {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "Internal identifier of a language"
      }
    },
    "name": "ExtensionLanguageInfoRequest"
  },
  {
    "required": [
      "records"
    ],
    "description": "List of extensions to be updated",
    "type": "object",
    "properties": {
      "records": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/ExtensionBulkUpdateInfo"
        }
      }
    },
    "name": "ExtensionBulkUpdateRequest"
  },
  {
    "type": "object",
    "properties": {
      "sendWelcomeEmailsToUsers": {
        "type": "boolean",
        "description": "Specifies if a welcome/activation email is sent to the existing\nusers during account confirmation\n"
      },
      "sendWelcomeEmail": {
        "type": "boolean",
        "description": "Specifies if a welcome/activation email is sent to\nthe new users (within extension status changing from\n'Unassigned' to 'NotActivated/Disabled')\"\n"
      }
    },
    "description": "For NotActivated extensions only. Welcome email settings\n",
    "name": "UserTransitionInfo"
  },
  {
    "type": "object",
    "description": "Result record on multiple extension update task",
    "properties": {
      "affectedItems": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/ExtensionUpdateShortResult"
        }
      },
      "errors": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/ErrorEntity"
        }
      }
    },
    "name": "ExtensionBulkUpdateTaskResult"
  },
  {
    "type": "object",
    "properties": {
      "extensionId": {
        "type": "string",
        "description": "Internal identifier of an extension"
      },
      "status": {
        "type": "string",
        "description": "Extension update status",
        "enum": [
          "Fail",
          "Success"
        ]
      },
      "errors": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/ErrorEntity"
        }
      }
    },
    "name": "ExtensionUpdateShortResult"
  },
  {
    "type": "object",
    "properties": {
      "firstName": {
        "type": "string",
        "description": "For User extension type only. Extension user first name\n"
      },
      "lastName": {
        "type": "string",
        "description": "For User extension type only. Extension user last name\n"
      },
      "company": {
        "type": "string",
        "description": "Extension user company name"
      },
      "jobTitle": {
        "type": "string"
      },
      "email": {
        "type": "string",
        "format": "email",
        "description": "Email of extension user"
      },
      "businessPhone": {
        "type": "string",
        "description": "Extension user contact phone number in\n[E.164](https://www.itu.int/rec/T-REC-E.164-201011-I)\nformat\n"
      },
      "mobilePhone": {
        "type": "string",
        "description": "Extension user mobile (**non** Toll Free) phone number in\n[E.164](https://www.itu.int/rec/T-REC-E.164-201011-I)\n(with '+' sign) format\n"
      },
      "businessAddress": {
        "$ref": "#/components/schemas/ContactBusinessAddressInfo"
      },
      "emailAsLoginName": {
        "type": "boolean",
        "description": "If 'True' then contact email is enabled as login name for\nthis user. Please note that email should be unique in this case.\nThe default value is 'False'\n"
      },
      "pronouncedName": {
        "$ref": "#/components/schemas/PronouncedNameInfo"
      },
      "department": {
        "type": "string",
        "description": "Extension user department, if any"
      }
    },
    "name": "ContactInfoUpdateRequest"
  },
  {
    "required": [
      "navigation",
      "paging",
      "records"
    ],
    "type": "object",
    "properties": {
      "uri": {
        "type": "string",
        "format": "uri",
        "description": "Link to user templates resource"
      },
      "records": {
        "type": "array",
        "description": "List of user templates",
        "items": {
          "$ref": "#/components/schemas/TemplateInfo"
        }
      },
      "navigation": {
        "$ref": "#/components/schemas/ProvisioningNavigationInfo"
      },
      "paging": {
        "$ref": "#/components/schemas/ProvisioningPagingInfo"
      }
    },
    "name": "UserTemplates"
  },
  {
    "type": "object",
    "properties": {
      "uri": {
        "type": "string",
        "format": "uri"
      }
    },
    "description": "Canonical URI for the corresponding page of the list\n",
    "name": "ProvisioningNavigationInfoUri"
  },
  {
    "type": "object",
    "properties": {
      "page": {
        "type": "integer",
        "format": "int32",
        "description": "Current page number. 1-indexed, so the first page is 1\nby default. May be omitted if result is empty (because non-existent page\nwas specified or perPage=0 was requested)\n"
      },
      "perPage": {
        "type": "integer",
        "format": "int32",
        "description": "Current page size, describes how many items are in each page.\nDefault value is 100. Maximum value is 1000. If perPage value in the request\nis greater than 1000, the maximum value (1000) is applied\n"
      },
      "pageStart": {
        "type": "integer",
        "format": "int32",
        "description": "The zero-based number of the first element on the current page.\nOmitted if the page is omitted or result is empty\n"
      },
      "pageEnd": {
        "type": "integer",
        "format": "int32",
        "description": "The zero-based index of the last element on the current page.\nOmitted if the page is omitted or result is empty\n"
      },
      "totalPages": {
        "type": "integer",
        "format": "int32",
        "description": "The total number of pages in a dataset. May be omitted for\nsome resources due to performance reasons\n"
      },
      "totalElements": {
        "type": "integer",
        "format": "int32",
        "description": "The total number of elements in a dataset. May be omitted for\nsome resource due to performance reasons\n"
      }
    },
    "description": "Information on paging",
    "name": "ProvisioningPagingInfo"
  },
  {
    "type": "object",
    "properties": {
      "uri": {
        "type": "string",
        "format": "uri",
        "description": "Link to a template"
      },
      "id": {
        "type": "string",
        "description": "Internal identifier of a template"
      },
      "type": {
        "type": "string",
        "enum": [
          "UserSettings",
          "CallHandling"
        ]
      },
      "name": {
        "type": "string",
        "description": "Name of a template"
      },
      "creationTime": {
        "type": "string",
        "format": "date-time",
        "description": "Time of a template creation"
      },
      "lastModifiedTime": {
        "type": "string",
        "format": "date-time",
        "description": "Time of the last template modification"
      }
    },
    "name": "TemplateInfo"
  },
  {
    "type": "object",
    "properties": {
      "firstPage": {
        "$ref": "#/components/schemas/ProvisioningNavigationInfoUri"
      },
      "nextPage": {
        "$ref": "#/components/schemas/ProvisioningNavigationInfoUri"
      },
      "previousPage": {
        "$ref": "#/components/schemas/ProvisioningNavigationInfoUri"
      },
      "lastPage": {
        "$ref": "#/components/schemas/ProvisioningNavigationInfoUri"
      }
    },
    "description": "Information on navigation",
    "name": "ProvisioningNavigationInfo"
  },
  {
    "type": "object",
    "properties": {
      "callerId": {
        "type": "string",
        "description": "Phone number of a caller"
      },
      "name": {
        "type": "string",
        "description": "Displayed name for a caller ID"
      }
    },
    "name": "CompanyAnsweringRuleCallersInfoRequest"
  },
  {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "Internal identifier of an account phone number"
      },
      "phoneNumber": {
        "type": "string",
        "description": "Phone number of a callee"
      }
    },
    "name": "CompanyAnsweringRuleCalledNumberInfoRequest"
  },
  {
    "type": "object",
    "properties": {
      "uri": {
        "type": "string",
        "format": "uri",
        "description": "Link to an answering rule resource"
      },
      "records": {
        "type": "array",
        "description": "List of company answering rules",
        "items": {
          "$ref": "#/components/schemas/ListCompanyAnsweringRuleInfo"
        }
      },
      "paging": {
        "$ref": "#/components/schemas/EnumeratedPagingModel"
      },
      "navigation": {
        "$ref": "#/components/schemas/PageNavigationModel"
      }
    },
    "name": "CompanyAnsweringRuleList"
  },
  {
    "type": "object",
    "properties": {
      "from": {
        "type": "string",
        "format": "date-time",
        "description": "Beginning timestamp of the range in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601),\nfor example *2018-10-29T14:00:00*, *2018-10-29T14:00:00Z*, *2018-10-29T14:00:00+0100*\n"
      },
      "to": {
        "type": "string",
        "format": "date-time",
        "description": "Ending timestamp of the range in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601),\nfor example *2018-10-29T14:00:00*, *2018-10-29T14:00:00Z*, *2018-10-29T14:00:00+0100*\n"
      }
    },
    "name": "RangesInfo"
  },
  {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "Internal identifier of an extension"
      }
    },
    "name": "CompanyAnsweringRuleExtensionInfo"
  },
  {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "Internal identifier of an answering rule"
      },
      "uri": {
        "type": "string",
        "format": "uri",
        "description": "Canonical URI of an answering rule"
      },
      "enabled": {
        "type": "boolean",
        "description": "Specifies if the rule is active or inactive. The default value is 'True'",
        "default": true
      },
      "type": {
        "type": "string",
        "description": "Type of an answering rule, the default value is 'Custom' = ['BusinessHours', 'AfterHours', 'Custom']",
        "enum": [
          "BusinessHours",
          "AfterHours",
          "Custom"
        ]
      },
      "name": {
        "type": "string",
        "description": "Name of an answering rule specified by user. Max number of symbols is 30. The default value is 'My Rule N' where 'N' is the first free number"
      },
      "calledNumbers": {
        "type": "array",
        "description": "Answering rules are applied when calling to selected number(s)",
        "items": {
          "$ref": "#/components/schemas/CalledNumberInfo"
        }
      },
      "extension": {
        "$ref": "#/components/schemas/CompanyAnsweringRuleExtensionInfo"
      }
    },
    "name": "ListCompanyAnsweringRuleInfo"
  },
  {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "Internal identifier of an extension"
      }
    },
    "description": "Extension to which the call is forwarded in 'Bypass' mode",
    "name": "CompanyAnsweringRuleExtensionInfoRequest"
  },
  {
    "type": "object",
    "properties": {
      "monday": {
        "type": "array",
        "description": "Time interval for a particular day",
        "items": {
          "$ref": "#/components/schemas/CompanyAnsweringRuleTimeIntervalRequest"
        }
      },
      "tuesday": {
        "type": "array",
        "description": "Time interval for a particular day",
        "items": {
          "$ref": "#/components/schemas/CompanyAnsweringRuleTimeIntervalRequest"
        }
      },
      "wednesday": {
        "type": "array",
        "description": "Time interval for a particular day",
        "items": {
          "$ref": "#/components/schemas/CompanyAnsweringRuleTimeIntervalRequest"
        }
      },
      "thursday": {
        "type": "array",
        "description": "Time interval for a particular day",
        "items": {
          "$ref": "#/components/schemas/CompanyAnsweringRuleTimeIntervalRequest"
        }
      },
      "friday": {
        "type": "array",
        "description": "Time interval for a particular day",
        "items": {
          "$ref": "#/components/schemas/CompanyAnsweringRuleTimeIntervalRequest"
        }
      },
      "saturday": {
        "type": "array",
        "description": "Time interval for a particular day",
        "items": {
          "$ref": "#/components/schemas/CompanyAnsweringRuleTimeIntervalRequest"
        }
      },
      "sunday": {
        "type": "array",
        "description": "Time interval for a particular day",
        "items": {
          "$ref": "#/components/schemas/CompanyAnsweringRuleTimeIntervalRequest"
        }
      }
    },
    "description": "Weekly schedule. If specified, ranges cannot be specified",
    "name": "CompanyAnsweringRuleWeeklyScheduleInfoRequest"
  },
  {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "Internal identifier of an account phone number"
      },
      "phoneNumber": {
        "type": "string",
        "description": "Phone number of a callee"
      }
    },
    "name": "CompanyAnsweringRuleCalledNumberInfo"
  },
  {
    "type": "object",
    "properties": {
      "from": {
        "type": "string",
        "description": "Time in format hh:mm"
      },
      "to": {
        "type": "string",
        "description": "Time in format hh:mm"
      }
    },
    "name": "CompanyAnsweringRuleTimeIntervalRequest"
  },
  {
    "type": "object",
    "properties": {
      "phoneNumber": {
        "type": "string",
        "description": "Called phone number"
      }
    },
    "name": "CalledNumberInfo"
  },
  {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "Internal identifier of a custom user greeting"
      }
    },
    "name": "CustomGreetingInfoRequest"
  },
  {
    "type": "object",
    "properties": {
      "name": {
        "type": "string",
        "description": "Name of an answering rule specified by user. Max number of symbols is 30. The default value is 'My Rule N' where 'N' is the first free number"
      },
      "enabled": {
        "type": "boolean",
        "description": "Specifies if the rule is active or inactive. The default value is 'True'",
        "default": true
      },
      "type": {
        "type": "string",
        "description": "Type of an answering rule, the default value is 'Custom' = ['BusinessHours', 'AfterHours', 'Custom']",
        "enum": [
          "BusinessHours",
          "AfterHours",
          "Custom"
        ]
      },
      "callers": {
        "type": "array",
        "description": "Answering rule will be applied when calls are received from the specified caller(s)",
        "items": {
          "$ref": "#/components/schemas/CompanyAnsweringRuleCallersInfoRequest"
        }
      },
      "calledNumbers": {
        "type": "array",
        "description": "Answering rule will be applied when calling the specified number(s)",
        "items": {
          "$ref": "#/components/schemas/CompanyAnsweringRuleCalledNumberInfo"
        }
      },
      "schedule": {
        "$ref": "#/components/schemas/CompanyAnsweringRuleScheduleInfoRequest"
      },
      "callHandlingAction": {
        "type": "string",
        "description": "Specifies how incoming calls are forwarded. The default value is 'Operator' 'Operator' - play company greeting and forward to operator extension 'Disconnect' - play company greeting and disconnect 'Bypass' - bypass greeting to go to selected extension = ['Operator', 'Disconnect', 'Bypass']",
        "enum": [
          "Operator",
          "Disconnect",
          "Bypass"
        ]
      },
      "extension": {
        "$ref": "#/components/schemas/CompanyAnsweringRuleCallersInfoRequest"
      },
      "greetings": {
        "type": "array",
        "description": "Greetings applied for an answering rule; only predefined greetings can be applied, see Dictionary Greeting List",
        "items": {
          "$ref": "#/components/schemas/GreetingInfo"
        }
      }
    },
    "name": "CompanyAnsweringRuleRequest"
  },
  {
    "type": "object",
    "properties": {
      "uri": {
        "type": "string",
        "format": "uri",
        "description": "Link to a greeting resource"
      },
      "id": {
        "type": "string",
        "description": "Internal identifier of a greeting"
      },
      "name": {
        "type": "string",
        "description": "Name of a greeting"
      }
    },
    "name": "PresetInfo"
  },
  {
    "type": "object",
    "properties": {
      "weeklyRanges": {
        "$ref": "#/components/schemas/CompanyAnsweringRuleWeeklyScheduleInfoRequest"
      },
      "ranges": {
        "type": "array",
        "description": "Specific data ranges. If specified, weeklyRanges cannot be specified",
        "items": {
          "$ref": "#/components/schemas/RangesInfo"
        }
      },
      "ref": {
        "type": "string",
        "description": "Reference to Business Hours or After Hours schedule = ['BusinessHours', 'AfterHours']",
        "enum": [
          "BusinessHours",
          "AfterHours"
        ]
      }
    },
    "description": "Schedule when an answering rule should be applied",
    "name": "CompanyAnsweringRuleScheduleInfo"
  },
  {
    "type": "object",
    "properties": {
      "type": {
        "type": "string",
        "description": "Type of a greeting, specifying the case when the greeting is played.",
        "enum": [
          "Introductory",
          "Announcement",
          "AutomaticRecording",
          "BlockedCallersAll",
          "BlockedCallersSpecific",
          "BlockedNoCallerId",
          "BlockedPayPhones",
          "ConnectingMessage",
          "ConnectingAudio",
          "StartRecording",
          "StopRecording",
          "Voicemail",
          "Unavailable",
          "InterruptPrompt",
          "HoldMusic",
          "Company"
        ]
      },
      "preset": {
        "$ref": "#/components/schemas/PresetInfo"
      },
      "custom": {
        "$ref": "#/components/schemas/CustomGreetingInfoRequest"
      }
    },
    "name": "GreetingInfo"
  },
  {
    "type": "object",
    "properties": {
      "weeklyRanges": {
        "$ref": "#/components/schemas/CompanyAnsweringRuleWeeklyScheduleInfoRequest"
      },
      "ranges": {
        "type": "array",
        "description": "Specific data ranges. If specified, weeklyRanges cannot be specified",
        "items": {
          "$ref": "#/components/schemas/RangesInfo"
        }
      },
      "ref": {
        "type": "string",
        "description": "Reference to Business Hours or After Hours schedule",
        "enum": [
          "BusinessHours",
          "AfterHours"
        ]
      }
    },
    "description": "Schedule when an answering rule should be applied",
    "name": "CompanyAnsweringRuleScheduleInfoRequest"
  },
  {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "Internal identifier of an answering rule"
      },
      "uri": {
        "type": "string",
        "format": "uri",
        "description": "Canonical URI of an answering rule"
      },
      "enabled": {
        "type": "boolean",
        "description": "Specifies if the rule is active or inactive",
        "default": true
      },
      "type": {
        "type": "string",
        "description": "Type of an answering rule",
        "default": "Custom",
        "enum": [
          "BusinessHours",
          "AfterHours",
          "Custom"
        ]
      },
      "name": {
        "type": "string",
        "description": "Name of an answering rule specified by user. Max number of symbols is 30. The default value is 'My Rule N' where 'N' is the first free number"
      },
      "callers": {
        "type": "array",
        "description": "Answering rule will be applied when calls are received from the specified caller(s)",
        "items": {
          "$ref": "#/components/schemas/CompanyAnsweringRuleCallersInfoRequest"
        }
      },
      "calledNumbers": {
        "type": "array",
        "description": "Answering rule will be applied when calling the specified number(s)",
        "items": {
          "$ref": "#/components/schemas/CompanyAnsweringRuleCalledNumberInfoRequest"
        }
      },
      "schedule": {
        "$ref": "#/components/schemas/CompanyAnsweringRuleScheduleInfo"
      },
      "callHandlingAction": {
        "type": "string",
        "description": "Specifies how incoming calls are forwarded. The default value is 'Operator' 'Operator' - play company greeting and forward to operator extension 'Disconnect' - play company greeting and disconnect 'Bypass' - bypass greeting to go to selected extension = ['Operator', 'Disconnect', 'Bypass']",
        "enum": [
          "Operator",
          "Disconnect",
          "Bypass"
        ]
      },
      "extension": {
        "$ref": "#/components/schemas/CompanyAnsweringRuleExtensionInfoRequest"
      },
      "greetings": {
        "type": "array",
        "description": "Greetings applied for an answering rule; only predefined greetings can be applied, see Dictionary Greeting List",
        "items": {
          "$ref": "#/components/schemas/GreetingInfo"
        }
      }
    },
    "name": "CompanyAnsweringRuleInfo"
  },
  {
    "type": "object",
    "properties": {
      "enabled": {
        "type": "boolean",
        "description": "Specifies if a rule is active or inactive. The default value is 'True'",
        "default": true
      },
      "name": {
        "type": "string",
        "description": "Name of an answering rule specified by user. Max number of\nsymbols is 30. The default value is 'My Rule N' where 'N' is the first\nfree number\n"
      },
      "callers": {
        "type": "array",
        "description": "Answering rule will be applied when calls are received from\nthe specified caller(s)\n",
        "items": {
          "$ref": "#/components/schemas/CompanyAnsweringRuleCallersInfoRequest"
        }
      },
      "calledNumbers": {
        "type": "array",
        "description": "Answering rule will be applied when calling the specified number(s)",
        "items": {
          "$ref": "#/components/schemas/CompanyAnsweringRuleCalledNumberInfo"
        }
      },
      "schedule": {
        "$ref": "#/components/schemas/CompanyAnsweringRuleScheduleInfoRequest"
      },
      "callHandlingAction": {
        "type": "string",
        "description": "Specifies how incoming calls are forwarded. The default value is 'Operator' 'Operator' - play company greeting and forward to operator extension 'Disconnect' - play company greeting and disconnect 'Bypass' - bypass greeting to go to selected extension = ['Operator', 'Disconnect','Bypass']",
        "enum": [
          "Operator",
          "Disconnect",
          "Bypass"
        ]
      },
      "type": {
        "type": "string",
        "description": "Type of an answering rule",
        "default": "Custom",
        "enum": [
          "BusinessHours",
          "AfterHours",
          "Custom"
        ]
      },
      "extension": {
        "$ref": "#/components/schemas/CompanyAnsweringRuleCallersInfoRequest"
      },
      "greetings": {
        "type": "array",
        "description": "Greetings applied for an answering rule; only predefined greetings\ncan be applied, see Dictionary Greeting List\n",
        "items": {
          "$ref": "#/components/schemas/GreetingInfo"
        }
      }
    },
    "name": "CompanyAnsweringRuleUpdate"
  },
  {
    "type": "object",
    "properties": {
      "records": {
        "type": "array",
        "description": "An array containing individual messages",
        "items": {
          "$ref": "#/components/schemas/MessageListMessageResponse"
        }
      },
      "paging": {
        "$ref": "#/components/schemas/PagingResource"
      }
    },
    "description": "List of messages retrieved for an account and other filter criteria such as `batchId` and `fromPhoneNumber` specified in the request",
    "name": "MessageListResponse"
  },
  {
    "type": "object",
    "description": "Pagination details",
    "properties": {
      "pageToken": {
        "type": "string",
        "description": "Page token of the current response list",
        "example": "pgt1"
      },
      "perPage": {
        "type": "integer",
        "format": "int32",
        "description": "Number of records per page",
        "example": 3
      },
      "firstPageToken": {
        "type": "string",
        "description": "First page token of the current filter criteria",
        "example": "fpgt1"
      },
      "previousPageToken": {
        "type": "string",
        "description": "Previous page token of the current filter criteria",
        "example": "lpgt1"
      },
      "nextPageToken": {
        "type": "string",
        "description": "Next page token of the current filter criteria",
        "example": "npgt1"
      }
    },
    "name": "PagingResource"
  },
  {
    "type": "object",
    "description": "Error response",
    "required": [
      "errorCode",
      "message"
    ],
    "properties": {
      "errorCode": {
        "type": "string",
        "description": "Error code",
        "example": "CMN-101"
      },
      "message": {
        "type": "string",
        "description": "Human-readable description of the error. Not suitable for end users.",
        "example": "AccountId 1234 is invalid"
      }
    },
    "name": "ASGErrorResponse"
  },
  {
    "type": "object",
    "description": "The short detail of the message in the get batch response",
    "properties": {
      "id": {
        "type": "integer",
        "format": "int64",
        "description": "The Id of the message",
        "example": 1234
      },
      "batchId": {
        "type": "string",
        "description": "Internal identifier of a batch the message was submitted in",
        "example": "12345"
      },
      "from": {
        "type": "string",
        "description": "Phone number in [E.164](https://www.itu.int/rec/T-REC-E.164-201011-I) format from which the message is sent",
        "example": "+15551234567"
      },
      "to": {
        "type": "array",
        "description": "Phone number in [E.164](https://www.itu.int/rec/T-REC-E.164-201011-I) format to which a message is sent",
        "example": [
          "+15551234567"
        ],
        "items": {
          "type": "string"
        }
      },
      "creationTime": {
        "type": "string",
        "format": "date-time",
        "description": "The time at which the message was created"
      },
      "lastModifiedTime": {
        "type": "string",
        "format": "date-time",
        "description": "The time at which the messages was last updated"
      },
      "messageStatus": {
        "type": "string",
        "description": "Current status of a message",
        "example": "Queued",
        "enum": [
          "Queued",
          "Delivered",
          "Sent",
          "SendingFailed",
          "DeliveryFailed"
        ]
      },
      "segmentCount": {
        "type": "integer",
        "description": "Number of segments of a message",
        "format": "int32",
        "example": 1
      },
      "text": {
        "type": "string",
        "description": "Text of a message. Returned if the `view` parameter is set to 'Detailed'"
      },
      "cost": {
        "type": "number",
        "description": "Cost of a message",
        "format": "double",
        "example": 0.007
      },
      "direction": {
        "type": "string",
        "description": "Direction of the SMS message",
        "enum": [
          "Inbound",
          "Outbound"
        ]
      },
      "errorCode": {
        "type": "string",
        "description": "The RC error code of the message sending failure reason",
        "example": "SMS-RC-503"
      }
    },
    "name": "MessageListMessageResponse"
  },
  {
    "type": "object",
    "description": "Complete details of the message",
    "properties": {
      "id": {
        "type": "string",
        "description": "Internal identifier of a message",
        "example": "1234"
      },
      "from": {
        "type": "string",
        "description": "Phone number in [E.164](https://www.itu.int/rec/T-REC-E.164-201011-I) format from which the message was sent",
        "example": "+15551234567"
      },
      "to": {
        "type": "array",
        "description": "List of phone numbers in [E.164](https://www.itu.int/rec/T-REC-E.164-201011-I) format to which the message was sent",
        "example": [
          "+15551234567"
        ],
        "items": {
          "type": "string"
        }
      },
      "text": {
        "type": "string",
        "description": "Text of a message, maximum number of characters is 1000",
        "example": "Hello, World!"
      },
      "creationTime": {
        "type": "string",
        "format": "date-time",
        "description": "The time when this is message was created."
      },
      "lastModifiedTime": {
        "type": "string",
        "format": "date-time",
        "description": "The time when this message was last updated."
      },
      "messageStatus": {
        "type": "string",
        "description": "Current status of a message",
        "example": "Queued",
        "enum": [
          "Queued",
          "Delivered",
          "Sent",
          "SendingFailed",
          "DeliveryFailed"
        ]
      },
      "segmentCount": {
        "type": "integer",
        "description": "Number of segments of a message",
        "format": "int32",
        "example": 1
      },
      "cost": {
        "type": "number",
        "description": "Cost of a message",
        "format": "double",
        "example": 0.007
      },
      "batchId": {
        "type": "string",
        "description": "The batch in which the message was submitted",
        "example": "batch12345"
      },
      "direction": {
        "type": "string",
        "description": "Direction of the SMS message",
        "enum": [
          "Inbound",
          "Outbound"
        ]
      },
      "errorCode": {
        "type": "string",
        "description": "The RC error code of the message sending failure reason",
        "example": "SMS-RC-503"
      }
    },
    "name": "MessageDetailsResponse"
  },
  {
    "type": "object",
    "description": "The statuses of the messages filtered by batch/account/phone numbers.",
    "properties": {
      "messageStatuses": {
        "$ref": "#/components/schemas/MessageStatuses"
      }
    },
    "name": "MessageStatusesResponse"
  },
  {
    "type": "object",
    "description": "The count of the status",
    "properties": {
      "count": {
        "type": "integer",
        "description": "The count of the status",
        "format": "int64",
        "example": 7
      },
      "errorCodeCounts": {
        "type": "object",
        "additionalProperties": {
          "type": "integer",
          "description": "The count for the error code",
          "format": "int64",
          "example": 5
        }
      }
    },
    "name": "MessageStatusCounts"
  },
  {
    "type": "object",
    "description": "The messages status object with details of each status",
    "properties": {
      "Queued": {
        "$ref": "#/components/schemas/MessageStatusCounts"
      },
      "Delivered": {
        "$ref": "#/components/schemas/MessageStatusCounts"
      },
      "DeliveryFailed": {
        "$ref": "#/components/schemas/MessageStatusCounts"
      },
      "Sent": {
        "$ref": "#/components/schemas/MessageStatusCounts"
      },
      "SendingFailed": {
        "$ref": "#/components/schemas/MessageStatusCounts"
      }
    },
    "name": "MessageStatuses"
  },
  {
    "type": "object",
    "description": "The list of opt outs",
    "properties": {
      "records": {
        "type": "array",
        "description": "List of individual opt-out number records",
        "items": {
          "$ref": "#/components/schemas/OptOutResponse"
        }
      },
      "paging": {
        "$ref": "#/components/schemas/PagingResource"
      }
    },
    "name": "OptOutListResponse"
  },
  {
    "type": "object",
    "description": "Opt-out record",
    "properties": {
      "from": {
        "type": "string",
        "description": "Phone number in [E.164](https://www.itu.int/rec/T-REC-E.164-201011-I) format from which the recipient has opted out",
        "example": "+15551234567"
      },
      "to": {
        "type": "string",
        "description": "Phone number in [E.164](https://www.itu.int/rec/T-REC-E.164-201011-I) format which is opted out",
        "example": "+15551234567"
      },
      "status": {
        "type": "string",
        "description": "Status of a phone number",
        "enum": [
          "OptIn",
          "OptOut"
        ]
      },
      "source": {
        "type": "string",
        "enum": [
          "Recipient",
          "Account",
          "Upstream",
          "Carrier"
        ]
      }
    },
    "name": "OptOutResponse"
  },
  {
    "type": "object",
    "description": "The results of adding opt-outs and opt-ins",
    "properties": {
      "optIns": {
        "description": "Contains successful and failed opt-ins",
        "$ref": "#/components/schemas/OptOutBulkAssignResponseOptIns"
      },
      "optOuts": {
        "description": "Contains successful and failed opt-outs",
        "$ref": "#/components/schemas/OptOutBulkAssignResponseOptOuts"
      }
    },
    "name": "OptOutBulkAssignResponse"
  },
  {
    "type": "object",
    "description": "Consists of `from` field and `optOuts` and `optIns` lists. Both `optOuts` and `optIns` can be empty but not simultaneously - at least one of the lists must be entered.\"",
    "required": [
      "from"
    ],
    "properties": {
      "from": {
        "type": "string",
        "description": "The phone number of a sender which the recipients should be opted out from or opted in to",
        "example": "+15551234455"
      },
      "optOuts": {
        "type": "array",
        "description": "The list of phone numbers to be opted out",
        "items": {
          "type": "string"
        },
        "example": [
          "+15551237755",
          "+15551237756"
        ]
      },
      "optIns": {
        "type": "array",
        "description": "The list of phone numbers to be opted in",
        "items": {
          "type": "string"
        },
        "example": [
          "+15551237799",
          "+15551237798"
        ]
      }
    },
    "name": "OptOutBulkAssignRequest"
  },
  {
    "type": "object",
    "description": "Represents a failure of adding opt-out / opt-in. A pair of a recipient phone number and an error message",
    "properties": {
      "to": {
        "type": "string",
        "description": "A recipient phone number",
        "example": "+15551237756"
      },
      "errorMessage": {
        "type": "string",
        "description": "An error happened on adding opt-out / opt-in",
        "example": "Unexpected issue on creating an opt-out from bulk-assign request"
      }
    },
    "name": "OptOutBulkAssignFailedEntry"
  },
  {
    "required": [
      "from",
      "messages"
    ],
    "type": "object",
    "description": "Batch of A2P SMS messages. This object provides specification to\nsend message(s) to many recipients. It contains top-level attributes, such\nas `text` which apply to all `messages`. In addition to that, it is possible\nto override this attribute for each message. This way a single API call may\nbe used to send individual messages to many recipients.\n",
    "properties": {
      "from": {
        "type": "string",
        "description": "Sender's phone number in [E.164](https://www.itu.int/rec/T-REC-E.164-201011-I) format.",
        "example": "+15551234567"
      },
      "text": {
        "type": "string",
        "description": "Text to send to `messages.to` phone numbers. Can be overridden on a per-message basis",
        "example": "Hello, World!"
      },
      "messages": {
        "type": "array",
        "description": "Individual messages",
        "items": {
          "$ref": "#/components/schemas/MessageCreateRequest"
        }
      }
    },
    "name": "MessageBatchCreateRequest"
  },
  {
    "type": "object",
    "description": "The rejected recipient details",
    "properties": {
      "index": {
        "type": "integer",
        "description": "The index of the messages list in the send batch request where the invalid recipient was found",
        "format": "int64",
        "example": 1
      },
      "to": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "The invalid recipient number as found in the request",
        "example": [
          "29395"
        ]
      },
      "errorCode": {
        "type": "string",
        "description": "The error code",
        "example": "CMN-100"
      },
      "description": {
        "type": "string",
        "description": "The description of the error",
        "example": "The recipient is invalid"
      }
    },
    "name": "RejectedRecipientResponseResource"
  },
  {
    "type": "object",
    "description": "Batch of A2P SMS messages. This object provides a specification\nto send message(s) to many recipients. It contains top-level attributes which apply to all messages. In addition\nto that, it is possible to override this attribute for each message. This\nway a single API call may be used to send individual messages to many recipients\n",
    "properties": {
      "id": {
        "type": "string",
        "description": "Unique identifier of the message batch",
        "readOnly": true,
        "example": "12345"
      },
      "from": {
        "type": "string",
        "description": "Phone number in [E.164](https://www.itu.int/rec/T-REC-E.164-201011-I) format from which the messages are going to be sent",
        "example": "+15551234567"
      },
      "batchSize": {
        "type": "integer",
        "description": "Total number of messages in the accepted batch",
        "format": "int32",
        "example": 5
      },
      "processedCount": {
        "type": "integer",
        "format": "int32",
        "description": "Total number of messages currently processed in the batch",
        "example": 1
      },
      "lastModifiedTime": {
        "type": "string",
        "format": "date-time",
        "description": "The last time the batch was processed.\n"
      },
      "status": {
        "type": "string",
        "description": "Current status of a message batch",
        "example": "Processing",
        "enum": [
          "Processing",
          "Completed"
        ]
      },
      "creationTime": {
        "type": "string",
        "format": "date-time",
        "description": "The time at which the batch was created\n"
      },
      "rejected": {
        "type": "array",
        "description": "The list of rejected/invalid recipients",
        "items": {
          "$ref": "#/components/schemas/RejectedRecipientResponseResource"
        }
      },
      "cost": {
        "type": "number",
        "format": "double",
        "description": "The estimated batch cost for completed batch. Calculated after batch processing is completed.\n",
        "example": 0.007
      }
    },
    "name": "MessageBatchResponse"
  },
  {
    "type": "object",
    "description": "Single individual SMS resource",
    "required": [
      "to"
    ],
    "properties": {
      "to": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "List of phone numbers in [E.164](https://www.itu.int/rec/T-REC-E.164-201011-I)\nformat, recipients of this message. Currently only one number is supported\n",
        "example": [
          "15551234477"
        ]
      },
      "text": {
        "type": "string",
        "description": "Text to send, maximum number of characters is 1000",
        "example": "Hello, World!"
      }
    },
    "name": "MessageCreateRequest"
  },
  {
    "type": "object",
    "description": "The list of batches retrieved for an account and other filter criteria such as fromPhoneNumber, date specified in the request.",
    "properties": {
      "records": {
        "type": "array",
        "description": "An array containing individual batches",
        "items": {
          "$ref": "#/components/schemas/MessageBatchResponse"
        }
      },
      "paging": {
        "$ref": "#/components/schemas/PagingResource"
      }
    },
    "name": "BatchListResponse"
  },
  {
    "type": "object",
    "properties": {
      "affectedItems": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/AddressBookBulkUploadResource"
        }
      },
      "errors": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/ErrorEntity"
        }
      }
    },
    "name": "AddressBookBulkUploadTaskResult"
  },
  {
    "description": "Information on a task for adding multiple contacts to multiple extensions\n",
    "required": [
      "id",
      "uri",
      "creationTime",
      "lastModifiedTime",
      "status"
    ],
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "Internal identifier of a task"
      },
      "uri": {
        "type": "string",
        "format": "uri",
        "description": "Link for the task status retrieval"
      },
      "status": {
        "type": "string",
        "description": "Task status",
        "enum": [
          "Accepted",
          "InProgress",
          "Completed",
          "Failed"
        ]
      },
      "creationTime": {
        "type": "string",
        "format": "date-time",
        "description": "Datetime of a task creation"
      },
      "lastModifiedTime": {
        "type": "string",
        "format": "date-time",
        "description": "Datetime of a task latest update"
      },
      "results": {
        "$ref": "#/components/schemas/AddressBookBulkUploadTaskResult"
      }
    },
    "name": "AddressBookBulkUploadResponse"
  },
  {
    "required": [
      "extensionId",
      "contacts"
    ],
    "type": "object",
    "properties": {
      "extensionId": {
        "type": "string"
      },
      "contacts": {
        "type": "array",
        "minItems": 1,
        "maxItems": 10000,
        "items": {
          "$ref": "#/components/schemas/AddressBookBulkContactResource"
        }
      }
    },
    "name": "AddressBookBulkUploadResource"
  },
  {
    "required": [
      "records"
    ],
    "type": "object",
    "properties": {
      "records": {
        "type": "array",
        "minItems": 1,
        "maxItems": 500,
        "items": {
          "$ref": "#/components/schemas/AddressBookBulkUploadResource"
        }
      }
    },
    "name": "AddressBookBulkUploadRequest"
  },
  {
    "type": "object",
    "properties": {
      "email": {
        "type": "string",
        "format": "email",
        "description": "Email of a contact",
        "example": "charlie.williams@example.com"
      },
      "notes": {
        "type": "string",
        "description": "Notes for a contact",
        "example": "#1 Customer"
      },
      "company": {
        "type": "string",
        "description": "Company name of a contact",
        "example": "Example, Inc."
      },
      "firstName": {
        "type": "string",
        "description": "First name of a contact",
        "example": "Charlie"
      },
      "lastName": {
        "type": "string",
        "description": "Last name of a contact",
        "example": "Williams"
      },
      "jobTitle": {
        "type": "string",
        "description": "Job title of a contact",
        "example": "CEO"
      },
      "birthday": {
        "type": "string",
        "description": "Date of birth of a contact",
        "format": "date-time"
      },
      "webPage": {
        "type": "string",
        "description": "Link to a contact home page",
        "example": "http://www.example.com"
      },
      "middleName": {
        "type": "string",
        "description": "Middle name of a contact",
        "example": "J"
      },
      "nickName": {
        "type": "string",
        "description": "Nick name of a contact",
        "example": "The Boss"
      },
      "email2": {
        "type": "string",
        "format": "email",
        "description": "Second email of a contact",
        "example": "charlie-example@gmail.com"
      },
      "email3": {
        "type": "string",
        "format": "email",
        "description": "Third email of the contact",
        "example": "theboss-example@hotmail.com"
      },
      "homePhone": {
        "type": "string",
        "description": "Home phone number of a contact in e.164 (with \"+\") format",
        "example": "+15551234567"
      },
      "homePhone2": {
        "type": "string",
        "description": "Second home phone number of a contact in e.164 (with \"+\") format",
        "example": "+15551234567"
      },
      "businessPhone": {
        "type": "string",
        "description": "Business phone of a contact in e.164 (with \"+\") format",
        "example": "+15551234567"
      },
      "businessPhone2": {
        "type": "string",
        "description": "Second business phone of a contact in e.164 (with \"+\") format",
        "example": "+15551234567"
      },
      "mobilePhone": {
        "type": "string",
        "description": "Mobile phone of the contact in e.164 (with \"+\") format",
        "example": "+15551234567"
      },
      "businessFax": {
        "type": "string",
        "description": "Business fax number of a contact in e.164 (with \"+\") format",
        "example": "+15551234567"
      },
      "companyPhone": {
        "type": "string",
        "description": "Company number of a contact in e.164 (with \"+\") format",
        "example": "+15551234567"
      },
      "assistantPhone": {
        "type": "string",
        "description": "Phone number of a contact assistant in e.164 (with \"+\") format",
        "example": "+15551234567"
      },
      "carPhone": {
        "type": "string",
        "description": "Car phone number of a contact in e.164 (with \"+\") format",
        "example": "+15551234567"
      },
      "otherPhone": {
        "type": "string",
        "description": "Other phone number of a contact in e.164 (with \"+\") format",
        "example": "+15551234567"
      },
      "otherFax": {
        "type": "string",
        "description": "Other fax number of a contact in e.164 (with \"+\") format",
        "example": "+15551234567"
      },
      "callbackPhone": {
        "type": "string",
        "description": "Callback phone number of a contact in e.164 (with \"+\") format",
        "example": "+15551234567"
      },
      "businessAddress": {
        "$ref": "#/components/schemas/AddressBookBulkContactAddressInfo"
      },
      "homeAddress": {
        "$ref": "#/components/schemas/AddressBookBulkContactAddressInfo"
      },
      "otherAddress": {
        "$ref": "#/components/schemas/AddressBookBulkContactAddressInfo"
      }
    },
    "name": "AddressBookBulkContactResource"
  },
  {
    "type": "object",
    "properties": {
      "country": {
        "type": "string",
        "description": "Country name of the extension user company. Not returned for Address\nBook\n"
      },
      "state": {
        "type": "string",
        "description": "State/province name of the extension user company"
      },
      "city": {
        "type": "string",
        "description": "City name of the extension user company"
      },
      "street": {
        "type": "string",
        "description": "Street address of the extension user company"
      },
      "zip": {
        "type": "string",
        "description": "Zip code of the extension user company"
      }
    },
    "name": "AddressBookBulkContactAddressInfo"
  },
  {
    "type": "object",
    "properties": {
      "uri": {
        "type": "string",
        "format": "uri",
        "description": "Internal identifier of a prompt"
      },
      "id": {
        "type": "string",
        "description": "Link to a prompt metadata"
      },
      "contentType": {
        "type": "string",
        "description": "Type of a prompt media content"
      },
      "contentUri": {
        "type": "string",
        "format": "uri",
        "description": "Link to a prompt media content"
      },
      "filename": {
        "type": "string",
        "description": "Name of a prompt"
      }
    },
    "name": "PromptInfo"
  },
  {
    "type": "object",
    "properties": {
      "uri": {
        "type": "string",
        "format": "uri",
        "description": "Link to prompts library resource"
      },
      "records": {
        "type": "array",
        "description": "List of Prompts",
        "items": {
          "$ref": "#/components/schemas/PromptInfo"
        }
      },
      "navigation": {
        "$ref": "#/components/schemas/PageNavigationModel"
      },
      "paging": {
        "$ref": "#/components/schemas/EnumeratedPagingModel"
      }
    },
    "name": "IvrPrompts"
  },
  {
    "type": "object",
    "properties": {
      "filename": {
        "type": "string",
        "description": "Name of a file to be uploaded as a prompt"
      }
    },
    "name": "UpdateIVRPromptRequest"
  },
  {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "Internal identifier of an emergency response location\n"
      },
      "address": {
        "$ref": "#/components/schemas/EmergencyLocationAddressInfo"
      },
      "name": {
        "type": "string",
        "description": "Emergency response location name"
      },
      "site": {
        "$ref": "#/components/schemas/ShortSiteInfo"
      },
      "addressStatus": {
        "type": "string",
        "description": "Emergency address status",
        "enum": [
          "Valid",
          "Invalid"
        ]
      },
      "usageStatus": {
        "type": "string",
        "description": "Status of an emergency response location usage.",
        "enum": [
          "Active",
          "Inactive"
        ]
      },
      "visibility": {
        "type": "string",
        "description": "Visibility of an emergency response location. If `Private`\nis set, then a location is visible only for restricted number of users,\nspecified in `owners` array\n",
        "default": "Public",
        "enum": [
          "Public"
        ]
      }
    },
    "name": "EmergencyLocationInfoRequest"
  },
  {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "Internal identifier of an emergency response location\n"
      },
      "address": {
        "$ref": "#/components/schemas/EmergencyLocationAddressInfo"
      },
      "name": {
        "type": "string",
        "description": "Emergency response location name"
      },
      "site": {
        "$ref": "#/components/schemas/ShortSiteInfo"
      },
      "addressStatus": {
        "type": "string",
        "description": "Emergency address status",
        "enum": [
          "Valid",
          "Invalid",
          "Provisioning"
        ]
      },
      "usageStatus": {
        "type": "string",
        "description": "Status of emergency response location usage.",
        "enum": [
          "Active",
          "Inactive"
        ]
      },
      "syncStatus": {
        "type": "string",
        "description": "Resulting status of emergency address synchronization. Returned\nif `syncEmergencyAddress` parameter is set to 'True'\n",
        "enum": [
          "Verified",
          "Updated",
          "Deleted",
          "ActivationProcess",
          "NotRequired",
          "Unsupported",
          "Failed"
        ]
      },
      "addressType": {
        "type": "string",
        "enum": [
          "LocationWithElins",
          "LocationWithEndpoint"
        ]
      },
      "visibility": {
        "type": "string",
        "description": "Visibility of an emergency response location. If `Private`\nis set, then location is visible only for the restricted number of users,\nspecified in `owners` array\n",
        "default": "Public",
        "enum": [
          "Private",
          "Public"
        ]
      },
      "owners": {
        "type": "array",
        "description": "List of private location owners",
        "items": {
          "$ref": "#/components/schemas/LocationOwnerInfo"
        }
      }
    },
    "description": "Company emergency response location details",
    "name": "EmergencyLocationResource"
  },
  {
    "required": [
      "page",
      "totalPages",
      "perPage",
      "totalElements",
      "pageStart",
      "pageEnd"
    ],
    "type": "object",
    "properties": {
      "page": {
        "type": "integer",
        "format": "int32"
      },
      "totalPages": {
        "type": "integer",
        "format": "int32"
      },
      "perPage": {
        "type": "integer",
        "format": "int32"
      },
      "totalElements": {
        "type": "integer",
        "format": "int32"
      },
      "pageStart": {
        "type": "integer",
        "format": "int32"
      },
      "pageEnd": {
        "type": "integer",
        "format": "int32"
      }
    },
    "name": "EmergencyLocationsPaging"
  },
  {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "Internal identifier of a user - private location owner\n"
      }
    },
    "name": "LocationOwnerInfo"
  },
  {
    "type": "object",
    "properties": {
      "records": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/EmergencyLocationResource"
        }
      },
      "paging": {
        "$ref": "#/components/schemas/EmergencyLocationsPaging"
      }
    },
    "name": "EmergencyLocationsResource"
  },
  {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "Internal identifier of a site extension"
      },
      "name": {
        "type": "string",
        "description": "Extension user first name"
      }
    },
    "name": "ShortSiteInfo"
  },
  {
    "type": "object",
    "properties": {
      "country": {
        "type": "string",
        "description": "Country name"
      },
      "countryId": {
        "type": "string",
        "description": "Internal identifier of a country"
      },
      "countryIsoCode": {
        "type": "string",
        "description": "ISO code of a country"
      },
      "countryName": {
        "type": "string",
        "description": "Full name of a country"
      },
      "state": {
        "type": "string",
        "description": "State/Province name. Mandatory for the USA, the UK and Canada\n"
      },
      "stateId": {
        "type": "string",
        "description": "Internal identifier of a state"
      },
      "stateIsoCode": {
        "type": "string",
        "description": "ISO code of a state"
      },
      "stateName": {
        "type": "string",
        "description": "Full name of a state"
      },
      "city": {
        "type": "string",
        "description": "City name"
      },
      "street": {
        "type": "string",
        "description": "First line address"
      },
      "street2": {
        "type": "string",
        "description": "Second line address (apartment, suite, unit, building, floor,\netc.)\n"
      },
      "zip": {
        "type": "string",
        "description": "Postal (Zip) code"
      },
      "customerName": {
        "type": "string",
        "description": "Customer name"
      }
    },
    "name": "EmergencyLocationAddressInfo"
  },
  {
    "type": "object",
    "properties": {
      "id": {
        "type": "string"
      },
      "name": {
        "type": "string"
      },
      "deletion": {
        "type": "string",
        "description": "Identifies the possibility and status of emergency location\ndeletion\n",
        "enum": [
          "Failed",
          "Completed",
          "Forbidden",
          "Restricted",
          "Allowed"
        ]
      },
      "errors": {
        "$ref": "#/components/schemas/LocationDeletionErrorInfo"
      }
    },
    "name": "LocationDeletionInfo"
  },
  {
    "type": "object",
    "properties": {
      "deletion": {
        "type": "string",
        "enum": [
          "Forbidden",
          "Restricted",
          "Allowed"
        ]
      },
      "reassignment": {
        "type": "string",
        "enum": [
          "Forbidden",
          "Allowed"
        ]
      },
      "emergencyLocations": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/LocationDeletionInfo"
        }
      }
    },
    "name": "GetLocationDeletionMultiResponse"
  },
  {
    "type": "object",
    "properties": {
      "errorCode": {
        "type": "string",
        "description": "Error code"
      },
      "message": {
        "type": "string",
        "description": "Error message"
      },
      "additionalInfo": {
        "type": "string",
        "description": "Additional attribute for this error, for example `parameterName`"
      }
    },
    "name": "LocationDeletionErrorInfo"
  },
  {
    "type": "object",
    "properties": {
      "uri": {
        "type": "string",
        "format": "uri",
        "description": "Link to a call queue"
      },
      "id": {
        "type": "string",
        "description": "Internal identifier of a call queue"
      },
      "extensionNumber": {
        "type": "string",
        "description": "Extension number of a call queue"
      },
      "name": {
        "type": "string",
        "description": "Name of a call queue"
      }
    },
    "name": "CallQueueInfo"
  },
  {
    "required": [
      "navigation",
      "paging",
      "records",
      "uri"
    ],
    "type": "object",
    "properties": {
      "uri": {
        "type": "string",
        "format": "uri",
        "description": "Link to a call queues resource"
      },
      "records": {
        "type": "array",
        "description": "List of call queues",
        "items": {
          "$ref": "#/components/schemas/CallQueueInfo"
        }
      },
      "navigation": {
        "$ref": "#/components/schemas/ProvisioningNavigationInfo"
      },
      "paging": {
        "$ref": "#/components/schemas/ProvisioningPagingInfo"
      }
    },
    "name": "CallQueues"
  },
  {
    "type": "object",
    "properties": {
      "slaGoal": {
        "type": "integer",
        "format": "int32",
        "description": "Target percentage of calls that must be answered by agents\nwithin the service level time threshold\n"
      },
      "slaThresholdSeconds": {
        "type": "integer",
        "format": "int32",
        "description": "The period of time in seconds that is considered to be an acceptable\nservice level\n"
      },
      "includeAbandonedCalls": {
        "type": "boolean",
        "description": "Includes abandoned calls (when callers hang up prior to being\nserved by an agent) into service-level calculation\n"
      },
      "abandonedThresholdSeconds": {
        "type": "integer",
        "format": "int32",
        "description": "Abandoned calls that are shorter than the defined period of\ntime in seconds will not be included into the calculation of Service Level\n"
      }
    },
    "description": "Call queue service level settings",
    "name": "CallQueueServiceLevelSettings"
  },
  {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "Internal identifier of a call queue"
      },
      "name": {
        "type": "string",
        "description": "Call queue name"
      },
      "extensionNumber": {
        "type": "string",
        "description": "Call queue extension number"
      },
      "status": {
        "type": "string",
        "description": "Call queue status",
        "enum": [
          "Enabled",
          "Disabled",
          "NotActivated"
        ]
      },
      "serviceLevelSettings": {
        "$ref": "#/components/schemas/CallQueueServiceLevelSettings"
      },
      "editableMemberStatus": {
        "type": "boolean",
        "description": "Allows members to change their queue status"
      }
    },
    "name": "CallQueueDetails"
  },
  {
    "type": "object",
    "properties": {
      "serviceLevelSettings": {
        "$ref": "#/components/schemas/CallQueueServiceLevelSettings"
      },
      "editableMemberStatus": {
        "type": "boolean",
        "description": "Allows members to change their queue status\n"
      }
    },
    "name": "CallQueueUpdateDetails"
  },
  {
    "type": "object",
    "properties": {
      "uuid": {
        "type": "string",
        "description": "Universally unique identifier of a notification"
      },
      "event": {
        "type": "string",
        "description": "Event filter name"
      },
      "timestamp": {
        "type": "string",
        "format": "date-time",
        "description": "Timestamp when this notification was sent in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format including timezone, for example *2016-03-10T18:07:52.534Z*"
      },
      "subscriptionId": {
        "type": "string",
        "description": "Internal identifier of a subscription"
      },
      "body": {
        "$ref": "#/components/schemas/CallQueuePresenceEventBody"
      }
    },
    "name": "CallQueuePresenceEvent"
  },
  {
    "type": "object",
    "description": "Site extension information",
    "properties": {
      "id": {
        "type": "string",
        "description": "Site extension identifier"
      },
      "name": {
        "type": "string",
        "description": "Site extension name"
      }
    },
    "name": "SiteResource"
  },
  {
    "type": "object",
    "description": "Notification payload body",
    "properties": {
      "extensionId": {
        "type": "string",
        "description": "Agent extension ID"
      },
      "callQueueId": {
        "type": "string",
        "description": "Call queue extension ID"
      },
      "acceptCalls": {
        "type": "boolean",
        "description": "Call queue agent availability for calls of this queue"
      }
    },
    "name": "CallQueuePresenceEventBody"
  },
  {
    "type": "object",
    "properties": {
      "member": {
        "$ref": "#/components/schemas/CallQueueMemberId"
      },
      "acceptCurrentQueueCalls": {
        "type": "boolean",
        "description": "Call queue member availability for calls of this queue"
      }
    },
    "name": "CallQueueUpdateMemberPresence"
  },
  {
    "type": "object",
    "description": "Call queue member information",
    "properties": {
      "id": {
        "type": "string",
        "description": "Internal identifier of an extension"
      },
      "name": {
        "type": "string",
        "description": "Extension full name"
      },
      "extensionNumber": {
        "type": "string",
        "description": "Extension number"
      },
      "site": {
        "$ref": "#/components/schemas/SiteResource"
      }
    },
    "name": "CallQueueMember"
  },
  {
    "type": "object",
    "description": "Call queue member information",
    "properties": {
      "id": {
        "type": "string",
        "description": "Internal identifier of an extension - queue member"
      }
    },
    "name": "CallQueueMemberId"
  },
  {
    "type": "object",
    "properties": {
      "records": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/CallQueueMemberPresence"
        }
      }
    },
    "name": "CallQueuePresence"
  },
  {
    "type": "object",
    "properties": {
      "member": {
        "$ref": "#/components/schemas/CallQueueMember"
      },
      "acceptQueueCalls": {
        "type": "boolean",
        "description": "Private member telephony availability status applied to calls of all queues"
      },
      "acceptCurrentQueueCalls": {
        "type": "boolean",
        "description": "Call queue member availability in this particular queue"
      }
    },
    "name": "CallQueueMemberPresence"
  },
  {
    "type": "object",
    "properties": {
      "records": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/CallQueueUpdateMemberPresence"
        }
      }
    },
    "name": "CallQueueUpdatePresence"
  },
  {
    "type": "object",
    "properties": {
      "addedExtensionIds": {
        "type": "array",
        "items": {
          "type": "string"
        }
      },
      "removedExtensionIds": {
        "type": "array",
        "items": {
          "type": "string"
        }
      }
    },
    "name": "CallQueueBulkAssignResource"
  },
  {
    "type": "object",
    "properties": {
      "uri": {
        "type": "string",
        "format": "uri",
        "description": "Link to a call queue member"
      },
      "id": {
        "type": "integer",
        "format": "int64",
        "description": "Internal identifier of a call queue member"
      },
      "extensionNumber": {
        "type": "string",
        "description": "Extension number of a call queue member"
      }
    },
    "name": "CallQueueMemberInfo"
  },
  {
    "required": [
      "navigation",
      "paging",
      "records",
      "uri"
    ],
    "type": "object",
    "properties": {
      "uri": {
        "type": "string",
        "format": "uri",
        "description": "Link to a call queue members resource"
      },
      "records": {
        "type": "array",
        "description": "List of call queue members",
        "items": {
          "$ref": "#/components/schemas/CallQueueMemberInfo"
        }
      },
      "navigation": {
        "$ref": "#/components/schemas/ProvisioningNavigationInfo"
      },
      "paging": {
        "$ref": "#/components/schemas/ProvisioningPagingInfo"
      }
    },
    "name": "CallQueueMembers"
  },
  {
    "type": "object",
    "properties": {
      "startHostVideo": {
        "type": "boolean"
      },
      "startParticipantVideo": {
        "type": "boolean"
      },
      "audioOptions": {
        "type": "boolean"
      },
      "allowJoinBeforeHost": {
        "type": "boolean"
      },
      "requirePasswordForSchedulingNewMeetings": {
        "type": "boolean"
      },
      "requirePasswordForInstantMeetings": {
        "type": "boolean"
      },
      "requirePasswordForPmiMeetings": {
        "type": "boolean"
      },
      "enforceLogin": {
        "type": "boolean"
      }
    },
    "name": "ScheduleMeetingResponse"
  },
  {
    "type": "object",
    "properties": {
      "localRecording": {
        "type": "boolean"
      },
      "cloudRecording": {
        "type": "boolean"
      },
      "autoRecording": {
        "type": "boolean"
      },
      "cloudRecordingDownload": {
        "type": "boolean"
      },
      "hostDeleteCloudRecording": {
        "type": "boolean"
      },
      "accountUserAccessRecording": {
        "type": "boolean"
      },
      "autoDeleteCmr": {
        "type": "boolean"
      }
    },
    "name": "AccountLockSettingRecordResponse"
  },
  {
    "type": "object",
    "properties": {
      "scheduleMeeting": {
        "$ref": "#/components/schemas/ScheduleMeetingResponse"
      },
      "recording": {
        "$ref": "#/components/schemas/AccountLockSettingRecordResponse"
      }
    },
    "name": "AccountLockedSettingResponse"
  },
  {
    "type": "object",
    "properties": {
      "startUri": {
        "type": "string",
        "format": "uri"
      },
      "joinUri": {
        "type": "string",
        "format": "uri"
      }
    },
    "description": "Meeting links",
    "name": "MeetingLinks"
  },
  {
    "type": "object",
    "properties": {
      "uri": {
        "type": "string",
        "format": "uri"
      },
      "id": {
        "type": "string"
      },
      "name": {
        "type": "string"
      },
      "description": {
        "type": "string"
      }
    },
    "name": "MeetingsTimezoneResource"
  },
  {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "Identifier of a meeting occurrence"
      },
      "startTime": {
        "type": "string",
        "format": "date-time",
        "description": "Starting time of a meeting occurrence"
      },
      "durationInMinutes": {
        "type": "integer",
        "format": "int64",
        "description": "Duration of a meeting occurrence"
      },
      "status": {
        "type": "string",
        "description": "Status of a meeting occurrence"
      }
    },
    "name": "MeetingOccurrenceInfo"
  },
  {
    "type": "object",
    "properties": {
      "frequency": {
        "type": "string",
        "description": "Recurrence time frame",
        "enum": [
          "Daily",
          "Weekly",
          "Monthly"
        ]
      },
      "interval": {
        "type": "integer",
        "format": "int32",
        "description": "Recurrence interval. The supported ranges are: 1-90 for `Daily`; 1-12 for `Weekly`; 1-3 for `Monthly`"
      },
      "weeklyByDays": {
        "type": "array",
        "items": {
          "type": "string",
          "description": "This field is used only if you're scheduling a recurring meeting of type `3` to state a specific day in a week when the monthly meeting should recur; it works together with `MonthlyByWeek` field. The values are: 1 - Sunday; 2 - Monday; 3 - Tuesday; 4 - Wednesday; 5 - Thursday; 6 - Friday; 7- Saturday",
          "enum": [
            "Sunday",
            "Monday",
            "Tuesday",
            "Wednesday",
            "Thursday",
            "Friday",
            "Saturday"
          ]
        }
      },
      "monthlyByDay": {
        "type": "integer",
        "format": "int32",
        "description": "The supported range is 1-31"
      },
      "monthlyByWeek": {
        "type": "string",
        "description": "Supported together with `weeklyByDay`",
        "enum": [
          "Last",
          "First",
          "Second",
          "Third",
          "Fourth"
        ]
      },
      "monthlyByWeekDay": {
        "type": "string",
        "description": "This field is used only if you're scheduling a recurring meeting of type `3` to state a specific day in a week when the monthly meeting should recur; it works together with `MonthlyByWeek` field. The values are: 1 - Sunday; 2 - Monday; 3 - Tuesday; 4 - Wednesday; 5 - Thursday; 6 - Friday; 7- Saturday",
        "enum": [
          "Sunday",
          "Monday",
          "Tuesday",
          "Wednesday",
          "Thursday",
          "Friday",
          "Saturday"
        ]
      },
      "count": {
        "type": "integer",
        "format": "int32",
        "description": "Number of meeting occurrences"
      },
      "until": {
        "type": "string",
        "description": "Meeting expiration date-time"
      }
    },
    "name": "RecurrenceInfo"
  },
  {
    "type": "object",
    "properties": {
      "uri": {
        "type": "string",
        "format": "uri",
        "description": "Link to the meeting host resource"
      },
      "id": {
        "type": "string",
        "description": "Internal identifier of an extension which is assigned to be a meeting host. The default value is currently logged-in extension identifier"
      }
    },
    "description": "Meeting host information",
    "name": "HostInfoRequest"
  },
  {
    "type": "object",
    "properties": {
      "startTime": {
        "type": "string",
        "format": "date-time"
      },
      "durationInMinutes": {
        "type": "integer",
        "format": "int32"
      },
      "timeZone": {
        "$ref": "#/components/schemas/MeetingsTimezoneResource"
      }
    },
    "description": "Timing of a meeting",
    "name": "MeetingScheduleResource"
  },
  {
    "type": "object",
    "properties": {
      "uri": {
        "type": "string",
        "description": "Link to a meeting resource",
        "format": "uri"
      },
      "uuid": {
        "type": "string",
        "description": "Universally unique identifier of a meeting\""
      },
      "id": {
        "type": "string",
        "description": "Internal identifier of a meeting"
      },
      "topic": {
        "type": "string",
        "description": "Custom topic of a meeting"
      },
      "meetingType": {
        "type": "string",
        "enum": [
          "Instant",
          "Scheduled",
          "ScheduledRecurring",
          "Recurring"
        ]
      },
      "password": {
        "type": "string",
        "description": "Meeting password"
      },
      "h323Password": {
        "type": "string"
      },
      "status": {
        "type": "string",
        "description": "Status of a meeting"
      },
      "links": {
        "$ref": "#/components/schemas/MeetingLinks"
      },
      "schedule": {
        "$ref": "#/components/schemas/MeetingScheduleResource"
      },
      "host": {
        "$ref": "#/components/schemas/HostInfoRequest"
      },
      "allowJoinBeforeHost": {
        "type": "boolean",
        "description": "If true, then participants can join the meeting before host arrives",
        "default": false
      },
      "startHostVideo": {
        "type": "boolean",
        "description": "Starting meetings with host video on/off (true/false)",
        "default": false
      },
      "startParticipantsVideo": {
        "type": "boolean",
        "description": "Starting meetings with participant video on/off (true/false)",
        "default": false
      },
      "audioOptions": {
        "type": "array",
        "items": {
          "type": "string",
          "enum": [
            "Phone",
            "ComputerAudio"
          ]
        }
      },
      "recurrence": {
        "$ref": "#/components/schemas/RecurrenceInfo"
      },
      "autoRecordType": {
        "type": "string",
        "description": "Automatic record type",
        "default": "none",
        "enum": [
          "local",
          "cloud",
          "none"
        ]
      },
      "enforceLogin": {
        "type": "boolean",
        "description": "If true, then only signed-in users can join this meeting"
      },
      "muteParticipantsOnEntry": {
        "type": "boolean",
        "description": "If true, then participants are muted on entry"
      },
      "occurrences": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/MeetingOccurrenceInfo"
        }
      },
      "enableWaitingRoom": {
        "type": "boolean",
        "description": "If true, then the waiting room for participants is enabled"
      },
      "globalDialInCountries": {
        "type": "array",
        "description": "List of global dial-in countries (eg. US, UK, AU, etc.)",
        "items": {
          "type": "string"
        }
      },
      "alternativeHosts": {
        "type": "string"
      }
    },
    "name": "MeetingResponseResource"
  },
  {
    "type": "object",
    "description": "Canonical URI for the corresponding page of the list",
    "properties": {
      "uri": {
        "type": "string",
        "format": "uri"
      }
    },
    "name": "PresenceNavigationInfoURI"
  },
  {
    "type": "object",
    "properties": {
      "id": {
        "type": "string"
      },
      "direction": {
        "type": "string",
        "enum": [
          "Inbound",
          "Outbound"
        ]
      },
      "queueCall": {
        "type": "boolean",
        "description": "Identifies if a call belongs to the call queue"
      },
      "from": {
        "type": "string",
        "description": "Phone number or extension number of a caller. For GCM transport type '_from' property should be used"
      },
      "fromName": {
        "type": "string",
        "description": "Name of a caller"
      },
      "to": {
        "type": "string",
        "description": "Phone number or extension number of a callee"
      },
      "toName": {
        "type": "string",
        "description": "Name of a callee"
      },
      "startTime": {
        "type": "string",
        "format": "date-time",
        "description": "Time when the call is actually started"
      },
      "telephonyStatus": {
        "type": "string",
        "description": "Telephony presence status",
        "enum": [
          "NoCall",
          "CallConnected",
          "Ringing",
          "OnHold",
          "ParkedCall"
        ]
      },
      "sipData": {
        "$ref": "#/components/schemas/DetailedCallInfo"
      },
      "sessionId": {
        "type": "string"
      },
      "telephonySessionId": {
        "type": "string",
        "description": "Telephony identifier of a call session"
      },
      "onBehalfOf": {
        "type": "string",
        "description": "Extension ID of the call owner on whose behalf a call is performed"
      },
      "partyId": {
        "type": "string",
        "description": "Internal identifier of a call party"
      },
      "terminationType": {
        "type": "string"
      },
      "callInfo": {
        "$ref": "#/components/schemas/CallInfoCQ"
      }
    },
    "name": "ActiveCallInfo"
  },
  {
    "type": "object",
    "properties": {
      "type": {
        "type": "string",
        "description": "Call information to be displayed as 'Line 1' for a call queue call session",
        "enum": [
          "PhoneNumberLabel",
          "PhoneNumber",
          "QueueExtension",
          "QueueName",
          "CallerIdName",
          "CallerIdNumber",
          "None"
        ]
      },
      "value": {
        "type": "string",
        "description": "Call information value"
      }
    },
    "description": "Primary call session information. Supported for Call Queues only",
    "name": "PrimaryCQInfo"
  },
  {
    "type": "object",
    "properties": {
      "type": {
        "type": "string",
        "description": "Call information to be displayed as 'Line 2' for a call queue call session",
        "enum": [
          "PhoneNumberLabel",
          "PhoneNumber",
          "QueueExtension",
          "QueueName",
          "CallerIdName",
          "CallerIdNumber",
          "None"
        ]
      },
      "value": {
        "type": "string",
        "description": "Call information value"
      }
    },
    "description": "Additional call session information. Supported for Call Queues only",
    "name": "AdditionalCQInfo"
  },
  {
    "type": "object",
    "properties": {
      "uri": {
        "type": "string",
        "format": "uri",
        "description": "Canonical URI of account presence resource"
      },
      "records": {
        "type": "array",
        "description": "List of Prompts",
        "items": {
          "$ref": "#/components/schemas/GetPresenceInfo"
        }
      },
      "navigation": {
        "$ref": "#/components/schemas/PresenceNavigationInfo"
      },
      "paging": {
        "$ref": "#/components/schemas/PresencePagingInfo"
      }
    },
    "name": "AccountPresenceInfo"
  },
  {
    "type": "object",
    "properties": {
      "uuid": {
        "type": "string",
        "description": "Universally unique identifier of a notification"
      },
      "event": {
        "type": "string",
        "description": "Event filter name"
      },
      "timestamp": {
        "type": "string",
        "format": "date-time",
        "description": "Timestamp when this notification was sent in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format including timezone, for example *2016-03-10T18:07:52.534Z*"
      },
      "subscriptionId": {
        "type": "string",
        "description": "Internal identifier of a subscription"
      },
      "body": {
        "$ref": "#/components/schemas/AccountPresenceEventBody"
      }
    },
    "name": "AccountPresenceEvent"
  },
  {
    "type": "object",
    "description": "Information on paging",
    "properties": {
      "page": {
        "type": "integer",
        "format": "int32",
        "description": "The current page number. 1-indexed, so the first page is 1 by default. May be omitted if result is empty (because non-existent page was specified or perPage=0 was requested)"
      },
      "perPage": {
        "type": "integer",
        "format": "int32",
        "description": "Current page size, describes how many items are in each page. Default value is 100. Maximum value is 1000. If perPage value in the request is greater than 1000, the maximum value (1000) is applied"
      },
      "pageStart": {
        "type": "integer",
        "format": "int32",
        "description": "The zero-based number of the first element on the current page. Omitted if the page is omitted or result is empty"
      },
      "pageEnd": {
        "type": "integer",
        "format": "int32",
        "description": "The zero-based index of the last element on the current page. Omitted if the page is omitted or result is empty"
      },
      "totalPages": {
        "type": "integer",
        "format": "int32",
        "description": "The total number of pages in a dataset. May be omitted for some resources due to performance reasons"
      },
      "totalElements": {
        "type": "integer",
        "format": "int32",
        "description": "The total number of elements in a dataset. May be omitted for some resource due to performance reasons"
      }
    },
    "name": "PresencePagingInfo"
  },
  {
    "type": "object",
    "properties": {
      "callId": {
        "type": "string"
      },
      "toTag": {
        "type": "string"
      },
      "fromTag": {
        "type": "string"
      },
      "remoteUri": {
        "format": "uri",
        "type": "string"
      },
      "localUri": {
        "format": "uri",
        "type": "string"
      },
      "rcSessionId": {
        "type": "string"
      }
    },
    "name": "DetailedCallInfo"
  },
  {
    "type": "object",
    "properties": {
      "uri": {
        "type": "string",
        "format": "uri",
        "description": "Canonical URI of a presence info resource"
      },
      "allowSeeMyPresence": {
        "type": "boolean",
        "description": "If 'True' enables other extensions to see the extension presence status"
      },
      "dndStatus": {
        "type": "string",
        "description": "Extended DnD (Do not Disturb) status. Cannot be set for Department/Announcement/Voicemail (Take Messages Only)/Fax User/Shared Lines Group/Paging Only Group/IVR Menu/Application Extension/Park Location extensions. The 'DoNotAcceptDepartmentCalls' and 'TakeDepartmentCallsOnly' values are applicable only for extensions - members of a Department; if these values are set for department outsiders, the 400 Bad Request error code is returned. The 'TakeDepartmentCallsOnly' status can be set through the old RingCentral user interface and is available for some migrated accounts only.",
        "enum": [
          "TakeAllCalls",
          "DoNotAcceptAnyCalls",
          "DoNotAcceptDepartmentCalls",
          "TakeDepartmentCallsOnly"
        ]
      },
      "extension": {
        "$ref": "#/components/schemas/GetPresenceExtensionInfo"
      },
      "message": {
        "type": "string",
        "description": "Custom status message (as previously published by user)"
      },
      "pickUpCallsOnHold": {
        "type": "boolean",
        "description": "If 'True' enables the extension user to pick up a monitored line on hold"
      },
      "presenceStatus": {
        "type": "string",
        "description": "Aggregated presence status, calculated from a number of sources",
        "enum": [
          "Offline",
          "Busy",
          "Available"
        ]
      },
      "ringOnMonitoredCall": {
        "type": "boolean",
        "description": "If 'True' enables to ring extension phone, if any user monitored by this extension is ringing"
      },
      "telephonyStatus": {
        "type": "string",
        "description": "Telephony presence status",
        "enum": [
          "NoCall",
          "CallConnected",
          "Ringing",
          "OnHold",
          "ParkedCall"
        ]
      },
      "userStatus": {
        "type": "string",
        "description": "User-defined presence status (as previously published by the user)",
        "enum": [
          "Offline",
          "Busy",
          "Available"
        ]
      },
      "meetingStatus": {
        "type": "string",
        "description": "RingCentral Meetings presence",
        "enum": [
          "Connected",
          "Disconnected"
        ]
      },
      "activeCalls": {
        "type": "array",
        "description": "Information on active calls",
        "items": {
          "$ref": "#/components/schemas/ActiveCallInfo"
        }
      }
    },
    "name": "GetPresenceInfo"
  },
  {
    "type": "object",
    "description": "Primary/additional CQ information",
    "properties": {
      "primary": {
        "$ref": "#/components/schemas/PrimaryCQInfo"
      },
      "additional": {
        "$ref": "#/components/schemas/AdditionalCQInfo"
      }
    },
    "name": "CallInfoCQ"
  },
  {
    "type": "object",
    "description": "Information on extension, for which this presence data is returned",
    "properties": {
      "id": {
        "type": "integer",
        "format": "int64",
        "description": "Internal identifier of an extension"
      },
      "uri": {
        "type": "string",
        "format": "uri",
        "description": "Canonical URI of an extension"
      },
      "extensionNumber": {
        "type": "string",
        "description": "Extension number (usually 3 or 4 digits)"
      }
    },
    "name": "GetPresenceExtensionInfo"
  },
  {
    "type": "object",
    "description": "Notification payload body",
    "properties": {
      "extensionId": {
        "type": "string",
        "description": "Internal identifier of an extension. Optional parameter",
        "default": "~"
      },
      "telephonyStatus": {
        "type": "string",
        "description": "Telephony presence status. Returned if telephony status is changed.",
        "enum": [
          "NoCall",
          "CallConnected",
          "Ringing",
          "OnHold",
          "ParkedCall"
        ]
      },
      "sequence": {
        "type": "integer",
        "format": "int32",
        "description": "Order number of a notification to state the chronology"
      },
      "presenceStatus": {
        "type": "string",
        "description": "Aggregated presence status, calculated from a number of sources",
        "enum": [
          "Offline",
          "Busy",
          "Available"
        ]
      },
      "userStatus": {
        "type": "string",
        "description": "User-defined presence status (as previously published by the user)",
        "enum": [
          "Offline",
          "Busy",
          "Available"
        ]
      },
      "dndStatus": {
        "type": "string",
        "description": "Extended DnD (Do not Disturb) status",
        "enum": [
          "TakeAllCalls",
          "DoNotAcceptAnyCalls",
          "DoNotAcceptDepartmentCalls",
          "TakeDepartmentCallsOnly"
        ]
      },
      "allowSeeMyPresence": {
        "type": "boolean",
        "description": "If 'True' enables other extensions to see the extension presence status"
      },
      "ringOnMonitoredCall": {
        "type": "boolean",
        "description": "If 'True' enables to ring extension phone, if any user monitored by this extension is ringing"
      },
      "pickUpCallsOnHold": {
        "type": "boolean",
        "description": "If 'True' enables the extension user to pick up a monitored line on hold"
      },
      "ownerId": {
        "type": "string",
        "description": "Internal identifier of a subscription owner extension"
      }
    },
    "name": "AccountPresenceEventBody"
  },
  {
    "type": "object",
    "description": "Information on navigation",
    "properties": {
      "firstPage": {
        "$ref": "#/components/schemas/PresenceNavigationInfoURI"
      },
      "nextPage": {
        "$ref": "#/components/schemas/PresenceNavigationInfoURI"
      },
      "previousPage": {
        "$ref": "#/components/schemas/PresenceNavigationInfoURI"
      },
      "lastPage": {
        "$ref": "#/components/schemas/PresenceNavigationInfoURI"
      }
    },
    "name": "PresenceNavigationInfo"
  },
  {
    "type": "object",
    "properties": {
      "departmentId": {
        "type": "string"
      },
      "addedExtensionIds": {
        "type": "array",
        "items": {
          "type": "string"
        }
      },
      "removedExtensionIds": {
        "type": "array",
        "items": {
          "type": "string"
        }
      }
    },
    "name": "BulkAssignItem"
  },
  {
    "type": "object",
    "description": "Please note that legacy 'Department' extension type corresponds to\n'Call Queue' extensions in modern RingCentral product terminology\n",
    "properties": {
      "items": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/BulkAssignItem"
        }
      }
    },
    "name": "DepartmentBulkAssignResource"
  },
  {
    "type": "object",
    "description": "Please note that legacy 'Department' extension type corresponds to\n'Call Queue' extensions in modern RingCentral product terminology\n",
    "properties": {
      "uri": {
        "type": "string",
        "format": "uri",
        "description": "Canonical URL of the resource"
      },
      "records": {
        "type": "array",
        "description": "List of call queue member extensions",
        "items": {
          "$ref": "#/components/schemas/ExtensionInfo"
        }
      },
      "navigation": {
        "$ref": "#/components/schemas/ProvisioningNavigationInfo"
      },
      "paging": {
        "$ref": "#/components/schemas/ProvisioningPagingInfo"
      }
    },
    "name": "DepartmentMemberList"
  },
  {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "Internal identifier of an extension"
      },
      "uri": {
        "type": "string",
        "format": "uri",
        "description": "Canonical URI of an extension"
      },
      "name": {
        "type": "string",
        "description": "Extension name"
      },
      "extensionNumber": {
        "type": "string",
        "description": "Number of extension"
      },
      "partnerId": {
        "type": "string",
        "description": "For partner applications. Internal identifier of an extension\ncreated by partner. The RingCentral supports the mapping of accounts and\nstores the corresponding account ID/extension ID for each partner ID of\na client application. In request URIs partner IDs are accepted instead\nof regular RingCentral native IDs as path parameters using pid = XXX clause.\nThough in response URIs contain the corresponding account IDs and extension\nIDs. In all request and response bodies these values are reflected via\npartnerId attributes of account and extension\n"
      }
    },
    "description": "Information on the extension, to which the phone number is assigned.\nReturned only for the request of Account phone number list\n",
    "name": "ExtensionInfo"
  },
  {
    "type": "object",
    "properties": {
      "uuid": {
        "type": "string",
        "description": "Unique identifier of a meeting instance"
      },
      "id": {
        "type": "string"
      },
      "contentDownloadUri": {
        "type": "string",
        "format": "uri",
        "description": "Link for downloading the recorded file (mp4, mp3 audio and text/plain chat file)"
      },
      "contentType": {
        "type": "string",
        "enum": [
          "video/mp4",
          "audio/m4a",
          "text/vtt"
        ]
      },
      "size": {
        "type": "integer",
        "format": "int32"
      },
      "startTime": {
        "type": "string",
        "format": "date-time",
        "description": "Starting time of a recording"
      },
      "endTime": {
        "type": "string",
        "format": "date-time",
        "description": "Ending time of a recording"
      },
      "status": {
        "type": "string",
        "enum": [
          "Completed",
          "Processing"
        ]
      }
    },
    "name": "MeetingRecordingInfo"
  },
  {
    "type": "object",
    "properties": {
      "uri": {
        "type": "string",
        "format": "uri"
      }
    },
    "description": "Canonical URI for the corresponding page of the list",
    "name": "MeetingRecordingsNavigationInfoUri"
  },
  {
    "type": "object",
    "properties": {
      "uuid": {
        "type": "string",
        "description": "Unique identifier of a meeting instance"
      },
      "id": {
        "type": "string"
      },
      "topic": {
        "type": "string"
      },
      "startTime": {
        "type": "string",
        "format": "date-time"
      }
    },
    "name": "MeetingInfo"
  },
  {
    "type": "object",
    "properties": {
      "records": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/MeetingRecordings"
        }
      },
      "paging": {
        "$ref": "#/components/schemas/MeetingRecordingsPagingInfo"
      },
      "navigation": {
        "$ref": "#/components/schemas/MeetingRecordingsNavigationInfo"
      }
    },
    "name": "ListMeetingRecordingsResponse"
  },
  {
    "type": "object",
    "properties": {
      "page": {
        "type": "integer",
        "format": "int32",
        "description": "The current page number. 1-indexed, so the first page is 1 by default. May be omitted if result is empty (because non-existent page was specified or perPage=0 was requested)"
      },
      "perPage": {
        "type": "integer",
        "format": "int32",
        "description": "Current page size, describes how many items are in each page. Default value is 100. Maximum value is 1000. If perPage value in the request is greater than 1000, the maximum value (1000) is applied"
      },
      "pageStart": {
        "type": "integer",
        "format": "int32",
        "description": "The zero-based number of the first element on the current page. Omitted if the page is omitted or result is empty"
      },
      "pageEnd": {
        "type": "integer",
        "format": "int32",
        "description": "The zero-based index of the last element on the current page. Omitted if the page is omitted or result is empty"
      },
      "totalPages": {
        "type": "integer",
        "format": "int32",
        "description": "The total number of pages in a dataset. May be omitted for some resources due to performance reasons"
      },
      "totalElements": {
        "type": "integer",
        "format": "int32",
        "description": "The total number of elements in a dataset. May be omitted for some resource due to performance reasons"
      }
    },
    "name": "MeetingRecordingsPagingInfo"
  },
  {
    "type": "object",
    "properties": {
      "meeting": {
        "$ref": "#/components/schemas/MeetingInfo"
      },
      "recordings": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/MeetingRecordingInfo"
        }
      }
    },
    "name": "MeetingRecordings"
  },
  {
    "type": "object",
    "properties": {
      "firstPage": {
        "$ref": "#/components/schemas/MeetingRecordingsNavigationInfoUri"
      },
      "nextPage": {
        "$ref": "#/components/schemas/MeetingRecordingsNavigationInfoUri"
      },
      "previousPage": {
        "$ref": "#/components/schemas/MeetingRecordingsNavigationInfoUri"
      },
      "lastPage": {
        "$ref": "#/components/schemas/MeetingRecordingsNavigationInfoUri"
      }
    },
    "name": "MeetingRecordingsNavigationInfo"
  },
  {
    "type": "object",
    "properties": {
      "uri": {
        "type": "string",
        "format": "uri"
      },
      "records": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/ExtensionWithRolesResource"
        }
      },
      "paging": {
        "$ref": "#/components/schemas/EnumeratedPagingModel"
      },
      "navigation": {
        "$ref": "#/components/schemas/PageNavigationModel"
      }
    },
    "name": "ExtensionWithRolesCollectionResource"
  },
  {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "Internal identifier of a role"
      },
      "autoAssigned": {
        "type": "boolean",
        "default": false,
        "description": "Specifies if a role can be auto assigned"
      },
      "displayName": {
        "type": "string",
        "description": "Name of a default role"
      },
      "siteCompatible": {
        "type": "boolean",
        "description": "Site compatibility flag"
      },
      "siteRestricted": {
        "type": "boolean",
        "description": "Site restricted flag"
      }
    },
    "name": "AssignedRoleResource"
  },
  {
    "type": "object",
    "properties": {
      "uri": {
        "type": "string",
        "format": "uri"
      },
      "extensionId": {
        "type": "string"
      },
      "roles": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/AssignedRoleResource"
        }
      }
    },
    "name": "ExtensionWithRolesResource"
  },
  {
    "type": "object",
    "properties": {
      "code": {
        "type": "string",
        "enum": [
          "ExtensionLimitation",
          "FeatureLimitation"
        ],
        "description": "Specifies the type of limitation. `ExtensionLimitation` means that the feature is turned off for this particular extension.\n`FeatureLimitation` means that the user may enable this feature and setup the rule via the Service Web UI\n"
      },
      "message": {
        "type": "string",
        "description": "Error message depending on the type of limitation"
      }
    },
    "name": "ForwardAllCallsReason"
  },
  {
    "type": "object",
    "properties": {
      "enabled": {
        "type": "boolean",
        "description": "Indicates whether the Forward All Company Calls feature is enabled or disabled for account"
      },
      "ranges": {
        "type": "array",
        "description": "Specific data ranges. If specified, weeklyRanges cannot be specified",
        "items": {
          "$ref": "#/components/schemas/RangesInfo"
        }
      },
      "callHandlingAction": {
        "type": "string",
        "description": "Specifies how incoming calls are forwarded. The default value\nis 'Operator' 'Operator' - play company greeting and forward to operator\nextension 'Disconnect' - play company greeting and disconnect 'Bypass'\n- bypass greeting to go to selected extension = ['Operator', 'Disconnect',\n'Bypass']\n",
        "enum": [
          "Operator",
          "Disconnect",
          "Bypass"
        ]
      },
      "extension": {
        "$ref": "#/components/schemas/ExtensionShortInfoResource"
      },
      "reason": {
        "$ref": "#/components/schemas/ForwardAllCallsReason"
      }
    },
    "name": "ForwardAllCompanyCallsInfo"
  },
  {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "Internal identifier of an extension"
      },
      "name": {
        "type": "string",
        "description": "Extension name"
      },
      "extensionNumber": {
        "type": "string",
        "description": "Extension number"
      }
    },
    "name": "ExtensionShortInfoResource"
  },
  {
    "required": [
      "navigation",
      "paging",
      "records",
      "uri"
    ],
    "type": "object",
    "properties": {
      "uri": {
        "type": "string",
        "format": "uri",
        "description": "Link to a call monitoring groups resource"
      },
      "records": {
        "type": "array",
        "description": "List of call monitoring group members",
        "items": {
          "$ref": "#/components/schemas/CallMonitoringGroup"
        }
      },
      "navigation": {
        "$ref": "#/components/schemas/ProvisioningNavigationInfo"
      },
      "paging": {
        "$ref": "#/components/schemas/ProvisioningPagingInfo"
      }
    },
    "name": "CallMonitoringGroups"
  },
  {
    "type": "object",
    "properties": {
      "uri": {
        "type": "string",
        "format": "uri",
        "description": "Link to a call monitoring group resource"
      },
      "id": {
        "type": "string",
        "description": "Internal identifier of a group"
      },
      "name": {
        "type": "string",
        "description": "Name of a group"
      }
    },
    "name": "CallMonitoringGroup"
  },
  {
    "required": [
      "name"
    ],
    "type": "object",
    "properties": {
      "name": {
        "type": "string",
        "description": "Name of a group"
      }
    },
    "name": "CreateCallMonitoringGroupRequest"
  },
  {
    "type": "object",
    "properties": {
      "addedExtensions": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/CallMonitoringExtensionInfo"
        }
      },
      "updatedExtensions": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/CallMonitoringExtensionInfo"
        }
      },
      "removedExtensions": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/CallMonitoringExtensionInfo"
        }
      }
    },
    "name": "CallMonitoringBulkAssign"
  },
  {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "Internal identifier of an extension. Only the following extension\ntypes are allowed: User, DigitalUser, VirtualUser, FaxUser, Limited\n"
      },
      "permissions": {
        "type": "array",
        "description": "Set of call monitoring group permissions granted to a specified\nextension. In order to remove a specified extension from a call monitoring\ngroup use an empty value\n",
        "items": {
          "type": "string",
          "enum": [
            "Monitoring",
            "Monitored"
          ]
        }
      }
    },
    "name": "CallMonitoringExtensionInfo"
  },
  {
    "type": "object",
    "properties": {
      "uri": {
        "type": "string",
        "format": "uri",
        "description": "Link to a call monitoring group member"
      },
      "id": {
        "type": "string",
        "description": "Internal identifier of a call monitoring group member\n"
      },
      "extensionNumber": {
        "type": "string",
        "description": "Extension number of a call monitoring group member\n"
      },
      "permissions": {
        "type": "array",
        "items": {
          "type": "string",
          "description": "Call monitoring permission; multiple values are allowed:\n- `Monitoring` - User can monitor a group;\n- `Monitored` - User can be monitored.\n",
          "enum": [
            "Monitoring",
            "Monitored"
          ]
        }
      }
    },
    "name": "CallMonitoringGroupMemberInfo"
  },
  {
    "required": [
      "navigation",
      "paging",
      "records",
      "uri"
    ],
    "type": "object",
    "properties": {
      "uri": {
        "type": "string",
        "format": "uri",
        "description": "Link to a call monitoring group members resource"
      },
      "records": {
        "type": "array",
        "description": "List of a call monitoring group members",
        "items": {
          "$ref": "#/components/schemas/CallMonitoringGroupMemberInfo"
        }
      },
      "navigation": {
        "$ref": "#/components/schemas/ProvisioningNavigationInfo"
      },
      "paging": {
        "$ref": "#/components/schemas/ProvisioningPagingInfo"
      }
    },
    "name": "CallMonitoringGroupMemberList"
  },
  {
    "type": "object",
    "properties": {
      "company": {
        "type": "string",
        "description": "Company business name"
      },
      "email": {
        "type": "string",
        "format": "email",
        "description": "Company business email address"
      },
      "businessAddress": {
        "$ref": "#/components/schemas/BusinessAddressInfo"
      },
      "mainSiteName": {
        "type": "string",
        "description": "Custom site name"
      }
    },
    "name": "ModifyAccountBusinessAddressRequest"
  },
  {
    "type": "object",
    "properties": {
      "country": {
        "type": "string",
        "description": "Name of a country"
      },
      "state": {
        "type": "string",
        "description": "Name of a state/province"
      },
      "city": {
        "type": "string",
        "description": "Name of a city"
      },
      "street": {
        "type": "string",
        "description": "Street address"
      },
      "zip": {
        "type": "string",
        "description": "Zip code"
      }
    },
    "description": "Company business address",
    "name": "BusinessAddressInfo"
  },
  {
    "type": "object",
    "properties": {
      "uri": {
        "type": "string",
        "format": "uri"
      },
      "businessAddress": {
        "$ref": "#/components/schemas/ContactBusinessAddressInfo"
      },
      "company": {
        "type": "string",
        "description": "Company business name"
      },
      "email": {
        "type": "string",
        "format": "email",
        "description": "Company business email address"
      },
      "mainSiteName": {
        "type": "string",
        "description": "Custom site name"
      }
    },
    "name": "AccountBusinessAddressResource"
  },
  {
    "type": "object",
    "properties": {
      "mode": {
        "type": "string",
        "description": "Prompt mode: custom media or text",
        "enum": [
          "Audio",
          "TextToSpeech"
        ]
      },
      "audio": {
        "$ref": "#/components/schemas/AudioPromptInfo"
      },
      "text": {
        "type": "string",
        "description": "For 'TextToSpeech' mode only. Prompt text"
      },
      "language": {
        "$ref": "#/components/schemas/PromptLanguageInfo"
      }
    },
    "description": "Prompt metadata",
    "name": "IvrMenuPromptInfo"
  },
  {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "Internal identifier of a site. If the value is not specified in request, then the `main-site` default value is used"
      },
      "name": {
        "type": "string",
        "description": "Site name"
      }
    },
    "description": "Site data",
    "name": "IvrMenuSiteInfo"
  },
  {
    "type": "object",
    "properties": {
      "uri": {
        "type": "string",
        "format": "uri",
        "description": "Link to a prompt language"
      },
      "id": {
        "type": "string",
        "description": "Internal identifier of a language"
      },
      "name": {
        "type": "string",
        "description": "Language name"
      },
      "localeCode": {
        "type": "string",
        "description": "Language locale code"
      }
    },
    "description": "For 'TextToSpeech' mode only. Prompt language metadata",
    "name": "PromptLanguageInfo"
  },
  {
    "type": "object",
    "properties": {
      "uri": {
        "type": "string",
        "format": "uri",
        "description": "Link to an extension resource"
      },
      "id": {
        "type": "string",
        "description": "Internal identifier of an extension"
      },
      "name": {
        "type": "string",
        "description": "Name of an extension"
      }
    },
    "description": "For 'Connect' or 'Voicemail' actions only. Extension reference",
    "name": "IVRMenuExtensionInfo"
  },
  {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "Internal identifier of an IVR Menu extension",
        "example": "7258440006"
      },
      "uri": {
        "type": "string",
        "format": "uri",
        "description": "Link to an IVR Menu extension resource",
        "example": "https://api-example.rincentral.com/restapi/v1.0/account/5936989006/ivr-menus/7258440006"
      },
      "name": {
        "type": "string",
        "description": "First name of an IVR Menu user",
        "example": "IVR Menu 1001"
      },
      "extensionNumber": {
        "type": "string",
        "description": "Number of an IVR Menu extension",
        "example": "1001"
      }
    },
    "name": "IVRMenuListInfo"
  },
  {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "Internal identifier of an IVR Menu extension"
      },
      "uri": {
        "type": "string",
        "format": "uri",
        "description": "Link to an IVR Menu extension resource"
      },
      "name": {
        "type": "string",
        "description": "First name of an IVR Menu user"
      },
      "extensionNumber": {
        "type": "string",
        "description": "Number of an IVR Menu extension"
      },
      "site": {
        "$ref": "#/components/schemas/IvrMenuSiteInfo"
      },
      "prompt": {
        "$ref": "#/components/schemas/IvrMenuPromptInfo"
      },
      "actions": {
        "type": "array",
        "description": "Keys handling settings",
        "items": {
          "$ref": "#/components/schemas/IVRMenuActionsInfo"
        }
      }
    },
    "name": "IVRMenuInfo"
  },
  {
    "type": "object",
    "properties": {
      "uri": {
        "type": "string",
        "format": "uri",
        "description": "Link to a prompt audio file"
      },
      "id": {
        "type": "string",
        "description": "Internal identifier of a prompt"
      }
    },
    "description": "For 'Audio' mode only. Prompt media reference",
    "name": "AudioPromptInfo"
  },
  {
    "type": "object",
    "properties": {
      "input": {
        "type": "string",
        "description": "Key. The following values are supported: numeric: '1' to '9' Star Hash NoInput "
      },
      "action": {
        "type": "string",
        "description": "Internal identifier of an answering rule",
        "enum": [
          "Connect",
          "Voicemail",
          "DialByName",
          "Transfer",
          "Repeat",
          "ReturnToRoot",
          "ReturnToPrevious",
          "Disconnect",
          "ReturnToTopLevelMenu",
          "DoNothing",
          "ConnectToOperator"
        ]
      },
      "extension": {
        "$ref": "#/components/schemas/IVRMenuExtensionInfo"
      },
      "phoneNumber": {
        "type": "string",
        "description": "For 'Transfer' action only. PSTN number in E.164 format"
      }
    },
    "name": "IVRMenuActionsInfo"
  },
  {
    "type": "object",
    "properties": {
      "uri": {
        "type": "string",
        "format": "uri",
        "description": "Link to an IVR Menu list"
      },
      "records": {
        "type": "array",
        "description": "List of ivr menus",
        "items": {
          "$ref": "#/components/schemas/IVRMenuListInfo"
        }
      }
    },
    "name": "IVRMenuList"
  },
  {
    "type": "object",
    "readOnly": true,
    "required": [
      "errorCode",
      "message"
    ],
    "properties": {
      "errorCode": {
        "type": "string",
        "description": "Logical error code",
        "readOnly": true,
        "example": "XYZ-123"
      },
      "message": {
        "type": "string",
        "description": "User-friendly error message",
        "readOnly": true,
        "example": "Something went wrong"
      },
      "parameterName": {
        "type": "string",
        "description": "The name of the request parameter or attribute that caused the error",
        "example": "accountId"
      }
    },
    "name": "Error"
  },
  {
    "type": "object",
    "description": "Action target object (company/extension)",
    "properties": {
      "objectId": {
        "type": "string",
        "description": "Extension identifier of the affected entity or \"0\" for Company level",
        "example": "404611540004"
      },
      "objectType": {
        "type": "string",
        "description": "Type of the entity.",
        "example": "Extension",
        "enum": [
          "Extension",
          "Account",
          "Company",
          "Template"
        ]
      },
      "name": {
        "type": "string",
        "description": "Target extension name",
        "example": "Charlie Williams"
      },
      "extensionNumber": {
        "type": "string",
        "description": "Target extension (short) number  of the affected entity (if the objectType is EXTENSION).",
        "example": "103"
      },
      "siteId": {
        "type": "string",
        "description": "Target extension site identifier (if any)",
        "example": "871836004"
      }
    },
    "name": "AccountHistoryRecordTarget"
  },
  {
    "type": "object",
    "properties": {
      "parameters": {
        "type": "array",
        "description": "Event details (additional parameters)",
        "items": {
          "$ref": "#/components/schemas/AccountHistoryRecordDetailsParameters"
        }
      }
    },
    "name": "AccountHistoryRecordPublicDetails"
  },
  {
    "required": [
      "key",
      "value"
    ],
    "type": "object",
    "properties": {
      "key": {
        "type": "string",
        "example": "settingName"
      },
      "value": {
        "type": "string",
        "example": "Password"
      }
    },
    "name": "AccountHistoryRecordDetailsParameters"
  },
  {
    "type": "object",
    "properties": {
      "records": {
        "type": "array",
        "description": "List of Records",
        "items": {
          "$ref": "#/components/schemas/AccountHistoryPublicRecord"
        }
      }
    },
    "name": "AccountHistorySearchPublicResponse"
  },
  {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "Internal record identifier",
        "example": "9835bead-397b-4ba8-b457-73f07ab79997"
      },
      "eventTime": {
        "type": "string",
        "description": "Timestamp of an event (provided by a client), RFC3339 date-time format, UTC time zone.",
        "format": "date-time"
      },
      "initiator": {
        "$ref": "#/components/schemas/AccountHistoryRecordPublicInitiator"
      },
      "actionId": {
        "type": "string",
        "description": "Action type",
        "example": "CHANGE_SECRET_INFO"
      },
      "eventType": {
        "type": "string",
        "description": "Operation: \"CREATE\", \"UPDATE\", \"DELETE\" or custom",
        "example": "UPDATE"
      },
      "accountId": {
        "type": "string",
        "description": "Account identifier which is related with the particular record.",
        "example": "403858014008"
      },
      "accountName": {
        "type": "string",
        "description": "Account (company) name",
        "example": "Some Company"
      },
      "target": {
        "$ref": "#/components/schemas/AccountHistoryRecordTarget"
      },
      "clientIp": {
        "type": "string",
        "description": "IP-address of a client.",
        "example": "192.168.42.6"
      },
      "comment": {
        "type": "string",
        "description": "Custom top-level comment"
      },
      "details": {
        "$ref": "#/components/schemas/AccountHistoryRecordPublicDetails"
      }
    },
    "name": "AccountHistoryPublicRecord"
  },
  {
    "type": "object",
    "required": [
      "errors"
    ],
    "properties": {
      "errors": {
        "type": "array",
        "minItems": 1,
        "items": {
          "$ref": "#/components/schemas/Error"
        }
      }
    },
    "name": "ErrorResource"
  },
  {
    "type": "object",
    "properties": {
      "eventTimeFrom": {
        "type": "string",
        "format": "date-time",
        "description": "The beginning of the time range to return records in ISO 8601 format in UTC timezone, default is \"eventTimeFrom\"-24 hours\n"
      },
      "eventTimeTo": {
        "type": "string",
        "format": "date-time",
        "description": "The end of the time range to return records in ISO 8601 format in UTC timezone, default is the current time"
      },
      "initiatorIds": {
        "type": "array",
        "description": "List of extension IDs of change initiators.",
        "items": {
          "type": "string"
        }
      },
      "page": {
        "type": "integer",
        "format": "int32",
        "example": 1,
        "description": "Page number in the result set"
      },
      "perPage": {
        "type": "integer",
        "format": "int32",
        "example": 25,
        "description": "Number of records to be returned per page."
      },
      "targetIds": {
        "type": "array",
        "example": [
          "404611540004"
        ],
        "description": "List of extension (user) IDs affected by this action.",
        "items": {
          "type": "string"
        }
      },
      "siteId": {
        "type": "string",
        "example": "871836004",
        "description": "Site ID to apply as a filter"
      },
      "actionIds": {
        "type": "array",
        "example": [
          "CHANGE_SECRET_INFO",
          "CHANGE_USER_INFO"
        ],
        "description": "List of action IDs (exact keys) to search for (alternatively \"excludeActionIds\" option can be used).",
        "items": {
          "type": "string",
          "enum": [
            "CHANGE_SECRET_INFO",
            "CHANGE_USER_INFO"
          ]
        }
      },
      "searchString": {
        "type": "string",
        "example": "542617",
        "description": "The (sub)string to search, applied to the following fields:\n\n- initiator.name\n- initiator.role\n- initiator.extensionNumber\n- target.name\n- target.extensionNumber\n- details.parameters.value"
      },
      "excludeActionIds": {
        "type": "array",
        "example": [
          "CHANGE_SECRET_INFO",
          "CHANGE_USER_INFO"
        ],
        "description": "List of action IDs (exact keys) to exclude from your search (alternatively \"actionIds\" option can be used).",
        "items": {
          "type": "string",
          "enum": [
            "CHANGE_SECRET_INFO",
            "CHANGE_USER_INFO"
          ]
        }
      }
    },
    "name": "AccountHistorySearchPublicRequest"
  },
  {
    "type": "object",
    "description": "Event initiator info",
    "properties": {
      "extensionId": {
        "type": "string",
        "description": "Current user extension identifier",
        "example": "402539300008"
      },
      "extensionNumber": {
        "type": "string",
        "description": "Current user extension (short) number",
        "example": "101"
      },
      "name": {
        "type": "string",
        "description": "Current user full name",
        "example": "Alice Smith"
      },
      "role": {
        "type": "string",
        "description": "Current user role",
        "example": "Super Admin"
      }
    },
    "name": "AccountHistoryRecordPublicInitiator"
  },
  {
    "type": "object",
    "properties": {
      "dateTo": {
        "type": "string",
        "format": "date-time",
        "description": "The end of the time range to collect message records in ISO 8601 format including timezone.\nDefault is the current time\n"
      },
      "dateFrom": {
        "type": "string",
        "format": "date-time",
        "description": "The beginning of the time range to collect call log records in ISO 8601 format including timezone.\nDefault is the current time minus 24 hours\n"
      },
      "messageTypes": {
        "type": "array",
        "description": "Types of messages to be collected. If not specified, all messages without message type filtering will be returned. Multiple values are accepted",
        "items": {
          "type": "string",
          "description": "Type of messages to be collected",
          "enum": [
            "EMail",
            "Fax",
            "SMS",
            "VoiceMail",
            "Pager",
            "Text"
          ],
          "example": "Fax"
        },
        "example": [
          "Fax",
          "VoiceMail"
        ]
      }
    },
    "name": "CreateMessageStoreReportRequest"
  },
  {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "Internal identifier of a message store report task",
        "example": "400142200026-400142200026-bd162f24028442489385eb3f44c18354"
      },
      "uri": {
        "type": "string",
        "format": "uri",
        "description": "Canonical URI of a task"
      },
      "status": {
        "type": "string",
        "description": "Status of a message store report task",
        "enum": [
          "Accepted",
          "Pending",
          "InProgress",
          "AttemptFailed",
          "Failed",
          "Completed",
          "Cancelled"
        ]
      },
      "accountId": {
        "type": "string",
        "description": "Internal identifier of an account"
      },
      "extensionId": {
        "type": "string",
        "description": "Internal identifier of an extension"
      },
      "dateTo": {
        "type": "string",
        "format": "date-time",
        "description": "The end of the time range to collect message records in ISO 8601 format including timezone"
      },
      "dateFrom": {
        "type": "string",
        "format": "date-time",
        "description": "The beginning of the time range to collect call log records in ISO 8601 format including timezone"
      },
      "startTime": {
        "type": "string",
        "format": "date-time",
        "description": "The time when this task was started"
      },
      "finishTime": {
        "type": "string",
        "format": "date-time",
        "description": "The time when this task was finished"
      },
      "messageTypes": {
        "type": "array",
        "description": "Type of messages to be collected.",
        "items": {
          "type": "string",
          "description": "Type of messages to be collected",
          "enum": [
            "EMail",
            "Fax",
            "SMS",
            "VoiceMail",
            "Pager",
            "Text"
          ],
          "example": "Fax"
        },
        "example": [
          "Fax",
          "VoiceMail"
        ]
      }
    },
    "name": "MessageStoreReport"
  },
  {
    "type": "object",
    "properties": {
      "records": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/ArchiveInfo"
        }
      }
    },
    "name": "MessageStoreReportArchive"
  },
  {
    "type": "object",
    "properties": {
      "size": {
        "type": "integer",
        "format": "int64",
        "description": "Archive size in bytes",
        "example": 201412
      },
      "uri": {
        "type": "string",
        "format": "uri",
        "description": "Link for archive download"
      }
    },
    "name": "ArchiveInfo"
  },
  {
    "type": "object",
    "properties": {
      "page": {
        "type": "integer",
        "format": "int32"
      },
      "totalPages": {
        "type": "integer",
        "format": "int32"
      },
      "perPage": {
        "type": "integer",
        "format": "int32"
      },
      "totalElements": {
        "type": "integer",
        "format": "int32"
      },
      "pageStart": {
        "type": "integer",
        "format": "int32"
      },
      "pageEnd": {
        "type": "integer",
        "format": "int32"
      }
    },
    "name": "PagingInfo"
  },
  {
    "required": [
      "id"
    ],
    "type": "object",
    "properties": {
      "id": {
        "type": "string"
      },
      "name": {
        "type": "string"
      },
      "domain": {
        "type": "string"
      },
      "displayName": {
        "type": "string"
      }
    },
    "name": "RoleResource"
  },
  {
    "type": "object",
    "properties": {
      "errorCode": {
        "type": "string",
        "description": "Code that characterizes this error. Code uniquely identifies the source of the error.",
        "readOnly": true,
        "enum": [
          "ErrorCode{code='ADG-000', httpStatus=503, description='Service temporary unavailable.'}",
          "ErrorCode{code='ADG-010', httpStatus=503, description='Federation data temporary unavailable.'}",
          "ErrorCode{code='ADG-001', httpStatus=500, description='Service internal error.'}",
          "ErrorCode{code='ADG-100', httpStatus=403, description='Insufficient permissions.'}",
          "ErrorCode{code='ADG-101', httpStatus=403, description='Unauthorized access.'}",
          "ErrorCode{code='ADG-102', httpStatus=405, description='Method not allowed.'}",
          "ErrorCode{code='ADG-111', httpStatus=400, description='Need Content-Type header.'}",
          "ErrorCode{code='ADG-112', httpStatus=400, description='Request body is invalid.'}",
          "ErrorCode{code='ADG-121', httpStatus=400, description='Parameter [${paramName}] is invalid. ${additionalInfo:-}'}",
          "ErrorCode{code='ADG-115', httpStatus=415, description='Unsupported Media Type.'}",
          "ErrorCode{code='ADG-105', httpStatus=404, description='Current account is not linked to any federation.'}",
          "ErrorCode{code='ADG-107', httpStatus=404, description='Account not found.'}",
          "ErrorCode{code='ADG-122', httpStatus=404, description='Contact not found.'}",
          "ErrorCode{code=''ADG-200'', httpStatus=404, description=''Invalid URI''}"
        ]
      },
      "message": {
        "type": "string",
        "description": "Message that describes the error. This message can be used in UI.",
        "readOnly": true
      }
    },
    "description": "Description of an error occurred during request processing. This data type can be used only in readonly mode, no writing is allowed",
    "name": "ADGError"
  },
  {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "example": "872781820006"
      },
      "name": {
        "type": "string",
        "example": "Sales site"
      },
      "code": {
        "type": "string",
        "example": "1007"
      }
    },
    "name": "BusinessSiteResource"
  },
  {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "example": "63723034"
      },
      "name": {
        "type": "string",
        "example": "Leaders"
      }
    },
    "name": "GroupResource"
  },
  {
    "type": "object",
    "properties": {
      "formattedPhoneNumber": {
        "type": "string",
        "example": "+1 (205) 6812029"
      },
      "phoneNumber": {
        "type": "string",
        "example": "+12056812029"
      },
      "type": {
        "type": "string",
        "example": "VoiceFax"
      },
      "label": {
        "type": "string",
        "description": "Custom user name of a phone number, if any",
        "example": "Boss"
      },
      "usageType": {
        "type": "string",
        "description": "Usage type of a phone number",
        "enum": [
          "MobileNumber",
          "ContactNumber",
          "DirectNumber",
          "ForwardedNumber"
        ],
        "example": "DirectNumber"
      },
      "hidden": {
        "type": "boolean",
        "description": "Specifies if a phone number should be hidden or not"
      },
      "primary": {
        "type": "boolean",
        "description": "Specifies if the number is primary, i.e. displayed as 'main number' and called by default"
      }
    },
    "name": "PhoneNumberResource"
  },
  {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "example": "873014540006"
      },
      "name": {
        "type": "string",
        "example": "Sales CQ"
      }
    },
    "name": "CallQueueResource"
  },
  {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "example": "9813"
      },
      "typeId": {
        "type": "string",
        "example": "1"
      },
      "type": {
        "type": "string",
        "example": "External"
      },
      "displayName": {
        "type": "string",
        "example": "Integration X"
      },
      "routingType": {
        "type": "string",
        "example": "Account"
      },
      "outboundEdgeId": {
        "type": "string",
        "example": "1726"
      }
    },
    "name": "ExternalIntegrationResource"
  },
  {
    "required": [
      "id"
    ],
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "Contact extension identifier",
        "example": "865706371004"
      },
      "type": {
        "type": "string",
        "description": "Contact type",
        "example": "User",
        "enum": [
          "User",
          "Department",
          "Announcement",
          "Voicemail",
          "SharedLinesGroup",
          "PagingOnly",
          "ParkLocation",
          "IvrMenu",
          "Limited",
          "ApplicationExtension",
          "Site",
          "Bot",
          "Room",
          "ProxyAdmin",
          "DelegatedLinesGroup",
          "GroupCallPickup",
          "External",
          "Unknown"
        ]
      },
      "status": {
        "type": "string",
        "description": "Contact status",
        "example": "Enabled",
        "enum": [
          "Enabled",
          "Disabled",
          "Frozen",
          "NotActivated",
          "Unassigned",
          "Unknown"
        ]
      },
      "account": {
        "$ref": "#/components/schemas/AccountResource"
      },
      "department": {
        "type": "string",
        "example": "External"
      },
      "email": {
        "type": "string",
        "format": "email",
        "example": "john.doe@mycompany.com"
      },
      "extensionNumber": {
        "type": "string",
        "example": "103"
      },
      "firstName": {
        "type": "string",
        "description": "First name of a contact, for user extensions only",
        "example": "John"
      },
      "lastName": {
        "type": "string",
        "description": "Last name of a contact, for user extensions only",
        "example": "Doe"
      },
      "name": {
        "type": "string",
        "description": "Name of a contact, for non-user extensions",
        "example": "Conference room ?5"
      },
      "jobTitle": {
        "type": "string",
        "example": "Sales manager"
      },
      "phoneNumbers": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/PhoneNumberResource"
        }
      },
      "profileImage": {
        "$ref": "#/components/schemas/AccountDirectoryProfileImageResource"
      },
      "site": {
        "$ref": "#/components/schemas/BusinessSiteResource"
      },
      "hidden": {
        "type": "boolean"
      },
      "role": {
        "$ref": "#/components/schemas/RoleResource"
      },
      "callQueues": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/CallQueueResource"
        }
      },
      "customFields": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/CustomFieldResource"
        }
      },
      "groups": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/GroupResource"
        }
      },
      "costCenter": {
        "$ref": "#/components/schemas/CostCenterResource"
      },
      "integration": {
        "$ref": "#/components/schemas/ExternalIntegrationResource"
      },
      "subType": {
        "type": "string",
        "example": "3"
      }
    },
    "name": "ContactResource"
  },
  {
    "required": [
      "id"
    ],
    "type": "object",
    "properties": {
      "companyName": {
        "type": "string",
        "example": "My lovely company"
      },
      "federatedName": {
        "type": "string",
        "example": "Lovely Holding"
      },
      "id": {
        "type": "string",
        "example": "400131426008"
      },
      "mainNumber": {
        "$ref": "#/components/schemas/PhoneNumberResource"
      }
    },
    "name": "AccountResource"
  },
  {
    "required": [
      "records",
      "paging"
    ],
    "type": "object",
    "properties": {
      "paging": {
        "$ref": "#/components/schemas/PagingInfo"
      },
      "records": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/ContactResource"
        }
      }
    },
    "name": "DirectoryResource"
  },
  {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "example": "1032854"
      },
      "name": {
        "type": "string",
        "example": "Rank"
      },
      "value": {
        "type": "string",
        "example": "5"
      }
    },
    "name": "CustomFieldResource"
  },
  {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "example": "83266549237542"
      },
      "code": {
        "type": "string",
        "example": "Main"
      },
      "name": {
        "type": "string",
        "example": "Cost Center A"
      }
    },
    "name": "CostCenterResource"
  },
  {
    "type": "object",
    "properties": {
      "etag": {
        "type": "string",
        "example": "tag"
      },
      "uri": {
        "type": "string",
        "format": "uri"
      }
    },
    "name": "AccountDirectoryProfileImageResource"
  },
  {
    "type": "object",
    "properties": {
      "errors": {
        "type": "array",
        "description": "Collection of all gathered errors",
        "readOnly": true,
        "items": {
          "$ref": "#/components/schemas/ADGError"
        }
      }
    },
    "description": "Format of response in case that any error occurred during request processing",
    "name": "ADGErrorResponse"
  },
  {
    "type": "array",
    "description": "Types of extension to filter the contacts.",
    "items": {
      "$ref": "#/components/schemas/SearchDirectoryExtensionType"
    },
    "name": "SearchDirectoryExtensionTypes"
  },
  {
    "type": "object",
    "properties": {
      "searchString": {
        "type": "string",
        "description": "String value to filter the contacts. The value specified is searched through the following fields: `firstName`, `lastName`, `extensionNumber`, `phoneNumber`, `email`, `jobTitle`, `department`, `customFieldValue`"
      },
      "searchFields": {
        "type": "array",
        "description": "The list of field to be searched for",
        "items": {
          "type": "string",
          "enum": [
            "firstName",
            "lastName",
            "extensionNumber",
            "phoneNumber",
            "email",
            "jobTitle",
            "department",
            "customFieldValue"
          ]
        }
      },
      "showFederated": {
        "type": "boolean",
        "description": "If 'True' then contacts of all accounts in federation are returned, if it is in federation, account section will be returned. If 'False' then only contacts of the current account are returned, and account section is eliminated in this case"
      },
      "showAdminOnlyContacts": {
        "type": "boolean",
        "description": "Should show AdminOnly Contacts",
        "default": false
      },
      "extensionType": {
        "type": "string",
        "description": "Type of extension to filter the contacts",
        "enum": [
          "User",
          "Department",
          "Announcement",
          "Voicemail",
          "DigitalUser",
          "VirtualUser",
          "FaxUser",
          "PagingOnly",
          "SharedLinesGroup",
          "IvrMenu",
          "ApplicationExtension",
          "ParkLocation",
          "Limited",
          "Site",
          "DelegatedLinesGroup",
          "FlexibleUser"
        ],
        "example": "FaxUser"
      },
      "siteId": {
        "type": "string",
        "description": "Internal identifier of the business site to which extensions belong",
        "example": "872781797006"
      },
      "showExternalContacts": {
        "type": "boolean",
        "default": false,
        "description": "Allows to control whether External (Hybrid) contacts should be returned in the response or not",
        "example": true
      },
      "accountIds": {
        "type": "array",
        "description": "The list of Internal identifiers of an accounts",
        "items": {
          "type": "string"
        },
        "example": [
          "854874047006",
          "422456828004",
          "854874151006"
        ]
      },
      "department": {
        "type": "string",
        "description": "Department"
      },
      "siteIds": {
        "type": "array",
        "description": "The list of Internal identifiers of the business sites to which extensions belong",
        "items": {
          "type": "string"
        }
      },
      "extensionStatuses": {
        "type": "array",
        "description": "Extension current state.",
        "items": {
          "type": "string",
          "enum": [
            "Enabled",
            "Disabled",
            "NotActivated"
          ]
        }
      },
      "extensionTypes": {
        "$ref": "#/components/schemas/SearchDirectoryExtensionTypes"
      },
      "orderBy": {
        "type": "array",
        "description": "Sorting settings",
        "items": {
          "$ref": "#/components/schemas/OrderBy"
        }
      },
      "page": {
        "type": "integer",
        "format": "int32"
      },
      "perPage": {
        "type": "integer",
        "format": "int32"
      }
    },
    "example": {
      "searchString": "John Doe",
      "searchFields": [
        "lastName",
        "email"
      ],
      "showFederated": true,
      "siteIds": [
        "872781797006",
        "872781820006"
      ],
      "extensionStatuses": [
        "Enabled"
      ],
      "department": "R&D department",
      "page": 1,
      "perPage": 30
    },
    "name": "SearchDirectoryEntriesRequest"
  },
  {
    "type": "object",
    "properties": {
      "index": {
        "type": "integer",
        "format": "int32",
        "default": 1,
        "description": "Sorting priority index, starting from '1'. Optional if only one element in `orderBy` array is specified",
        "example": 1
      },
      "fieldName": {
        "type": "string",
        "description": "Field name by which to sort the contacts",
        "enum": [
          "firstName",
          "lastName",
          "extensionNumber",
          "phoneNumber",
          "email",
          "jobTitle",
          "department"
        ],
        "example": "department"
      },
      "direction": {
        "type": "string",
        "default": "Asc",
        "description": "Sorting direction",
        "enum": [
          "Asc",
          "Desc"
        ],
        "example": "Asc"
      }
    },
    "name": "OrderBy"
  },
  {
    "type": "object",
    "properties": {
      "accounts": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/FederatedAccountResource"
        }
      },
      "creationTime": {
        "type": "string",
        "format": "date-time"
      },
      "displayName": {
        "type": "string"
      },
      "id": {
        "type": "string"
      },
      "lastModifiedTime": {
        "type": "string",
        "format": "date-time"
      },
      "type": {
        "type": "string",
        "description": "Federation type",
        "enum": [
          "Regular",
          "AdminOnly"
        ]
      }
    },
    "name": "FederationResource"
  },
  {
    "type": "object",
    "required": [
      "id"
    ],
    "properties": {
      "companyName": {
        "type": "string"
      },
      "conflictCount": {
        "type": "integer",
        "format": "int32"
      },
      "federatedName": {
        "type": "string"
      },
      "id": {
        "type": "string"
      },
      "linkCreationTime": {
        "type": "string",
        "format": "date-time"
      },
      "mainNumber": {
        "$ref": "#/components/schemas/PhoneNumberResource"
      }
    },
    "name": "FederatedAccountResource"
  },
  {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "Internal identifier of a paging group user extension"
      },
      "uri": {
        "type": "string",
        "format": "uri",
        "description": "Link to a paging group user extension"
      },
      "extensionNumber": {
        "type": "string",
        "description": "Extension number of a paging group user"
      },
      "name": {
        "type": "string",
        "description": "Name of a paging group user"
      }
    },
    "name": "PagingGroupExtensionInfo"
  },
  {
    "type": "object",
    "properties": {
      "uri": {
        "type": "string",
        "format": "uri",
        "description": "Link to a list of users allowed to page the Paging Only group\n"
      },
      "records": {
        "type": "array",
        "description": "List of users allowed to page the Paging Only group",
        "items": {
          "$ref": "#/components/schemas/PagingGroupExtensionInfo"
        }
      },
      "navigation": {
        "$ref": "#/components/schemas/ProvisioningNavigationInfo"
      },
      "paging": {
        "$ref": "#/components/schemas/ProvisioningPagingInfo"
      }
    },
    "name": "PagingOnlyGroupUsers"
  },
  {
    "type": "object",
    "properties": {
      "addedUserIds": {
        "type": "array",
        "description": "List of users that will be allowed to page a group specified\n",
        "items": {
          "type": "string"
        }
      },
      "removedUserIds": {
        "type": "array",
        "description": "List of users that will be disallowed to page a group specified\n",
        "items": {
          "type": "string"
        }
      },
      "addedDeviceIds": {
        "type": "array",
        "description": "List of account devices that will be assigned to a paging group\nspecified\n",
        "items": {
          "type": "string"
        }
      },
      "removedDeviceIds": {
        "type": "array",
        "description": "List of account devices that will be unassigned from a paging\ngroup specified\n",
        "items": {
          "type": "string"
        }
      }
    },
    "name": "EditPagingGroupRequest"
  },
  {
    "type": "object",
    "properties": {
      "uri": {
        "type": "string",
        "format": "uri",
        "description": "Link to a list of devices assigned to the paging only group"
      },
      "records": {
        "type": "array",
        "description": "List of paging devices assigned to this group",
        "items": {
          "$ref": "#/components/schemas/PagingDeviceInfo"
        }
      },
      "navigation": {
        "$ref": "#/components/schemas/ProvisioningNavigationInfo"
      },
      "paging": {
        "$ref": "#/components/schemas/ProvisioningPagingInfo"
      }
    },
    "name": "PagingOnlyGroupDevices"
  },
  {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "Internal identifier of a paging device"
      },
      "uri": {
        "type": "string",
        "format": "uri",
        "description": "Link to a paging device resource"
      },
      "name": {
        "type": "string",
        "description": "Name of a paging device"
      }
    },
    "name": "PagingDeviceInfo"
  },
  {
    "type": "object",
    "properties": {
      "homeCountry": {
        "$ref": "#/components/schemas/CountryInfoShortModel"
      },
      "timezone": {
        "$ref": "#/components/schemas/TimezoneInfo"
      },
      "language": {
        "$ref": "#/components/schemas/RegionalLanguageInfo"
      },
      "greetingLanguage": {
        "$ref": "#/components/schemas/GreetingLanguageInfo"
      },
      "formattingLocale": {
        "$ref": "#/components/schemas/FormattingLocaleInfo"
      },
      "timeFormat": {
        "type": "string",
        "description": "Time format setting. The default value is '12h' = ['12h', '24h']",
        "enum": [
          "12h",
          "24h"
        ]
      }
    },
    "description": "Regional data (timezone, home country, language) of an extension/account.\nThe default is Company (Auto-Receptionist) settings\n",
    "name": "RegionalSettings"
  },
  {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "Internal identifier of a site extension"
      },
      "uri": {
        "type": "string",
        "format": "uri",
        "description": "Link to a site resource"
      },
      "name": {
        "type": "string",
        "description": "Extension user first name"
      },
      "extensionNumber": {
        "type": "string",
        "description": "Extension number"
      },
      "callerIdName": {
        "type": "string",
        "description": "Custom name of a caller. Max number of characters is 15 (only\nalphabetical symbols, numbers and commas are supported)\n"
      },
      "email": {
        "type": "string",
        "format": "email",
        "description": "Site extension contact email"
      },
      "businessAddress": {
        "$ref": "#/components/schemas/ContactBusinessAddressInfo"
      },
      "regionalSettings": {
        "$ref": "#/components/schemas/RegionalSettings"
      },
      "operator": {
        "$ref": "#/components/schemas/OperatorInfo"
      },
      "code": {
        "type": "string",
        "description": "Site code value. Returned only if specified\n"
      }
    },
    "name": "SiteInfo"
  },
  {
    "type": "object",
    "properties": {
      "uri": {
        "type": "string",
        "format": "uri",
        "description": "Link to a sites resource"
      },
      "records": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/SiteInfo"
        }
      }
    },
    "name": "SitesList"
  },
  {
    "type": "object",
    "properties": {
      "name": {
        "type": "string",
        "description": "Extension user first name"
      },
      "extensionNumber": {
        "type": "string",
        "description": "Extension number"
      },
      "callerIdName": {
        "type": "string",
        "description": "Custom name of a caller. Max number of characters is 15 (only\nalphabetical symbols, numbers and commas are supported)\n"
      },
      "email": {
        "type": "string",
        "format": "email",
        "description": "Extension user email"
      },
      "businessAddress": {
        "$ref": "#/components/schemas/ContactBusinessAddressInfo"
      },
      "regionalSettings": {
        "$ref": "#/components/schemas/RegionalSettings"
      },
      "operator": {
        "$ref": "#/components/schemas/SiteOperatorReference"
      },
      "code": {
        "type": "string",
        "description": "Site code value"
      }
    },
    "name": "CreateSiteRequest"
  },
  {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "Internal identifier of an operator"
      },
      "uri": {
        "type": "string",
        "format": "uri",
        "description": "Link to an operator resource"
      },
      "extensionNumber": {
        "type": "string",
        "description": "Extension number (pin)"
      },
      "name": {
        "type": "string",
        "description": "Operator extension user full name"
      }
    },
    "description": "Site Fax/SMS recipient (operator) reference. Multi-level IVR should\nbe enabled\n",
    "name": "OperatorInfo"
  },
  {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "Internal identifier of an operator extension"
      }
    },
    "description": "Site Fax/SMS recipient (operator) reference. Multi-level IVR should\nbe enabled\n",
    "name": "SiteOperatorReference"
  },
  {
    "required": [
      "name"
    ],
    "type": "object",
    "properties": {
      "name": {
        "type": "string",
        "description": "Extension user first name"
      },
      "extensionNumber": {
        "type": "string",
        "description": "Extension number"
      },
      "callerIdName": {
        "type": "string",
        "description": "Custom name of a caller. Max number of characters is 15 (only\nalphabetical symbols, numbers and commas are supported)\n"
      },
      "email": {
        "type": "string",
        "format": "email",
        "description": "Site extension contact email"
      },
      "businessAddress": {
        "$ref": "#/components/schemas/ContactBusinessAddressInfo"
      },
      "regionalSettings": {
        "$ref": "#/components/schemas/RegionalSettings"
      },
      "operator": {
        "$ref": "#/components/schemas/OperatorInfo"
      }
    },
    "name": "SiteUpdateRequest"
  },
  {
    "type": "object",
    "properties": {
      "removedExtensionIds": {
        "type": "array",
        "description": "List of removed extensions",
        "items": {
          "type": "string"
        }
      },
      "addedExtensionIds": {
        "type": "array",
        "description": "List of added extensions",
        "items": {
          "type": "string"
        }
      }
    },
    "name": "SiteMembersBulkUpdate"
  },
  {
    "type": "object",
    "properties": {
      "uri": {
        "type": "string",
        "format": "uri",
        "description": "Link to a site members list resource"
      },
      "records": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/SiteMemberInfo"
        }
      },
      "navigation": {
        "$ref": "#/components/schemas/ProvisioningNavigationInfo"
      },
      "paging": {
        "$ref": "#/components/schemas/ProvisioningPagingInfo"
      }
    },
    "name": "SiteMembersList"
  },
  {
    "type": "object",
    "properties": {
      "id": {
        "type": "integer",
        "format": "int64"
      },
      "uri": {
        "type": "string",
        "format": "uri"
      },
      "extensionNumber": {
        "type": "string"
      },
      "type": {
        "type": "string"
      },
      "name": {
        "type": "string"
      }
    },
    "name": "SiteMemberInfo"
  },
  {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "Internal identifier of an extension"
      },
      "uri": {
        "type": "string",
        "format": "uri",
        "description": "Canonical URI of an extension"
      },
      "name": {
        "type": "string",
        "description": "Name of an extension user"
      }
    },
    "description": "Extension information",
    "name": "SiteIVRActionsExtensionInfo"
  },
  {
    "type": "object",
    "properties": {
      "input": {
        "type": "string",
        "enum": [
          "Star",
          "Hash",
          "NoInput",
          "0"
        ]
      },
      "action": {
        "type": "string",
        "description": "Key handling action:\n- Repeat - repeat menu greeting, for Star and Hash only;\n- ReturnToRoot - return to root IVR menu, for Star and Hash only;\n- ReturnToPrevious - return to previous IVR menu, for Star and Hash only;\n- Connect - connect to specific extension, for NoInput and \"0\" (zero) only;\n- Disconnect - end call, for NoInput only.\n",
        "enum": [
          "Repeat",
          "ReturnToRoot",
          "ReturnToPrevious",
          "ReturnToTopLevelMenu",
          "Connect",
          "ConnectToOperator",
          "Disconnect",
          "DoNothing"
        ]
      },
      "extension": {
        "$ref": "#/components/schemas/SiteIVRActionsExtensionInfoUpdate"
      }
    },
    "description": "Keys handling settings",
    "name": "SiteIvrActionsUpdate"
  },
  {
    "type": "object",
    "properties": {
      "topMenu": {
        "$ref": "#/components/schemas/SiteIVRTopMenu"
      },
      "actions": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/SiteIvrActions"
        }
      }
    },
    "name": "SiteIVRSettings"
  },
  {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "Internal identifier of an extension"
      }
    },
    "description": "Extension information",
    "name": "SiteIVRActionsExtensionInfoUpdate"
  },
  {
    "type": "object",
    "properties": {
      "input": {
        "type": "string",
        "enum": [
          "Star",
          "Hash",
          "NoInput"
        ]
      },
      "action": {
        "type": "string",
        "description": "Key handling action:\n- Repeat - repeat menu greeting, for Star and Hash only;\n- ReturnToRoot - return to root IVR menu, for Star and Hash only;\n- ReturnToPrevious - return to previous IVR menu, for Star and Hash only;\n- Connect - connect to specific extension, for NoInput only;\n- Disconnect - end call, for NoInput only.\n",
        "enum": [
          "Repeat",
          "ReturnToRoot",
          "ReturnToPrevious",
          "ReturnToTopLevelMenu",
          "Connect",
          "Disconnect",
          "DoNothing"
        ]
      },
      "extension": {
        "$ref": "#/components/schemas/SiteIVRActionsExtensionInfo"
      }
    },
    "description": "Keys handling settings",
    "name": "SiteIvrActions"
  },
  {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "Internal identifier of an IVR menu extension\n"
      }
    },
    "description": "Top IVR Menu extension",
    "name": "SiteIVRTopMenuUpdate"
  },
  {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "Internal identifier of an IVR menu extension"
      },
      "uri": {
        "type": "string",
        "format": "uri",
        "description": "Link to an IVR menu extension resource"
      },
      "name": {
        "type": "string",
        "description": "Full name of an IVR menu extension user"
      }
    },
    "description": "Top IVR Menu extension. Mandatory for MultiLevel mode\n",
    "name": "SiteIVRTopMenu"
  },
  {
    "type": "object",
    "properties": {
      "topMenu": {
        "$ref": "#/components/schemas/SiteIVRTopMenuUpdate"
      },
      "actions": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/SiteIvrActionsUpdate"
        }
      }
    },
    "name": "SiteIVRSettingsUpdate"
  },
  {
    "type": "object",
    "properties": {
      "retentionPeriod": {
        "maximum": 90,
        "minimum": 7,
        "type": "integer",
        "format": "int32",
        "description": "Retention policy setting, specifying how long to keep messages; the supported value range is 7-90 days"
      }
    },
    "name": "MessageStoreConfiguration"
  },
  {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "Internal identifier of a call recording"
      },
      "contentUri": {
        "type": "string",
        "format": "uri",
        "description": "Link to a call recording binary content. Has to be retrieved with proper authorization\n(access token must be passed via `Authorization` header or query parameter)\n"
      },
      "contentType": {
        "type": "string",
        "description": "Call recording file format. Supported format is audio/x-wav"
      },
      "duration": {
        "type": "integer",
        "format": "int32",
        "description": "Recorded call duration"
      }
    },
    "name": "GetCallRecordingResponse"
  },
  {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "Internal identifier of an answering rule"
      }
    },
    "name": "AnsweringRuleQueryRequest"
  },
  {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "Internal identifier of a greeting language"
      },
      "uri": {
        "type": "string",
        "format": "uri",
        "description": "Link to a greeting language"
      },
      "name": {
        "type": "string",
        "description": "Name of a greeting language"
      },
      "localeCode": {
        "type": "string",
        "description": "Locale code of a greeting language"
      }
    },
    "description": "Information on a greeting language. Supported for types 'StopRecording', 'StartRecording', 'AutomaticRecording'",
    "name": "CustomCompanyGreetingLanguageInfo"
  },
  {
    "type": "object",
    "properties": {
      "uri": {
        "type": "string",
        "format": "uri",
        "description": "Link to an extension custom greeting"
      },
      "id": {
        "type": "string",
        "description": "Internal identifier of an answering rule"
      },
      "type": {
        "type": "string",
        "description": "Type of a company greeting",
        "enum": [
          "Company",
          "StartRecording",
          "StopRecording",
          "AutomaticRecording",
          "TemplateGreeting"
        ]
      },
      "contentType": {
        "type": "string",
        "description": "Content media type",
        "enum": [
          "audio/mpeg",
          "audio/wav"
        ]
      },
      "contentUri": {
        "type": "string",
        "format": "uri",
        "description": "Link to a greeting content (audio file)"
      },
      "answeringRule": {
        "$ref": "#/components/schemas/CustomGreetingAnsweringRuleInfo"
      },
      "language": {
        "$ref": "#/components/schemas/CustomCompanyGreetingLanguageInfo"
      }
    },
    "name": "CustomCompanyGreetingInfo"
  },
  {
    "type": "object",
    "properties": {
      "uri": {
        "type": "string",
        "format": "uri",
        "description": "Canonical URI of an answering rule"
      },
      "id": {
        "type": "string",
        "description": "Internal identifier of an answering rule"
      }
    },
    "description": "Information on an answering rule that the greeting is applied to",
    "name": "CustomGreetingAnsweringRuleInfo"
  },
  {
    "type": "object",
    "properties": {
      "uri": {
        "type": "string",
        "format": "uri"
      },
      "records": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/RoleResource"
        }
      },
      "paging": {
        "$ref": "#/components/schemas/EnumeratedPagingModel"
      },
      "navigation": {
        "$ref": "#/components/schemas/PageNavigationModel"
      }
    },
    "name": "RolesCollectionResource"
  },
  {
    "type": "object",
    "properties": {
      "uri": {
        "type": "string",
        "format": "uri"
      },
      "id": {
        "type": "string"
      },
      "siteCompatible": {
        "type": "string",
        "description": "Site compatibility flag set for permission",
        "enum": [
          "Compatible",
          "Incompatible",
          "Independent"
        ]
      },
      "readOnly": {
        "type": "boolean",
        "description": "Specifies if the permission is editable on UI (if set to 'True') or not (if set to 'False')"
      },
      "assignable": {
        "type": "boolean",
        "description": "Specifies if the permission can be assigned by the account administrator"
      }
    },
    "name": "PermissionIdResource"
  },
  {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "Internal identifier of a user role to be set as default"
      }
    },
    "name": "DefaultUserRoleRequest"
  },
  {
    "type": "object",
    "properties": {
      "siteRestricted": {
        "type": "boolean",
        "example": true
      },
      "siteCompatible": {
        "type": "boolean"
      },
      "uri": {
        "type": "string",
        "format": "uri"
      },
      "addedExtensionIds": {
        "type": "array",
        "items": {
          "type": "string"
        }
      },
      "removedExtensionIds": {
        "type": "array",
        "items": {
          "type": "string"
        }
      }
    },
    "name": "BulkRoleAssignResource"
  },
  {
    "type": "object",
    "properties": {
      "enabled": {
        "type": "boolean",
        "description": "Specifies if a permission is enabled or not"
      }
    },
    "description": "Admin permission",
    "name": "PermissionInfoAdmin"
  },
  {
    "type": "object",
    "properties": {
      "uri": {
        "type": "string",
        "format": "uri"
      }
    },
    "name": "ProfileImageInfoURI"
  },
  {
    "type": "object",
    "properties": {
      "admin": {
        "$ref": "#/components/schemas/PermissionInfoAdmin"
      },
      "internationalCalling": {
        "$ref": "#/components/schemas/PermissionInfoInt"
      }
    },
    "description": "Extension permissions, corresponding to the Service Web permissions\n'Admin' and 'InternationalCalling'\n",
    "name": "ExtensionPermissions"
  },
  {
    "type": "object",
    "properties": {
      "firstName": {
        "type": "string",
        "description": "For User extension type only. Extension user first name\n"
      },
      "lastName": {
        "type": "string",
        "description": "For User extension type only. Extension user last name\n"
      },
      "company": {
        "type": "string",
        "description": "Extension user company name"
      },
      "jobTitle": {
        "type": "string"
      },
      "email": {
        "type": "string",
        "format": "email",
        "description": "Email of extension user"
      },
      "businessPhone": {
        "type": "string",
        "description": "Extension user contact phone number in\n[E.164](https://www.itu.int/rec/T-REC-E.164-201011-I)\nformat\n"
      },
      "mobilePhone": {
        "type": "string",
        "description": "Extension user mobile (**non** Toll Free) phone number in\n[E.164](https://www.itu.int/rec/T-REC-E.164-201011-I)\n(with '+' sign) format\n"
      },
      "businessAddress": {
        "$ref": "#/components/schemas/ContactBusinessAddressInfo"
      },
      "emailAsLoginName": {
        "type": "boolean",
        "description": "If 'True' then contact email is enabled as login name for\nthis user. Please note that email should be unique in this case.\nThe default value is 'False'\n"
      },
      "pronouncedName": {
        "$ref": "#/components/schemas/PronouncedNameInfo"
      },
      "department": {
        "type": "string",
        "description": "Extension user department, if any"
      }
    },
    "description": "Contact Information",
    "name": "ContactInfoCreationRequest"
  },
  {
    "type": "object",
    "properties": {
      "slaGoal": {
        "type": "integer",
        "format": "int32",
        "description": "Target percentage of calls that must be answered by agents\nwithin the service level time threshold\n"
      },
      "slaThresholdSeconds": {
        "type": "integer",
        "format": "int32",
        "description": "Period of time in seconds that is considered to be an acceptable\nservice level\n"
      },
      "includeAbandonedCalls": {
        "type": "boolean",
        "description": "If 'True' abandoned calls (hanged up prior to being served)\nare included into service level calculation\n"
      },
      "abandonedThresholdSeconds": {
        "type": "integer",
        "format": "int32",
        "description": "Period of time in seconds specifying abandoned calls duration\n- calls that are shorter will not be included into the calculation of\nservice level.; zero value means that abandoned calls of any duration\nwill be included into calculation\n"
      }
    },
    "description": "For Call Queue extension type only. Please note that legacy\n'Department' extension type corresponds to 'Call Queue' extensions\nin modern RingCentral product terminology\n",
    "name": "CallQueueExtensionInfo"
  },
  {
    "required": [
      "uri"
    ],
    "type": "object",
    "properties": {
      "uri": {
        "type": "string",
        "format": "uri",
        "description": "Link to a profile image. If an image is not uploaded for an\nextension, only uri is returned\n"
      },
      "etag": {
        "type": "string",
        "description": "Identifier of an image"
      },
      "lastModified": {
        "type": "string",
        "description": "Datetime when an image was last updated, ISO 8601 format,\nfor example 2016-03-10T18:07:52.534Z\n",
        "format": "date-time"
      },
      "contentType": {
        "type": "string",
        "description": "The type of an image"
      },
      "scales": {
        "type": "array",
        "description": "List of URIs to profile images in different dimensions\n",
        "items": {
          "$ref": "#/components/schemas/ProfileImageInfoURI"
        }
      }
    },
    "description": "Information on profile image",
    "name": "ProfileImageInfo"
  },
  {
    "type": "object",
    "properties": {
      "enabled": {
        "type": "boolean",
        "description": "Specifies if a permission is enabled or not"
      }
    },
    "description": "International Calling permission",
    "name": "PermissionInfoInt"
  },
  {
    "type": "object",
    "properties": {
      "id": {
        "type": "integer",
        "description": "Internal identifier of an extension",
        "format": "int64"
      },
      "uri": {
        "type": "string",
        "format": "uri",
        "description": "Canonical URI of an extension"
      },
      "contact": {
        "$ref": "#/components/schemas/ContactInfo"
      },
      "customFields": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/CustomFieldInfo"
        }
      },
      "extensionNumber": {
        "type": "string",
        "description": "Extension number"
      },
      "name": {
        "type": "string",
        "description": "Extension name. For user extension types the value is a combination\nof the specified first name and last name\n"
      },
      "partnerId": {
        "type": "string",
        "description": "For Partner Applications Internal identifier of an extension\ncreated by partner. The RingCentral supports the mapping of accounts and\nstores the corresponding account ID/extension ID for each partner ID of\na client application. In request URIs partner IDs are accepted instead\nof regular RingCentral native IDs as path parameters using pid = XXX clause.\nThough in response URIs contain the corresponding account IDs and extension\nIDs. In all request and response bodies these values are reflected via\npartnerId attributes of account and extension\n"
      },
      "permissions": {
        "$ref": "#/components/schemas/ExtensionPermissions"
      },
      "profileImage": {
        "$ref": "#/components/schemas/ProfileImageInfo"
      },
      "references": {
        "type": "array",
        "description": "List of non-RC internal identifiers assigned to an extension\n",
        "items": {
          "$ref": "#/components/schemas/ReferenceInfo"
        }
      },
      "regionalSettings": {
        "$ref": "#/components/schemas/RegionalSettings"
      },
      "serviceFeatures": {
        "type": "array",
        "description": "Extension service features returned in response only when the\nlogged-in user requests his/her own extension info, see also Extension\nService Features\n",
        "items": {
          "$ref": "#/components/schemas/ExtensionServiceFeatureInfo"
        }
      },
      "setupWizardState": {
        "type": "string",
        "description": "Specifies extension configuration wizard state (web service\nsetup). The default value is 'NotStarted'\n",
        "enum": [
          "NotStarted",
          "Incomplete",
          "Completed"
        ]
      },
      "site": {
        "$ref": "#/components/schemas/ProvisioningSiteInfo"
      },
      "status": {
        "type": "string",
        "description": "Extension current state. If 'Unassigned' is specified, then\nextensions without ‘extensionNumber’ are returned. If not specified, then\nall extensions are returned\n",
        "enum": [
          "Enabled",
          "Disabled",
          "Frozen",
          "NotActivated",
          "Unassigned"
        ]
      },
      "statusInfo": {
        "$ref": "#/components/schemas/ExtensionStatusInfo"
      },
      "type": {
        "type": "string",
        "description": "Extension type. Please note that legacy 'Department' extension type\ncorresponds to 'Call Queue' extensions in modern RingCentral product terminology\n",
        "enum": [
          "User",
          "VirtualUser",
          "DigitalUser",
          "Department",
          "Announcement",
          "Voicemail",
          "SharedLinesGroup",
          "PagingOnly",
          "ParkLocation",
          "Limited"
        ]
      },
      "hidden": {
        "type": "boolean",
        "description": "Hides an extension from showing in company directory. Supported\nfor extensions of 'User' type only\n"
      }
    },
    "name": "ExtensionCreationResponse"
  },
  {
    "type": "object",
    "properties": {
      "enabled": {
        "type": "boolean",
        "description": "Feature status; shows feature availability for an extension"
      },
      "featureName": {
        "type": "string",
        "description": "Feature name",
        "enum": [
          "AccountFederation",
          "Archiver",
          "AutomaticCallRecordingMute",
          "AutomaticInboundCallRecording",
          "AutomaticOutboundCallRecording",
          "BlockedMessageForwarding",
          "Calendar",
          "CallerIdControl",
          "CallForwarding",
          "CallPark",
          "CallParkLocations",
          "CallSupervision",
          "CallSwitch",
          "CallQualitySurvey",
          "Conferencing",
          "ConferencingNumber",
          "ConfigureDelegates",
          "DeveloperPortal",
          "DND",
          "DynamicConference",
          "EmergencyAddressAutoUpdate",
          "EmergencyCalling",
          "EncryptionAtRest",
          "ExternalDirectoryIntegration",
          "Fax",
          "FaxReceiving",
          "FreeSoftPhoneLines",
          "HDVoice",
          "HipaaCompliance",
          "Intercom",
          "InternationalCalling",
          "InternationalSMS",
          "LinkedSoftphoneLines",
          "MMS",
          "MobileVoipEmergencyCalling",
          "OnDemandCallRecording",
          "Pager",
          "PagerReceiving",
          "Paging",
          "PasswordAuth",
          "PromoMessage",
          "Reports",
          "Presence",
          "RCTeams",
          "RingOut",
          "SalesForce",
          "SharedLines",
          "SingleExtensionUI",
          "SiteCodes",
          "SMS",
          "SMSReceiving",
          "SoftPhoneUpdate",
          "TelephonySessions",
          "UserManagement",
          "VideoConferencing",
          "VoipCalling",
          "VoipCallingOnMobile",
          "Voicemail",
          "VoicemailToText",
          "WebPhone"
        ]
      },
      "reason": {
        "type": "string",
        "description": "Reason for limitation of a particular service feature. Returned\nonly if the enabled parameter value is 'False', see Service Feature\nLimitations and Reasons. When retrieving service features for an extension,\nthe reasons for limitations, if any, are returned in response\n"
      }
    },
    "name": "ExtensionServiceFeatureInfo"
  },
  {
    "type": "object",
    "properties": {
      "contact": {
        "$ref": "#/components/schemas/ContactInfoCreationRequest"
      },
      "extensionNumber": {
        "type": "string",
        "description": "Number of extension"
      },
      "customFields": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/CustomFieldInfo"
        }
      },
      "password": {
        "type": "string",
        "description": "Password for extension. If not specified, the password\nis auto-generated\n"
      },
      "references": {
        "type": "array",
        "description": "List of non-RC internal identifiers assigned to an\nextension\n",
        "items": {
          "$ref": "#/components/schemas/ReferenceInfo"
        }
      },
      "regionalSettings": {
        "$ref": "#/components/schemas/RegionalSettings"
      },
      "partnerId": {
        "type": "string",
        "description": "Additional extension identifier, created by partner application\nand applied on client side\n"
      },
      "ivrPin": {
        "type": "string",
        "description": "IVR PIN"
      },
      "setupWizardState": {
        "type": "string",
        "description": "Specifies extension configuration wizard state (web service\nsetup).\n",
        "default": "NotStarted",
        "enum": [
          "NotStarted",
          "Incomplete",
          "Completed"
        ]
      },
      "site": {
        "$ref": "#/components/schemas/SiteInfo"
      },
      "status": {
        "type": "string",
        "description": "Extension current state",
        "enum": [
          "Enabled",
          "Disabled",
          "NotActivated",
          "Unassigned",
          "Frozen"
        ]
      },
      "statusInfo": {
        "$ref": "#/components/schemas/ExtensionStatusInfo"
      },
      "type": {
        "type": "string",
        "description": "Extension type. Please note that legacy 'Department' extension type\ncorresponds to 'Call Queue' extensions in modern RingCentral product\nterminology\n",
        "enum": [
          "User",
          "VirtualUser",
          "DigitalUser",
          "Department",
          "Announcement",
          "Voicemail",
          "SharedLinesGroup",
          "PagingOnly",
          "ParkLocation",
          "Limited"
        ]
      },
      "hidden": {
        "type": "boolean",
        "description": "Hides extension from showing in company directory. Supported\nfor extensions of 'User' type only. For unassigned extensions the value\nis set to 'True' by default. For assigned extensions the value is set\nto 'False' by default\n"
      }
    },
    "name": "ExtensionCreationRequest"
  },
  {
    "required": [
      "records"
    ],
    "type": "object",
    "properties": {
      "uri": {
        "type": "string",
        "format": "uri",
        "description": "Link to an extension list resource"
      },
      "records": {
        "type": "array",
        "description": "List of extensions with extension information",
        "items": {
          "$ref": "#/components/schemas/GetExtensionListInfoResponse"
        }
      },
      "navigation": {
        "$ref": "#/components/schemas/ProvisioningNavigationInfo"
      },
      "paging": {
        "$ref": "#/components/schemas/ProvisioningPagingInfo"
      }
    },
    "name": "GetExtensionListResponse"
  },
  {
    "type": "object",
    "properties": {
      "extensionId": {
        "type": "string",
        "description": "Internal identifier of an extension"
      },
      "eventType": {
        "type": "string",
        "description": "Type of extension info change",
        "enum": [
          "Create",
          "Update",
          "Delete"
        ]
      },
      "ownerId": {
        "type": "string",
        "description": "Internal identifier of a subscription owner extension\n"
      }
    },
    "description": "Notification payload body",
    "name": "ExtensionListEventBody"
  },
  {
    "type": "object",
    "properties": {
      "uuid": {
        "type": "string",
        "description": "Universally unique identifier of a notification\n"
      },
      "event": {
        "type": "string",
        "description": "Event filter URI"
      },
      "timestamp": {
        "type": "string",
        "description": "Datetime of sending a notification in\n[ISO 8601](https://en.wikipedia.org/wiki/ISO_8601)\nformat including timezone, for example *2016-03-10T18:07:52.534Z*\n"
      },
      "subscriptionId": {
        "type": "string",
        "description": "Internal identifier of a subscription"
      },
      "body": {
        "$ref": "#/components/schemas/ExtensionListEventBody"
      }
    },
    "name": "ExtensionListEvent"
  },
  {
    "type": "object",
    "properties": {
      "firstName": {
        "type": "string",
        "description": "For User extension type only. Extension user first name\n"
      },
      "lastName": {
        "type": "string",
        "description": "For User extension type only. Extension user last name\n"
      },
      "name": {
        "type": "string",
        "description": "Extension user name (first name and last name)\n"
      },
      "company": {
        "type": "string",
        "description": "Extension user company name"
      },
      "jobTitle": {
        "type": "string"
      },
      "email": {
        "type": "string",
        "format": "email",
        "description": "Contact email of extension user"
      },
      "businessPhone": {
        "type": "string",
        "description": "Extension user contact phone number in\n[E.164](https://www.itu.int/rec/T-REC-E.164-201011-I)\n(with '+' sign) format\n"
      },
      "mobilePhone": {
        "type": "string",
        "description": "Extension user mobile (**non** Toll Free) phone number in\n[E.164](https://www.itu.int/rec/T-REC-E.164-201011-I)\n(with '+' sign) format\n"
      },
      "businessAddress": {
        "$ref": "#/components/schemas/ContactBusinessAddressInfo"
      },
      "emailAsLoginName": {
        "type": "boolean",
        "description": "If 'True' then contact email is enabled as login name for this\nuser. Please note that email should be unique in this case.\n",
        "default": false
      },
      "pronouncedName": {
        "$ref": "#/components/schemas/PronouncedNameInfo"
      },
      "department": {
        "type": "string",
        "description": "Extension user department, if any\n"
      }
    },
    "description": "Contact detailed information",
    "name": "ContactInfo"
  },
  {
    "type": "object",
    "properties": {
      "id": {
        "type": "integer",
        "description": "Internal identifier of an extension",
        "format": "int64"
      },
      "uri": {
        "type": "string",
        "format": "uri",
        "description": "Canonical URI of an extension"
      },
      "contact": {
        "$ref": "#/components/schemas/ContactInfo"
      },
      "extensionNumber": {
        "type": "string",
        "description": "Number of an extension"
      },
      "name": {
        "type": "string",
        "description": "Extension name. For user extension types the value is a combination\nof the specified first name and last name\n"
      },
      "permissions": {
        "$ref": "#/components/schemas/ExtensionPermissions"
      },
      "profileImage": {
        "$ref": "#/components/schemas/ProfileImageInfo"
      },
      "status": {
        "type": "string",
        "description": "Extension current state. If 'Unassigned' is specified, then\nextensions without ‘extensionNumber’ are returned. If not specified,\nthen all extensions are returned\n",
        "enum": [
          "Enabled",
          "Disabled",
          "Frozen",
          "NotActivated",
          "Unassigned"
        ]
      },
      "type": {
        "type": "string",
        "description": "Extension type. Please note that legacy 'Department' extension type\ncorresponds to 'Call Queue' extensions in modern RingCentral product\nterminology\n",
        "enum": [
          "User",
          "FaxUser",
          "FlexibleUser",
          "VirtualUser",
          "DigitalUser",
          "Department",
          "Announcement",
          "Voicemail",
          "SharedLinesGroup",
          "PagingOnly",
          "IvrMenu",
          "ApplicationExtension",
          "ParkLocation",
          "Bot",
          "Room",
          "Limited",
          "Site",
          "ProxyAdmin",
          "DelegatedLinesGroup",
          "GroupCallPickup"
        ]
      },
      "subType": {
        "type": "string",
        "description": "Extension sub-type, if applicable. For any unsupported sub-types the\n'Unknown' value will be returned\"\n",
        "enum": [
          "VideoPro",
          "VideoProPlus",
          "DigitalSignage",
          "Unknown"
        ]
      },
      "callQueueInfo": {
        "$ref": "#/components/schemas/CallQueueExtensionInfo"
      },
      "hidden": {
        "type": "boolean",
        "description": "Hides extension from showing in company directory.\nSupported for extensions of User type only\n"
      },
      "site": {
        "$ref": "#/components/schemas/ProvisioningSiteInfo"
      }
    },
    "name": "GetExtensionListInfoResponse"
  },
  {
    "type": "object",
    "properties": {
      "uuid": {
        "type": "string",
        "description": "Universally unique identifier of a notification"
      },
      "event": {
        "type": "string",
        "description": "Event filter URI"
      },
      "timestamp": {
        "type": "string",
        "description": "Datetime of sending a notification in\n[ISO 8601](shttps://en.wikipedia.org/wiki/ISO_8601)\nformat including timezone, for example *2016-03-10T18:07:52.534Z*\n"
      },
      "subscriptionId": {
        "type": "string",
        "description": "Internal identifier of a subscription"
      },
      "body": {
        "$ref": "#/components/schemas/ExtensionInfoEventBody"
      }
    },
    "name": "ExtensionInfoEvent"
  },
  {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "Internal identifier of an account"
      },
      "uri": {
        "type": "string",
        "format": "uri",
        "description": "Canonical URI of an account resource"
      }
    },
    "description": "Account information",
    "name": "GetExtensionAccountInfo"
  },
  {
    "type": "object",
    "description": "Please note that legacy 'Department' extension type corresponds to\n'Call Queue' extensions in modern RingCentral product terminology\n",
    "properties": {
      "id": {
        "type": "string",
        "format": "uri",
        "description": "Internal identifier of a department extension"
      },
      "uri": {
        "type": "string",
        "format": "uri",
        "description": "Canonical URI of an extension resource"
      },
      "extensionNumber": {
        "type": "string",
        "description": "Number of a department extension"
      }
    },
    "name": "DepartmentInfo"
  },
  {
    "type": "object",
    "properties": {
      "extensionId": {
        "type": "string",
        "description": "Internal identifier of an extension"
      },
      "eventType": {
        "type": "string",
        "description": "Type of extension info change",
        "enum": [
          "Update",
          "Delete"
        ]
      },
      "hints": {
        "type": "array",
        "description": "Returned for 'Update' event type only",
        "items": {
          "type": "string",
          "enum": [
            "AccountSettings",
            "AccountStatus",
            "AnsweringRules",
            "CompanyNumbers",
            "DialingPlan",
            "ExtensionInfo",
            "Features",
            "Limits",
            "Permissions",
            "ProfileImage",
            "VideoConfiguration"
          ]
        }
      },
      "ownerId": {
        "type": "string",
        "description": "Internal identifier of a subscription owner extension\n"
      }
    },
    "description": "Notification payload body",
    "name": "ExtensionInfoEventBody"
  },
  {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "Internal identifier of a site"
      }
    },
    "name": "SiteReference"
  },
  {
    "type": "object",
    "properties": {
      "status": {
        "type": "string",
        "enum": [
          "Disabled",
          "Enabled",
          "NotActivated",
          "Frozen"
        ]
      },
      "statusInfo": {
        "$ref": "#/components/schemas/ExtensionStatusInfo"
      },
      "reason": {
        "type": "string",
        "description": "Type of suspension"
      },
      "comment": {
        "type": "string",
        "description": "Free Form user comment"
      },
      "extensionNumber": {
        "type": "string",
        "description": "Extension number available"
      },
      "contact": {
        "$ref": "#/components/schemas/ContactInfoUpdateRequest"
      },
      "regionalSettings": {
        "$ref": "#/components/schemas/ExtensionRegionalSettingRequest"
      },
      "setupWizardState": {
        "type": "string",
        "enum": [
          "NotStarted",
          "Incomplete",
          "Completed"
        ]
      },
      "partnerId": {
        "type": "string",
        "description": "Additional extension identifier, created by partner application\nand applied on client side\n"
      },
      "ivrPin": {
        "type": "string",
        "description": "IVR PIN"
      },
      "password": {
        "type": "string",
        "description": "Password for extension"
      },
      "callQueueInfo": {
        "$ref": "#/components/schemas/CallQueueInfoRequest"
      },
      "transition": {
        "$ref": "#/components/schemas/UserTransitionInfo"
      },
      "customFields": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/CustomFieldInfo"
        }
      },
      "site": {
        "$ref": "#/components/schemas/SiteReference"
      },
      "type": {
        "type": "string",
        "description": "Extension type. Please note that legacy 'Department' extension\ntype corresponds to 'Call Queue' extensions in modern RingCentral\nproduct terminology\n",
        "enum": [
          "User",
          "FaxUser",
          "FlexibleUser",
          "VirtualUser",
          "DigitalUser",
          "Department",
          "Announcement",
          "Voicemail",
          "SharedLinesGroup",
          "PagingOnly",
          "IvrMenu",
          "ApplicationExtension",
          "ParkLocation",
          "DelegatedLinesGroup",
          "GroupCallPickup"
        ]
      },
      "subType": {
        "type": "string",
        "description": "Extension sub-type, if applicable. For any unsupported sub-types\nthe 'Unknown' value will be returned\n",
        "enum": [
          "VideoPro",
          "VideoProPlus",
          "DigitalSignage",
          "Unknown"
        ]
      },
      "references": {
        "type": "array",
        "description": "List of non-RC internal identifiers assigned to an extension\n",
        "items": {
          "$ref": "#/components/schemas/ReferenceInfo"
        }
      }
    },
    "name": "ExtensionUpdateRequest"
  },
  {
    "type": "object",
    "properties": {
      "id": {
        "type": "integer",
        "description": "Internal identifier of an extension",
        "format": "int64"
      },
      "uri": {
        "type": "string",
        "format": "uri",
        "description": "Canonical URI of an extension"
      },
      "account": {
        "$ref": "#/components/schemas/GetExtensionAccountInfo"
      },
      "contact": {
        "$ref": "#/components/schemas/ContactInfo"
      },
      "customFields": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/CustomFieldInfo"
        }
      },
      "departments": {
        "type": "array",
        "description": "Information on department extension(s), to which the requested\nextension belongs. Returned only for user extensions, members of\ndepartment, requested by single extensionId. Please note that\nlegacy 'Department' extension type corresponds to 'Call Queue'\nextensions in modern RingCentral product terminology\n",
        "items": {
          "$ref": "#/components/schemas/DepartmentInfo"
        }
      },
      "extensionNumber": {
        "type": "string",
        "description": "Number of extension"
      },
      "extensionNumbers": {
        "type": "array",
        "items": {
          "type": "string"
        }
      },
      "name": {
        "type": "string",
        "description": "Extension name. For user extension types the value is a combination\nof the specified first name and last name\n"
      },
      "partnerId": {
        "type": "string",
        "description": "For Partner Applications Internal identifier of an extension\ncreated by partner. The RingCentral supports mapping of accounts and\nstores the corresponding account ID/extension ID for each partner ID of\na client application. In request URIs partner IDs are accepted instead\nof regular RingCentral native IDs as path parameters using pid = XXX clause.\nThough in response URIs contain the corresponding account IDs and extension\nIDs. In all request and response bodies these values are reflected via\npartnerId attributes of account and extension\n"
      },
      "permissions": {
        "$ref": "#/components/schemas/ExtensionPermissions"
      },
      "profileImage": {
        "$ref": "#/components/schemas/ProfileImageInfo"
      },
      "references": {
        "type": "array",
        "description": "List of non-RC internal identifiers assigned to an extension\n",
        "items": {
          "$ref": "#/components/schemas/ReferenceInfo"
        }
      },
      "roles": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Roles"
        }
      },
      "regionalSettings": {
        "$ref": "#/components/schemas/RegionalSettings"
      },
      "serviceFeatures": {
        "type": "array",
        "description": "Extension service features is returned in response only when the\nlogged-in user requests their own extension info, see also Extension\nService Features\n",
        "items": {
          "$ref": "#/components/schemas/ExtensionServiceFeatureInfo"
        }
      },
      "setupWizardState": {
        "type": "string",
        "description": "Specifies extension configuration wizard state (web service\nsetup).\n",
        "default": "NotStarted",
        "enum": [
          "NotStarted",
          "Incomplete",
          "Completed"
        ]
      },
      "status": {
        "type": "string",
        "description": "Extension current state. If 'Unassigned' is specified, then\nextensions without ‘extensionNumber’ are returned. If not specified,\nthen all extensions are returned\n",
        "enum": [
          "Enabled",
          "Disabled",
          "Frozen",
          "NotActivated",
          "Unassigned"
        ]
      },
      "statusInfo": {
        "$ref": "#/components/schemas/ExtensionStatusInfo"
      },
      "type": {
        "type": "string",
        "description": "Extension type. Please note that legacy 'Department' extension type\ncorresponds to 'Call Queue' extensions in modern RingCentral product\nterminology\n",
        "enum": [
          "User",
          "FaxUser",
          "FlexibleUser",
          "VirtualUser",
          "DigitalUser",
          "Department",
          "Announcement",
          "Voicemail",
          "SharedLinesGroup",
          "PagingOnly",
          "IvrMenu",
          "ApplicationExtension",
          "ParkLocation",
          "Bot",
          "Room",
          "Limited",
          "Site",
          "ProxyAdmin",
          "DelegatedLinesGroup",
          "GroupCallPickup"
        ]
      },
      "subType": {
        "type": "string",
        "description": "Extension sub-type, if applicable. For any unsupported sub-types the\n'Unknown' value will be returned\"\n",
        "enum": [
          "VideoPro",
          "VideoProPlus",
          "DigitalSignage",
          "Unknown"
        ]
      },
      "callQueueInfo": {
        "$ref": "#/components/schemas/CallQueueExtensionInfo"
      },
      "hidden": {
        "type": "boolean",
        "description": "Hides extension from showing in company directory. Supported for\nextensions of User type only\n"
      },
      "site": {
        "$ref": "#/components/schemas/ProvisioningSiteInfo"
      }
    },
    "name": "GetExtensionInfoResponse"
  },
  {
    "type": "object",
    "properties": {
      "uri": {
        "type": "string",
        "format": "uri",
        "description": "Link to a role"
      },
      "id": {
        "type": "string",
        "description": "Internal identifier of a role"
      },
      "autoAssigned": {
        "type": "boolean",
        "default": false
      },
      "displayName": {
        "type": "string"
      },
      "siteCompatible": {
        "type": "boolean"
      },
      "siteRestricted": {
        "type": "boolean"
      }
    },
    "name": "Roles"
  },
  {
    "type": "object",
    "properties": {
      "uri": {
        "type": "string",
        "format": "uri",
        "description": "Canonical URI of a business-hours resource"
      },
      "schedule": {
        "$ref": "#/components/schemas/ScheduleInfoUserBusinessHours"
      }
    },
    "example": {
      "uri": "https://restapi/v1.0/account/401800045008/extension/401800045008/business-hours",
      "schedule": {
        "weeklyRanges": {
          "wednesday": [
            {
              "from": "09:00",
              "to": "18:00"
            }
          ],
          "friday": [
            {
              "from": "09:00",
              "to": "18:00"
            }
          ],
          "tuesday": [
            {
              "from": "09:00",
              "to": "18:00"
            }
          ],
          "monday": [
            {
              "from": "09:00",
              "to": "18:00"
            }
          ],
          "thursday": [
            {
              "from": "09:00",
              "to": "18:00"
            }
          ]
        }
      }
    },
    "name": "GetUserBusinessHoursResponse"
  },
  {
    "type": "object",
    "properties": {
      "weeklyRanges": {
        "$ref": "#/components/schemas/WeeklyScheduleInfo"
      }
    },
    "description": "Schedule when an answering rule is applied",
    "name": "UserBusinessHoursScheduleInfo"
  },
  {
    "required": [
      "schedule"
    ],
    "type": "object",
    "properties": {
      "schedule": {
        "$ref": "#/components/schemas/UserBusinessHoursScheduleInfo"
      }
    },
    "name": "UserBusinessHoursUpdateRequest"
  },
  {
    "type": "object",
    "properties": {
      "weeklyRanges": {
        "$ref": "#/components/schemas/WeeklyScheduleInfo"
      }
    },
    "description": "Schedule when an answering rule is applied",
    "name": "ScheduleInfoUserBusinessHours"
  },
  {
    "type": "object",
    "properties": {
      "uri": {
        "type": "string",
        "format": "uri",
        "description": "Canonical URI of a business-hours resource"
      },
      "schedule": {
        "$ref": "#/components/schemas/UserBusinessHoursScheduleInfo"
      }
    },
    "name": "UserBusinessHoursUpdateResponse"
  },
  {
    "required": [
      "navigation",
      "paging",
      "records"
    ],
    "type": "object",
    "properties": {
      "uri": {
        "type": "string",
        "format": "uri",
        "description": "Link to a list of extension devices"
      },
      "records": {
        "type": "array",
        "description": "List of extension devices",
        "items": {
          "$ref": "#/components/schemas/DeviceResource"
        }
      },
      "navigation": {
        "$ref": "#/components/schemas/PageNavigationModel"
      },
      "paging": {
        "$ref": "#/components/schemas/EnumeratedPagingModel"
      }
    },
    "name": "GetExtensionDevicesResponse"
  },
  {
    "type": "object",
    "properties": {
      "records": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/FavoriteContactResource"
        }
      }
    },
    "name": "FavoriteCollection"
  },
  {
    "type": "object",
    "properties": {
      "uuid": {
        "type": "string",
        "description": "Universally unique identifier of a notification"
      },
      "event": {
        "type": "string",
        "description": "Event filter URI"
      },
      "timestamp": {
        "format": "date-time",
        "type": "string",
        "description": "Datetime of sending a notification in\n[ISO 8601](https://en.wikipedia.org/wiki/ISO_8601)\nformat including timezone, for example *2016-03-10T18:07:52.534Z*\n"
      },
      "subscriptionId": {
        "type": "string",
        "description": "Internal identifier of a subscription"
      },
      "body": {
        "$ref": "#/components/schemas/ExtensionFavoritesEventBody"
      }
    },
    "name": "ExtensionFavoritesEvent"
  },
  {
    "type": "object",
    "properties": {
      "extensionId": {
        "type": "string",
        "description": "Internal identifier of an extension"
      },
      "ownerId": {
        "type": "string",
        "description": "Internal identifier of a subscription owner extension"
      }
    },
    "description": "Notification payload body",
    "name": "ExtensionFavoritesEventBody"
  },
  {
    "type": "object",
    "properties": {
      "uri": {
        "type": "string",
        "format": "uri"
      },
      "records": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/FavoriteContactResource"
        }
      }
    },
    "name": "FavoriteContactList"
  },
  {
    "type": "object",
    "properties": {
      "id": {
        "type": "integer",
        "format": "int64"
      },
      "extensionId": {
        "type": "string"
      },
      "accountId": {
        "type": "string"
      },
      "contactId": {
        "type": "string"
      }
    },
    "name": "FavoriteContactResource"
  },
  {
    "type": "object",
    "properties": {
      "provider": {
        "type": "string",
        "description": "Video provider of the user",
        "enum": [
          "RCMeetings",
          "RCVideo",
          "None"
        ]
      },
      "userLicenseType": {
        "type": "string",
        "description": "Specifies if the user is 'paid' (has meeting license) or 'free' (w/o meeting license)\n",
        "enum": [
          "Paid",
          "Free"
        ]
      }
    },
    "name": "UserVideoConfiguration"
  },
  {
    "type": "object",
    "properties": {
      "extensionId": {
        "type": "string",
        "description": "Internal identifier of an extension"
      },
      "ownerId": {
        "type": "string",
        "description": "Internal identifier of a subscription owner extension"
      }
    },
    "description": "Notification payload body",
    "name": "ExtensionGrantListEventBody"
  },
  {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "Internal identifier of an extension"
      },
      "uri": {
        "type": "string",
        "format": "uri",
        "description": "Canonical URI of an extension"
      },
      "extensionNumber": {
        "type": "string",
        "description": "Extension short number (usually 3 or 4 digits)"
      },
      "name": {
        "type": "string",
        "description": "Name of extension"
      },
      "type": {
        "type": "string",
        "description": "Extension type. Please note that legacy 'Department'\nextension type corresponds to 'Call Queue' extensions in modern RingCentral\nproduct terminology\n",
        "enum": [
          "User",
          "Fax User",
          "VirtualUser",
          "DigitalUser",
          "Department",
          "Announcement",
          "Voicemail",
          "SharedLinesGroup",
          "PagingOnly",
          "IvrMenu",
          "ApplicationExtension",
          "ParkLocation"
        ]
      }
    },
    "description": "Extension information",
    "name": "ExtensionInfoGrants"
  },
  {
    "type": "object",
    "properties": {
      "uuid": {
        "type": "string",
        "description": "Universally unique identifier of a notification"
      },
      "event": {
        "type": "string",
        "description": "Event filter URI"
      },
      "timestamp": {
        "type": "string",
        "description": "Datetime of sending a notification in\n[ISO 8601](https://en.wikipedia.org/wiki/ISO_8601)\nformat including timezone, for example *2016-03-10T18:07:52.534Z*\n"
      },
      "subscriptionId": {
        "type": "string",
        "description": "Internal identifier of a subscription"
      },
      "body": {
        "$ref": "#/components/schemas/ExtensionGrantListEventBody"
      }
    },
    "name": "ExtensionGrantListEvent"
  },
  {
    "type": "object",
    "properties": {
      "uri": {
        "type": "string",
        "format": "uri",
        "description": "Canonical URI of a grant"
      },
      "extension": {
        "$ref": "#/components/schemas/ExtensionInfoGrants"
      },
      "callPickup": {
        "type": "boolean",
        "description": "Specifies if picking up of other extensions' calls is allowed\nfor the extension. If 'Presence' feature is disabled for the given extension,\nthe flag is not returned\n"
      },
      "callMonitoring": {
        "type": "boolean",
        "description": "Specifies if monitoring of other extensions' calls is allowed\nfor the extension. If 'CallMonitoring' feature is disabled for the given\nextension, the flag is not returned\n"
      },
      "callOnBehalfOf": {
        "type": "boolean",
        "description": "Specifies whether the current extension is able to make or\nreceive calls on behalf of the user referenced in extension object\n"
      },
      "callDelegation": {
        "type": "boolean",
        "description": "Specifies whether the current extension can delegate a call\nto the user referenced in extension object\n"
      },
      "groupPaging": {
        "type": "boolean",
        "description": "Specifies whether the current extension is allowed to call\nPaging Only group referenced to in extension object\n"
      },
      "callQueueSetup": {
        "type": "boolean",
        "description": "Specifies whether the current extension is assigned as a Full-Access\nmanager in the call queue referenced in extension object\n"
      },
      "callQueueMembersSetup": {
        "type": "boolean",
        "description": "Specifies whether the current extension is assigned as a Members-Only\nmanager in the call queue referenced in extension object\n"
      },
      "callQueueMessages": {
        "type": "boolean",
        "description": "Specifies whether the current extension is assigned as a Messages Manager\nin the queue referenced in extension object\n"
      }
    },
    "name": "GrantInfo"
  },
  {
    "required": [
      "navigation",
      "paging",
      "records"
    ],
    "type": "object",
    "properties": {
      "uri": {
        "type": "string",
        "format": "uri",
        "description": "Link to the list of extension grants"
      },
      "records": {
        "type": "array",
        "description": "List of extension grants with details",
        "items": {
          "$ref": "#/components/schemas/GrantInfo"
        }
      },
      "navigation": {
        "$ref": "#/components/schemas/ProvisioningNavigationInfo"
      },
      "paging": {
        "$ref": "#/components/schemas/ProvisioningPagingInfo"
      }
    },
    "name": "GetExtensionGrantListResponse"
  },
  {
    "type": "object",
    "properties": {
      "phoneNumber": {
        "type": "string",
        "description": "Dial-in phone number to connect to a conference"
      },
      "default": {
        "type": "boolean",
        "description": "The value should be 'True' if the number is default for the conference. Default\nconference number is a domestic number that can be set by user (otherwise\nit is set by the system). Only one default number per country is allowed\n"
      }
    },
    "name": "ConferencePhoneNumberInfo"
  },
  {
    "type": "object",
    "properties": {
      "country": {
        "$ref": "#/components/schemas/CountryInfoShortModel"
      },
      "default": {
        "type": "boolean",
        "description": "The value should be 'True' if the number is default for the conference. Default\nconference number is a domestic number that can be set by user (otherwise\nit is set by the system). Only one default number per country is allowed\n"
      },
      "hasGreeting": {
        "type": "boolean",
        "description": "The value should be 'True' if any greeting message is played on this number\n"
      },
      "location": {
        "type": "string",
        "description": "Location (city, region, state) of a conference phone number\n"
      },
      "phoneNumber": {
        "type": "string",
        "description": "Dial-in phone number to connect to a conference"
      },
      "premium": {
        "type": "boolean",
        "description": "Indicates if the number is 'premium' (account phone number\nwith the `ConferencingNumber` usageType)\n"
      }
    },
    "name": "PhoneNumberInfoConferencing"
  },
  {
    "type": "object",
    "properties": {
      "uri": {
        "type": "string",
        "format": "uri",
        "description": "Canonical URI of a conferencing"
      },
      "allowJoinBeforeHost": {
        "type": "boolean",
        "description": "Determines if host user allows conference participants to join\nbefore the host\n"
      },
      "hostCode": {
        "type": "string",
        "description": "Access code for a host user"
      },
      "mode": {
        "type": "string",
        "description": "Internal parameter specifying a conferencing engine\n"
      },
      "participantCode": {
        "type": "string",
        "description": "Access code for any participant"
      },
      "phoneNumber": {
        "type": "string",
        "description": "Primary conference phone number for user's home country returned\nin [E.164](https://www.itu.int/rec/T-REC-E.164-201011-I) format\n"
      },
      "tapToJoinUri": {
        "type": "string",
        "format": "uri",
        "description": "Short URL leading to the service web page Tap to Join for audio\nconference bridge\n"
      },
      "phoneNumbers": {
        "type": "array",
        "description": "List of multiple dial-in phone numbers to connect to audio\nconference service, relevant for the user's brand. Each number is given with\nthe country and location information, in order to let the user choose\nless expensive way to connect to a conference. The first number in\nthe list is a primary conference number, that is default and domestic\n",
        "items": {
          "$ref": "#/components/schemas/PhoneNumberInfoConferencing"
        }
      }
    },
    "name": "GetConferencingInfoResponse"
  },
  {
    "type": "object",
    "properties": {
      "phoneNumbers": {
        "type": "array",
        "description": "Multiple dial-in phone numbers to connect to audio conference\nservice, relevant for user's brand. Each number is given with the country\nand location information, in order to let the user choose the less expensive\nway to connect to a conference. The first number in the list is the primary\nconference number, that is default and domestic\n",
        "items": {
          "$ref": "#/components/schemas/ConferencePhoneNumberInfo"
        }
      },
      "allowJoinBeforeHost": {
        "type": "boolean",
        "description": "Determines if host user allows conference participants to join before the host"
      }
    },
    "name": "UpdateConferencingInfoRequest"
  },
  {
    "type": "object",
    "properties": {
      "records": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/ExtensionCallQueuePresence"
        }
      }
    },
    "name": "ExtensionCallQueuePresenceList"
  },
  {
    "type": "object",
    "description": "Call queue information",
    "properties": {
      "id": {
        "type": "string",
        "description": "Internal identifier of a call queue"
      }
    },
    "name": "CallQueueId"
  },
  {
    "type": "object",
    "description": "Call queue information",
    "properties": {
      "id": {
        "type": "string",
        "description": "Internal identifier of a call queue"
      },
      "name": {
        "type": "string",
        "description": "Name of a call queue"
      },
      "extensionNumber": {
        "type": "string",
        "description": "Extension number of a call queue"
      },
      "editableMemberStatus": {
        "type": "boolean",
        "description": "Flag allow members to change their queue status"
      }
    },
    "name": "PresenceCallQueueInfo"
  },
  {
    "type": "object",
    "properties": {
      "records": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/ExtensionCallQueueUpdatePresence"
        }
      }
    },
    "name": "ExtensionCallQueueUpdatePresenceList"
  },
  {
    "type": "object",
    "properties": {
      "callQueue": {
        "$ref": "#/components/schemas/PresenceCallQueueInfo"
      },
      "acceptCalls": {
        "type": "boolean",
        "description": "Call queue agent availability for calls of this queue"
      }
    },
    "name": "ExtensionCallQueuePresence"
  },
  {
    "type": "object",
    "properties": {
      "callQueue": {
        "$ref": "#/components/schemas/CallQueueId"
      },
      "acceptCalls": {
        "type": "boolean",
        "description": "Call queue agent availability for calls of this queue"
      }
    },
    "name": "ExtensionCallQueueUpdatePresence"
  },
  {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "Internal identifier of a conversation"
      },
      "uri": {
        "type": "string",
        "format": "uri",
        "description": "Deprecated. Link to a conversation resource"
      }
    },
    "description": "SMS and Pager only. Information about a conversation the message belongs to",
    "name": "ConversationInfo"
  },
  {
    "type": "object",
    "properties": {
      "extensionNumber": {
        "type": "string",
        "description": "Extension short number (usually 3 or 4 digits). This property\nis filled when parties communicate by means of short internal numbers,\nfor example when calling to other extension or sending/receiving Company\nPager message\n"
      },
      "extensionId": {
        "type": "string",
        "description": "Internal identifier of an extension"
      },
      "location": {
        "type": "string",
        "description": "Contains party location (city, state) if one can be determined\nfrom phoneNumber. This property is filled only when phoneNumber is not\nempty and server can calculate location information from it (for example,\nthis information is unavailable for US toll-free numbers)\n"
      },
      "name": {
        "type": "string",
        "description": "Symbolic name associated with a party. If the phone does not\nbelong to the known extension, only the location is returned, the name\nis not determined then\n"
      },
      "phoneNumber": {
        "type": "string",
        "description": "Phone number of a party. Usually it is a plain number including\ncountry and area code like 18661234567. But sometimes it could be returned\nfrom database with some formatting applied, for example (866)123-4567.\nThis property is filled in all cases where parties communicate by means\nof global phone numbers, for example when calling to direct numbers or\nsending/receiving SMS\n"
      }
    },
    "description": "Sender information",
    "name": "MessageStoreCallerInfoResponseFrom"
  },
  {
    "required": [
      "records",
      "syncInfo"
    ],
    "type": "object",
    "properties": {
      "uri": {
        "type": "string",
        "format": "uri",
        "description": "Link to the message sync resource"
      },
      "records": {
        "type": "array",
        "description": "List of message records with synchronization information",
        "items": {
          "$ref": "#/components/schemas/GetMessageInfoResponse"
        }
      },
      "syncInfo": {
        "$ref": "#/components/schemas/SyncInfoMessages"
      }
    },
    "name": "GetMessageSyncResponse"
  },
  {
    "type": "object",
    "properties": {
      "id": {
        "type": "integer",
        "format": "int64",
        "description": "Internal identifier of a message attachment"
      },
      "uri": {
        "type": "string",
        "format": "uri",
        "description": "Canonical URI of a message attachment"
      },
      "type": {
        "type": "string",
        "description": "Type of message attachment",
        "enum": [
          "AudioRecording",
          "AudioTranscription",
          "Text",
          "SourceDocument",
          "RenderedDocument",
          "MmsAttachment"
        ]
      },
      "contentType": {
        "type": "string",
        "description": "MIME type for a given attachment, for instance 'audio/wav'"
      },
      "vmDuration": {
        "type": "integer",
        "format": "int32",
        "description": "Supported for `Voicemail` only. Duration of a voicemail in\nseconds\n"
      },
      "fileName": {
        "type": "string",
        "description": "Name of a file attached"
      },
      "size": {
        "type": "integer",
        "format": "int32",
        "description": "Size of attachment in bytes"
      },
      "height": {
        "type": "integer",
        "format": "int32",
        "description": "Attachment height in pixels if available"
      },
      "width": {
        "type": "integer",
        "format": "int32",
        "description": "Attachment width in pixels if available"
      }
    },
    "name": "MessageAttachmentInfo"
  },
  {
    "type": "object",
    "properties": {
      "syncType": {
        "type": "string",
        "enum": [
          "FSync",
          "ISync"
        ],
        "description": "Type of message synchronization request:\n  - FSync -- full sync\n  - ISync -- incremental sync\n"
      },
      "syncToken": {
        "type": "string",
        "description": "Synchronization token"
      },
      "syncTime": {
        "type": "string",
        "description": "Last synchronization datetime in ISO 8601 format including\ntimezone, for example 2016-03-10T18:07:52.534Z\n",
        "format": "date-time"
      },
      "olderRecordsExist": {
        "type": "boolean",
        "default": false
      }
    },
    "description": "Sync type, token and time",
    "name": "SyncInfoMessages"
  },
  {
    "type": "object",
    "properties": {
      "extensionNumber": {
        "type": "string",
        "description": "Extension short number (usually 3 or 4 digits). This property\nis filled when parties communicate by means of short internal numbers,\nfor example when calling to other extension or sending/receiving Company\nPager messages\n"
      },
      "extensionId": {
        "type": "string"
      },
      "location": {
        "type": "string",
        "description": "Contains party location (city, state) if one can be determined\nfrom a phone number. This property is filled only when `phoneNumber` is not\nempty and a server can calculate location information from it (for example,\nthis information is unavailable for US toll-free numbers)\n"
      },
      "target": {
        "type": "boolean",
        "description": "The 'True' value specifies that message is sent exactly to this recipient.\nReturned in the `to` field for group MMS. Useful if one extension has several\nphone numbers'\n"
      },
      "messageStatus": {
        "type": "string",
        "description": "Message status. Different message types may have different\nallowed status values. For outbound faxes the aggregated message status\nis returned. If, for outbound message, a status for at least one recipient is 'Queued', then\nthe 'Queued' value is returned. If a status for at least one recipient is\n'SendingFailed', then the 'SendingFailed' value is returned. In other cases\nthe 'Sent' status is returned\n",
        "enum": [
          "Queued",
          "Sent",
          "Delivered",
          "DeliveryFailed",
          "SendingFailed",
          "Received"
        ]
      },
      "faxErrorCode": {
        "type": "string",
        "enum": [
          "AllLinesInUse",
          "Undefined",
          "NoFaxSendPermission",
          "NoInternationalPermission",
          "NoFaxMachine",
          "NoAnswer",
          "LineBusy",
          "CallerHungUp",
          "NotEnoughCredits",
          "SentPartially",
          "InternationalCallingDisabled",
          "DestinationCountryDisabled",
          "UnknownCountryCode",
          "NotAccepted",
          "InvalidNumber",
          "CallDeclined",
          "TooManyCallsPerLine",
          "CallFailed",
          "RenderingFailed",
          "TooManyPages",
          "ReturnToDBQueue",
          "NoCallTime",
          "WrongNumber",
          "ProhibitedNumber",
          "InternalError",
          "FaxSendingProhibited",
          "ThePhoneIsBlacklisted",
          "UserNotFound",
          "ConvertError",
          "DBGeneralError",
          "SkypeBillingFailed",
          "AccountSuspended",
          "ProhibitedDestination",
          "InternationalDisabled"
        ]
      },
      "name": {
        "type": "string",
        "description": "Symbolic name associated with a party. If the phone does not\nbelong to the known extension, only the location is returned, the name\nis not determined then\n"
      },
      "phoneNumber": {
        "type": "string",
        "description": "Phone number of a party. Usually it is a plain number including\ncountry and area code like 18661234567. But sometimes it could be returned\nfrom database with some formatting applied, for example (866)123-4567.\nThis property is filled in all cases where parties communicate by means\nof global phone numbers, for example when calling to direct numbers or\nsending/receiving SMS\n"
      }
    },
    "name": "MessageStoreCallerInfoResponseTo"
  },
  {
    "type": "object",
    "properties": {
      "id": {
        "type": "integer",
        "format": "int64",
        "description": "Internal identifier of a message",
        "example": 1724099032020
      },
      "uri": {
        "type": "string",
        "format": "uri",
        "description": "Canonical URI of a message"
      },
      "extensionId": {
        "type": "string",
        "description": "Internal identifier of an extension"
      },
      "attachments": {
        "type": "array",
        "description": "List of message attachments",
        "items": {
          "$ref": "#/components/schemas/MessageAttachmentInfo"
        }
      },
      "availability": {
        "type": "string",
        "enum": [
          "Alive",
          "Deleted",
          "Purged"
        ],
        "description": "Message availability status. Message in 'Deleted' state is still\npreserved with all its attachments and can be restored. 'Purged' means\nthat all attachments are already deleted and the message itself is about\nto be physically deleted shortly\n"
      },
      "conversationId": {
        "type": "integer",
        "format": "int64",
        "description": "SMS and Pager only. Identifier of a conversation the message\nbelongs to\n"
      },
      "conversation": {
        "$ref": "#/components/schemas/ConversationInfo"
      },
      "creationTime": {
        "type": "string",
        "description": "Message creation datetime in ISO 8601 format including timezone,\nfor example 2016-03-10T18:07:52.534Z\n",
        "format": "date-time"
      },
      "deliveryErrorCode": {
        "type": "string",
        "description": "SMS only. Delivery error code returned by gateway"
      },
      "direction": {
        "type": "string",
        "enum": [
          "Inbound",
          "Outbound"
        ],
        "description": "Text message direction. Note that for some message types not all\ndirections are allowed. For example voicemail messages can\nbe only inbound\n"
      },
      "faxPageCount": {
        "type": "integer",
        "format": "int32",
        "description": "Fax only. Page count in a fax message"
      },
      "faxResolution": {
        "type": "string",
        "description": "Fax only. Resolution of a fax message. 'High' for black and\nwhite image scanned at 200 dpi, 'Low' for black and white image scanned\nat 100 dpi\n",
        "enum": [
          "High",
          "Low"
        ]
      },
      "from": {
        "$ref": "#/components/schemas/MessageStoreCallerInfoResponseFrom"
      },
      "lastModifiedTime": {
        "type": "string",
        "description": "The datetime when the message was modified on server in ISO\n8601 format including timezone, for example 2016-03-10T18:07:52.534Z\n",
        "format": "date-time"
      },
      "messageStatus": {
        "type": "string",
        "description": "Message status. Different message types may have different\nallowed status values. For outbound faxes the aggregated message status\nis returned. If, for outbound message, a status for at least one recipient is 'Queued', then\nthe 'Queued' value is returned. If a status for at least one recipient is\n'SendingFailed', then the 'SendingFailed' value is returned. In other cases\nthe 'Sent' status is returned\n",
        "enum": [
          "Queued",
          "Sent",
          "Delivered",
          "DeliveryFailed",
          "SendingFailed",
          "Received"
        ]
      },
      "pgToDepartment": {
        "type": "boolean",
        "description": "Pager only. 'True' if at least one of the message recipients is\n'Department' extension\n"
      },
      "priority": {
        "type": "string",
        "description": "Message priority",
        "enum": [
          "Normal",
          "High"
        ]
      },
      "readStatus": {
        "description": "Message read status",
        "type": "string",
        "enum": [
          "Read",
          "Unread"
        ]
      },
      "smsDeliveryTime": {
        "type": "string",
        "description": "SMS only. Datetime when outbound SMS was delivered to recipient's\nhandset in ISO 8601 format including timezone, for example\n2016-03-10T18:07:52.534Z. It is filled only if a carrier sends a delivery\nreceipt to RingCentral\n",
        "format": "date-time"
      },
      "smsSendingAttemptsCount": {
        "type": "integer",
        "format": "int32",
        "description": "SMS only. Number of attempts made to send an outbound SMS to\nthe Gateway (if Gateway is temporary unavailable)\n"
      },
      "subject": {
        "type": "string",
        "description": "Message subject. For SMS and Pager messages it replicates message\ntext which is also returned as an attachment\n"
      },
      "to": {
        "type": "array",
        "description": "Recipient information",
        "items": {
          "$ref": "#/components/schemas/MessageStoreCallerInfoResponseTo"
        }
      },
      "type": {
        "type": "string",
        "description": "Message type",
        "enum": [
          "Fax",
          "SMS",
          "VoiceMail",
          "Pager",
          "Text"
        ]
      },
      "vmTranscriptionStatus": {
        "type": "string",
        "description": "Voicemail only. Status of a voicemail to text transcription.\nIf 'VoicemailToText' feature is not activated for account,\nthe 'NotAvailable' value is returned\n",
        "enum": [
          "NotAvailable",
          "InProgress",
          "TimedOut",
          "Completed",
          "CompletedPartially",
          "Failed",
          "Unknown"
        ]
      },
      "coverIndex": {
        "type": "integer",
        "format": "int32",
        "description": "Cover page identifier. If coverIndex is set to '0' (zero) cover\npage is not attached. For the list of available cover page identifiers\n(1-13) please call the Fax Cover Pages method. If not specified,\nthe default cover page is attached (which is configured in 'Outbound\nFax Settings')\n"
      },
      "coverPageText": {
        "type": "string",
        "description": "Cover page text, entered by the fax sender and printed on the\ncover page. Maximum length is limited to 1024 symbols\n"
      }
    },
    "name": "GetMessageInfoResponse"
  },
  {
    "required": [
      "navigation",
      "paging",
      "records"
    ],
    "type": "object",
    "properties": {
      "records": {
        "type": "array",
        "description": "List of call log records",
        "items": {
          "$ref": "#/components/schemas/CallLogRecord"
        }
      },
      "navigation": {
        "$ref": "#/components/schemas/CallLogNavigationInfo"
      },
      "paging": {
        "$ref": "#/components/schemas/CallLogPagingInfo"
      }
    },
    "name": "UserCallLogResponse"
  },
  {
    "type": "object",
    "properties": {
      "uri": {
        "type": "string",
        "format": "uri",
        "description": "Link to an extension on whose behalf a call is initiated"
      },
      "id": {
        "type": "string",
        "description": "Internal identifier of an extension on whose behalf a call is initiated"
      }
    },
    "description": "Information about extension on whose behalf a call is initiated. For Secretary call log the Boss extension info is returned",
    "name": "ActiveCallsRecordExtensionInfo"
  },
  {
    "required": [
      "legs"
    ],
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "Internal identifier of a cal log record"
      },
      "uri": {
        "type": "string",
        "format": "uri",
        "description": "Canonical URI of a call log record"
      },
      "sessionId": {
        "type": "string",
        "description": "Internal identifier of a call session"
      },
      "telephonySessionId": {
        "type": "string",
        "description": "Telephony identifier of a call session"
      },
      "sipUuidInfo": {
        "type": "string",
        "description": "Call session identifier, required for Telephony REST API"
      },
      "transferTarget": {
        "$ref": "#/components/schemas/CallLogRecordTransferTarget"
      },
      "transferee": {
        "$ref": "#/components/schemas/CallLogRecordTransferee"
      },
      "partyId": {
        "type": "string",
        "description": "Internal Identifier of Participant"
      },
      "from": {
        "$ref": "#/components/schemas/CallLogCallerInfo"
      },
      "to": {
        "$ref": "#/components/schemas/CallLogCallerInfo"
      },
      "type": {
        "type": "string",
        "description": "The type of a call",
        "enum": [
          "Voice",
          "Fax"
        ]
      },
      "direction": {
        "description": "The direction of a call",
        "type": "string",
        "enum": [
          "Inbound",
          "Outbound"
        ]
      },
      "action": {
        "type": "string",
        "description": "The internal action corresponding to the call operation",
        "enum": [
          "Unknown",
          "Phone Call",
          "Phone Login",
          "Calling Card",
          "VoIP Call",
          "Paging",
          "Hunting",
          "Call Park",
          "Monitoring",
          "Text Relay",
          "External Application",
          "Park Location",
          "CallOut-CallMe",
          "Conference Call",
          "Move",
          "RC Meetings",
          "Accept Call",
          "FindMe",
          "FollowMe",
          "RingMe",
          "Transfer",
          "Call Return",
          "Ring Directly",
          "RingOut Web",
          "RingOut PC",
          "RingOut Mobile",
          "411 Info",
          "Emergency",
          "E911 Update",
          "Support",
          "Incoming Fax",
          "Outgoing Fax"
        ]
      },
      "result": {
        "type": "string",
        "description": "The result of the call operation",
        "enum": [
          "Unknown",
          "Accepted",
          "Call connected",
          "In Progress",
          "Voicemail",
          "Reply",
          "Missed",
          "Busy",
          "Rejected",
          "No Answer",
          "Hang Up",
          "Blocked",
          "ResultEmpty",
          "Suspended account",
          "Call Failed",
          "Call Failure",
          "Internal Error",
          "IP Phone Offline",
          "No Calling Credit",
          "Not Allowed",
          "Restricted Number",
          "Wrong Number",
          "Answered Not Accepted",
          "Stopped",
          "Poor Line Quality",
          "International Disabled",
          "International Restricted",
          "Abandoned",
          "Declined",
          "Received",
          "Fax on Demand",
          "Partial Receive",
          "Receive Error",
          "Fax Receipt Error",
          "Fax Partially Sent",
          "No fax machine",
          "Send Error",
          "Sent",
          "Fax Not Sent",
          "Fax Poor Line"
        ]
      },
      "reason": {
        "type": "string",
        "description": "The reason of the call result:\n  * `Accepted` - The call was connected to and accepted by this number\n  * `Connected` - The call was answered, but there was no response on how to handle the call (for example, a voice mail system answered the call and did not push \"1\" to accept)\n  * `Line Busy` - The phone number you dialed was busy\n  * `Not Answered` - The phone number you dialed was not answered\n  * `No Answer` - You did not answer the call\n  * `Hang Up` - The caller hung up before the call was answered\n  * `Stopped` - This attempt was stopped because the call was answered by another phone\n  * `Internal Error` - An internal error occurred when making the call. Please try again\n  * `No Credit` - There was not enough Calling Credit on your account to make this call\n  * `Restricted Number` - The number you dialed is restricted by RingCentral\n  * `Wrong Number` - The number you dialed has either been disconnected or is not a valid phone number. Please check the number and try again\n  * `International Disabled` - International calling is not enabled on your account. Contact customer service to activate International Calling\n  * `International Restricted` - The country and/or area you attempted to call has been prohibited by your administrator\n  * `Bad Number` - An error occurred when making the call. Please check the number before trying again\n  * `Info 411 Restricted` - Calling to 411 Information Services is restricted\n  * `Customer 611 Restricted` - 611 customer service is not supported. Please contact customer service at <(888) 555-1212>\n  * `No Digital Line` - This DigitalLine was either not plugged in or did not have an internet connection\n  * `Failed Try Again` - Call failed. Please try again\n  * `Max Call Limit` - The number of simultaneous calls to your account has reached its limit\n  * `Too Many Calls` - The number of simultaneous calls for per DigitalLine associated with Other Phone has reached its limit. Please contact customer service\n  * `Calls Not Accepted` - Your account was not accepting calls at this time\n  * `Number Not Allowed` - The number that was dialed to access your account is not allowed\n  * `Number Blocked` - This number is in your Blocked Numbers list\n  * `Number Disabled` - The phone number and/or area you attempted to call has been prohibited by your administrator\n  * `Resource Error` - An error occurred when making the call. Please try again\n  * `Call Loop` - A call loop occurred due to an incorrect call forwarding configuration. Please check that you are not forwarding calls back to your own account\n  * `Fax Not Received` - An incoming fax could not be received because a proper connection with the sender's fax machine could not be established\n  * `Fax Partially Sent` - The fax was only partially sent. Possible explanations include phone line quality to poor to maintain the connection or the call was dropped\n  * `Fax Not Sent` - An attempt to send the fax was made, but could not connect with the receiving fax machine\n  * `Fax Poor Line` - An attempt to send the fax was made, but the phone line quality was too poor to send the fax\n  * `Fax Prepare Error` - An internal error occurred when preparing the fax. Please try again\n  * `Fax Save Error` - An internal error occurred when saving the fax. Please try again\n  * `Fax Send Error` - An error occurred when sending the fax. Please try again\n  * `DescNoE911Address` - The call was rejected due to no E911 address\n",
        "enum": [
          "Accepted",
          "Connected",
          "line Busy",
          "Not Answered",
          "No Answer",
          "Hang Up",
          "Stopped",
          "Internal Error",
          "No Credit",
          "Restricted Number",
          "Wrong Number",
          "International Disabled",
          "International Restricted",
          "Bad Number",
          "Info 411 Restricted",
          "Customer 611 Restricted",
          "No Digital Line",
          "Failed Try Again",
          "Max Call Limit",
          "Too Many Calls",
          "Calls Not Accepted",
          "Number Not Allowed",
          "Number Blocked",
          "Number Disabled",
          "Resource Error",
          "Call Loop",
          "Fax Not Received",
          "Fax Partially Sent",
          "Fax Not Sent",
          "Fax Poor Line",
          "Fax Prepare Error",
          "Fax Save Error",
          "Fax Send Error",
          "DescNoE911Address"
        ]
      },
      "startTime": {
        "type": "string",
        "description": "The call start datetime in ISO 8601 format including timezone, for example 2016-03-10T18:07:52.534Z",
        "format": "date-time"
      },
      "duration": {
        "type": "integer",
        "format": "int32",
        "description": "Call duration in seconds"
      },
      "recording": {
        "$ref": "#/components/schemas/CallLogRecordingInfo"
      },
      "lastModifiedTime": {
        "type": "string",
        "description": "For 'Detailed' view only. The datetime when the call log record was modified in ISO 8601 format including timezone, for example 2016-03-10T18:07:52.534Z",
        "format": "date-time"
      },
      "transport": {
        "type": "string",
        "description": "The type of a call transport. 'PSTN' indicates that a call leg was initiated\nfrom the PSTN network provider; 'VoIP' - from an RC phone.\n",
        "enum": [
          "PSTN",
          "VoIP"
        ]
      },
      "extension": {
        "$ref": "#/components/schemas/ActiveCallsRecordExtensionInfo"
      },
      "delegate": {
        "$ref": "#/components/schemas/CallLogDelegateInfo"
      },
      "legs": {
        "type": "array",
        "description": "For 'Detailed' view only. Leg description",
        "items": {
          "$ref": "#/components/schemas/CallLogRecordLegInfo"
        }
      },
      "message": {
        "$ref": "#/components/schemas/CallLogRecordMessage"
      },
      "deleted": {
        "type": "boolean",
        "description": "Returned only if this call was deleted. Value is set to 'True' in this case"
      },
      "internalType": {
        "type": "string",
        "description": "The internal type of the call",
        "enum": [
          "Local",
          "LongDistance",
          "International",
          "Sip",
          "RingMe",
          "RingOut",
          "Usual",
          "TollFreeNumber",
          "VerificationNumber",
          "Vma",
          "LocalNumber",
          "ImsOutgoing",
          "ImsIncoming"
        ]
      }
    },
    "name": "CallLogRecord"
  },
  {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "Internal identifier of a cal log record"
      },
      "uri": {
        "type": "string",
        "format": "uri",
        "description": "Canonical URI of a call log record"
      },
      "sessionId": {
        "type": "string",
        "description": "Internal identifier of a call session"
      },
      "telephonySessionId": {
        "type": "string",
        "description": "Telephony identifier of a call session"
      },
      "sipUuidInfo": {
        "type": "string",
        "description": "Call session identifier, required for Telephony REST API"
      },
      "transferTarget": {
        "$ref": "#/components/schemas/UserCallLogRecordTransferTarget"
      },
      "transferee": {
        "$ref": "#/components/schemas/UserCallLogRecordTransferee"
      },
      "partyId": {
        "type": "string",
        "description": "Internal Identifier of Participant"
      },
      "from": {
        "$ref": "#/components/schemas/CallLogCallerInfo"
      },
      "to": {
        "$ref": "#/components/schemas/CallLogCallerInfo"
      },
      "extension": {
        "$ref": "#/components/schemas/ExtensionInfoCallLog"
      },
      "type": {
        "type": "string",
        "description": "The type of a call",
        "enum": [
          "Voice",
          "Fax"
        ]
      },
      "transport": {
        "type": "string",
        "description": "The type of a call transport. 'PSTN' indicates that a call leg was initiated\nfrom the PSTN network provider; 'VoIP' - from an RC phone.\n",
        "enum": [
          "PSTN",
          "VoIP"
        ]
      },
      "legs": {
        "type": "array",
        "description": "For 'Detailed' view only. Leg description",
        "items": {
          "$ref": "#/components/schemas/CallLogRecordLegInfo"
        }
      },
      "billing": {
        "$ref": "#/components/schemas/BillingInfo"
      },
      "direction": {
        "description": "The direction of a call",
        "type": "string",
        "enum": [
          "Inbound",
          "Outbound"
        ]
      },
      "message": {
        "$ref": "#/components/schemas/CallLogRecordMessage"
      },
      "startTime": {
        "type": "string",
        "format": "date-time",
        "description": "The call start datetime in ISO 8601 format including timezone, for example 2016-03-10T18:07:52.534Z"
      },
      "delegate": {
        "$ref": "#/components/schemas/CallLogDelegateInfo"
      },
      "deleted": {
        "type": "boolean",
        "description": "Indicates whether the record is deleted. Returned for deleted records, for ISync requests"
      },
      "duration": {
        "type": "integer",
        "format": "int32",
        "description": "Call duration in seconds"
      },
      "lastModifiedTime": {
        "type": "string",
        "description": "For 'Detailed' view only. The datetime when the call log record was modified in (ISO 8601)[https://en.wikipedia.org/wiki/ISO_8601] format including timezone, for example 2016-03-10T18:07:52.534Z",
        "format": "date-time"
      },
      "recording": {
        "$ref": "#/components/schemas/CallLogRecordingInfo"
      },
      "shortRecording": {
        "type": "boolean",
        "description": "Indicates that the recording is too short and therefore wouldn't be returned. The flag is not returned if the value is false"
      },
      "action": {
        "type": "string",
        "description": "The internal action corresponding to the call operation",
        "enum": [
          "Unknown",
          "Phone Call",
          "Phone Login",
          "Calling Card",
          "VoIP Call",
          "Paging",
          "Hunting",
          "Call Park",
          "Monitoring",
          "Text Relay",
          "External Application",
          "Park Location",
          "CallOut-CallMe",
          "Conference Call",
          "Move",
          "RC Meetings",
          "Accept Call",
          "FindMe",
          "FollowMe",
          "RingMe",
          "Transfer",
          "Call Return",
          "Ring Directly",
          "RingOut Web",
          "RingOut PC",
          "RingOut Mobile",
          "411 Info",
          "Emergency",
          "E911 Update",
          "Support",
          "Incoming Fax",
          "Outgoing Fax"
        ]
      },
      "result": {
        "type": "string",
        "description": "The result of the call operation",
        "enum": [
          "Unknown",
          "Accepted",
          "Call connected",
          "In Progress",
          "Voicemail",
          "Reply",
          "Missed",
          "Busy",
          "Rejected",
          "No Answer",
          "Hang Up",
          "Blocked",
          "ResultEmpty",
          "Suspended account",
          "Call Failed",
          "Call Failure",
          "Internal Error",
          "IP Phone Offline",
          "No Calling Credit",
          "Not Allowed",
          "Restricted Number",
          "Wrong Number",
          "Answered Not Accepted",
          "Stopped",
          "Poor Line Quality",
          "International Disabled",
          "International Restricted",
          "Abandoned",
          "Declined",
          "Received",
          "Fax on Demand",
          "Partial Receive",
          "Receive Error",
          "Fax Receipt Error",
          "Fax Partially Sent",
          "No fax machine",
          "Send Error",
          "Sent",
          "Fax Not Sent",
          "Fax Poor Line"
        ]
      },
      "reason": {
        "type": "string",
        "description": "The reason of the call result:\n  * `Accepted` - The call was connected to and accepted by this number\n  * `Connected` - The call was answered, but there was no response on how to handle the call (for example, a voice mail system answered the call and did not push \"1\" to accept)\n  * `Line Busy` - The phone number you dialed was busy\n  * `Not Answered` - The phone number you dialed was not answered\n  * `No Answer` - You did not answer the call\n  * `Hang Up` - The caller hung up before the call was answered\n  * `Stopped` - This attempt was stopped because the call was answered by another phone\n  * `Internal Error` - An internal error occurred when making the call. Please try again\n  * `No Credit` - There was not enough Calling Credit on your account to make this call\n  * `Restricted Number` - The number you dialed is restricted by RingCentral\n  * `Wrong Number` - The number you dialed has either been disconnected or is not a valid phone number. Please check the number and try again\n  * `International Disabled` - International calling is not enabled on your account. Contact customer service to activate International Calling\n  * `International Restricted` - The country and/or area you attempted to call has been prohibited by your administrator\n  * `Bad Number` - An error occurred when making the call. Please check the number before trying again\n  * `Info 411 Restricted` - Calling to 411 Information Services is restricted\n  * `Customer 611 Restricted` - 611 customer service is not supported. Please contact customer service at <(888) 555-1212>\n  * `No Digital Line` - This DigitalLine was either not plugged in or did not have an internet connection\n  * `Failed Try Again` - Call failed. Please try again\n  * `Max Call Limit` - The number of simultaneous calls to your account has reached its limit\n  * `Too Many Calls` - The number of simultaneous calls for per DigitalLine associated with Other Phone has reached its limit. Please contact customer service\n  * `Calls Not Accepted` - Your account was not accepting calls at this time\n  * `Number Not Allowed` - The number that was dialed to access your account is not allowed\n  * `Number Blocked` - This number is in your Blocked Numbers list\n  * `Number Disabled` - The phone number and/or area you attempted to call has been prohibited by your administrator\n  * `Resource Error` - An error occurred when making the call. Please try again\n  * `Call Loop` - A call loop occurred due to an incorrect call forwarding configuration. Please check that you are not forwarding calls back to your own account\n  * `Fax Not Received` - An incoming fax could not be received because a proper connection with the sender's fax machine could not be established\n  * `Fax Partially Sent` - The fax was only partially sent. Possible explanations include phone line quality to poor to maintain the connection or the call was dropped\n  * `Fax Not Sent` - An attempt to send the fax was made, but could not connect with the receiving fax machine\n  * `Fax Poor Line` - An attempt to send the fax was made, but the phone line quality was too poor to send the fax\n  * `Fax Prepare Error` - An internal error occurred when preparing the fax. Please try again\n  * `Fax Save Error` - An internal error occurred when saving the fax. Please try again\n  * `Fax Send Error` - An error occurred when sending the fax. Please try again\n  * `DescNoE911Address` - The call was rejected due to no E911 address\n",
        "enum": [
          "Accepted",
          "Connected",
          "line Busy",
          "Not Answered",
          "No Answer",
          "Hang Up",
          "Stopped",
          "Internal Error",
          "No Credit",
          "Restricted Number",
          "Wrong Number",
          "International Disabled",
          "International Restricted",
          "Bad Number",
          "Info 411 Restricted",
          "Customer 611 Restricted",
          "No Digital Line",
          "Failed Try Again",
          "Max Call Limit",
          "Too Many Calls",
          "Calls Not Accepted",
          "Number Not Allowed",
          "Number Blocked",
          "Number Disabled",
          "Resource Error",
          "Call Loop",
          "Fax Not Received",
          "Fax Partially Sent",
          "Fax Not Sent",
          "Fax Poor Line",
          "Fax Prepare Error",
          "Fax Save Error",
          "Fax Send Error",
          "DescNoE911Address"
        ]
      },
      "reasonDescription": {
        "type": "string"
      },
      "internalType": {
        "type": "string",
        "description": "The internal type of the call",
        "enum": [
          "Local",
          "LongDistance",
          "International",
          "Sip",
          "RingMe",
          "RingOut",
          "Usual",
          "TollFreeNumber",
          "VerificationNumber",
          "Vma",
          "LocalNumber",
          "ImsOutgoing",
          "ImsIncoming"
        ]
      }
    },
    "name": "UserCallLogRecord"
  },
  {
    "type": "object",
    "properties": {
      "uri": {
        "type": "string",
        "format": "uri",
        "description": "Link to the list of call log records with sync information"
      },
      "records": {
        "type": "array",
        "description": "List of call log records with synchronization information.\nFor `ISync`` the total number of returned records is limited to 250; this\nincludes both new records and the old ones, specified by the recordCount\nparameter\n",
        "items": {
          "$ref": "#/components/schemas/CallLogRecord"
        }
      },
      "syncInfo": {
        "$ref": "#/components/schemas/CallLogSyncInfo"
      }
    },
    "name": "CallLogSync"
  },
  {
    "required": [
      "navigation",
      "paging",
      "records"
    ],
    "type": "object",
    "properties": {
      "uri": {
        "type": "string",
        "format": "uri",
        "description": "Link to the list of active call records"
      },
      "records": {
        "type": "array",
        "description": "List of call log records",
        "items": {
          "$ref": "#/components/schemas/CallLogRecord"
        }
      },
      "navigation": {
        "$ref": "#/components/schemas/CallLogNavigationInfo"
      },
      "paging": {
        "$ref": "#/components/schemas/CallLogPagingInfo"
      }
    },
    "name": "ActiveCallsResponse"
  },
  {
    "type": "object",
    "properties": {
      "id": {
        "type": "integer",
        "format": "int64",
        "description": "Internal identifier of a message"
      },
      "uri": {
        "type": "string",
        "format": "uri",
        "description": "Canonical URI of a message"
      },
      "attachments": {
        "type": "array",
        "description": "The list of message attachments",
        "items": {
          "$ref": "#/components/schemas/MessageAttachmentInfo"
        }
      },
      "availability": {
        "type": "string",
        "enum": [
          "Alive",
          "Deleted",
          "Purged"
        ],
        "description": "Message availability status. Message in 'Deleted' state is still\npreserved with all its attachments and can be restored. 'Purged' means\nthat all attachments are already deleted and the message itself is about\nto be physically deleted shortly\n"
      },
      "conversationId": {
        "type": "integer",
        "format": "int64",
        "description": "SMS and Pager only. Identifier of a conversation that the message\nbelongs to\n"
      },
      "conversation": {
        "$ref": "#/components/schemas/ConversationInfo"
      },
      "creationTime": {
        "type": "string",
        "description": "Message creation datetime in ISO 8601 format including timezone,\nfor example 2016-03-10T18:07:52.534Z\n",
        "format": "date-time"
      },
      "direction": {
        "type": "string",
        "enum": [
          "Inbound",
          "Outbound"
        ],
        "description": "Text message direction. Note that for some message types not all\ndirections are allowed. For example voicemail messages can\nbe only inbound\n"
      },
      "from": {
        "$ref": "#/components/schemas/MessageStoreCallerInfoResponseFrom"
      },
      "lastModifiedTime": {
        "type": "string",
        "description": "Datetime when the message was modified on server in ISO\n8601 format including timezone, for example 2016-03-10T18:07:52.534Z\n",
        "format": "date-time"
      },
      "messageStatus": {
        "type": "string",
        "description": "Message status. Different message types may have different\nallowed status values. For outbound faxes the aggregated message status\nis returned. If, for outbound message, a status for at least one recipient is 'Queued', then\nthe 'Queued' value is returned. If a status for at least one recipient is\n'SendingFailed', then the 'SendingFailed' value is returned. In other cases\nthe 'Sent' status is returned\n",
        "enum": [
          "Queued",
          "Sent",
          "Delivered",
          "DeliveryFailed",
          "SendingFailed",
          "Received"
        ]
      },
      "pgToDepartment": {
        "type": "boolean",
        "description": "Pager only. 'True' if at least one of a message recipients\nis 'Department' extension\n"
      },
      "priority": {
        "type": "string",
        "description": "Message priority",
        "enum": [
          "Normal",
          "High"
        ]
      },
      "readStatus": {
        "description": "Message read status",
        "type": "string",
        "enum": [
          "Read",
          "Unread"
        ]
      },
      "subject": {
        "type": "string",
        "description": "Message subject. For SMS and Pager messages it replicates message\ntext which is also returned as an attachment\n"
      },
      "to": {
        "type": "array",
        "description": "Recipient information",
        "items": {
          "$ref": "#/components/schemas/MessageStoreCallerInfoResponseTo"
        }
      },
      "type": {
        "type": "string",
        "description": "Message type",
        "enum": [
          "Fax",
          "SMS",
          "VoiceMail",
          "Pager",
          "Text"
        ]
      }
    },
    "name": "GetInternalTextMessageInfoResponse"
  },
  {
    "required": [
      "text"
    ],
    "type": "object",
    "properties": {
      "from": {
        "$ref": "#/components/schemas/PagerCallerInfoRequest"
      },
      "replyOn": {
        "type": "integer",
        "format": "int32",
        "description": "Internal identifier of a message this message replies to"
      },
      "text": {
        "type": "string",
        "description": "Text of a pager message. Max length is 1024 symbols (2-byte\nUTF-16 encoded). If a character is encoded in 4 bytes in UTF-16 it is\ntreated as 2 characters, thus restricting the maximum message length to\n512 symbols\n",
        "example": "hello world"
      },
      "to": {
        "type": "array",
        "description": "Optional if `replyOn` parameter is specified. Receiver of a pager\nmessage.\n",
        "items": {
          "$ref": "#/components/schemas/PagerCallerInfoRequest"
        }
      }
    },
    "name": "CreateInternalTextMessageRequest"
  },
  {
    "type": "object",
    "properties": {
      "extensionId": {
        "type": "string",
        "description": "Extension identifier",
        "example": "123456789"
      },
      "extensionNumber": {
        "type": "string",
        "description": "Extension number",
        "example": "105"
      }
    },
    "description": "Sender of a pager message.",
    "name": "PagerCallerInfoRequest"
  },
  {
    "type": "object",
    "description": "Recipient data",
    "properties": {
      "uri": {
        "type": "string",
        "format": "uri",
        "description": "Link to a recipient extension resource"
      },
      "id": {
        "type": "integer",
        "format": "int64",
        "description": "Internal identifier of a recipient extension"
      }
    },
    "name": "RecipientInfo"
  },
  {
    "type": "object",
    "properties": {
      "extension": {
        "$ref": "#/components/schemas/TransferExtensionInfo"
      },
      "action": {
        "type": "string",
        "description": "Event that initiates transferring to the specified extension",
        "enum": [
          "HoldTimeExpiration",
          "MaxCallers",
          "NoAnswer"
        ]
      }
    },
    "name": "TransferInfo"
  },
  {
    "type": "object",
    "description": "Unconditional forwarding parameters.\nReturned if 'UnconditionalForwarding' value is specified for the `callHandlingAction` parameter\n",
    "properties": {
      "phoneNumber": {
        "type": "string",
        "description": "Phone number to which the call is forwarded. In addition to\ncommon e.164 format, the following number patterns are supported: 11xxxxxxxxxxx,\n444xxxxxxxxxxx, 616xxxxxxxxxxx, 1700yyyy; where xxxxxxxxxxx is a phone number in\ne.164 format (without '+' sign) and yyyy is an external short extension number.\nMax number of digits is 15\n"
      },
      "action": {
        "type": "string",
        "description": "Event that initiates forwarding to the specified phone number",
        "enum": [
          "HoldTimeExpiration",
          "MaxCallers",
          "NoAnswer"
        ]
      }
    },
    "name": "UnconditionalForwardingInfo"
  },
  {
    "type": "object",
    "properties": {
      "extension": {
        "$ref": "#/components/schemas/CallHandlingExtensionInfo"
      }
    },
    "description": "Transfer settings applied for department (call queue) extension\ntype, returned if CallHandlingAction is set to `TransferToExtension`\n",
    "name": "TransferredExtensionInfo"
  },
  {
    "type": "object",
    "properties": {
      "transferMode": {
        "type": "string",
        "description": "Specifies how calls are transferred to group members",
        "enum": [
          "Rotating",
          "Simultaneous",
          "FixedOrder"
        ]
      },
      "transfer": {
        "type": "array",
        "description": "Call transfer information",
        "items": {
          "$ref": "#/components/schemas/TransferInfo"
        }
      },
      "noAnswerAction": {
        "type": "string",
        "description": "Specifies the type of action to be taken if: members are available but no one answers, or all members are busy/unavailable. This option is available for Business hours only. For simultaneous transfer mode only 'WaitPrimaryMembers' and 'WaitPrimaryAndOverflowMembers' are supported",
        "enum": [
          "WaitPrimaryMembers",
          "WaitPrimaryAndOverflowMembers",
          "Voicemail",
          "TransferToExtension",
          "UnconditionalForwarding"
        ]
      },
      "fixedOrderAgents": {
        "type": "array",
        "description": "Information on a call forwarding rule",
        "items": {
          "$ref": "#/components/schemas/FixedOrderAgents"
        }
      },
      "holdAudioInterruptionMode": {
        "type": "string",
        "description": "Connecting audio interruption mode",
        "enum": [
          "Never",
          "WhenMusicEnds",
          "Periodically"
        ]
      },
      "holdAudioInterruptionPeriod": {
        "type": "integer",
        "format": "int32",
        "description": "Connecting audio interruption message period in seconds"
      },
      "holdTimeExpirationAction": {
        "type": "string",
        "description": "Specifies the type of action to be taken after the hold time (waiting for an available call queue member) expires. If 'TransferToExtension' option is selected, the extension specified in `transfer` field is used. The default value is `Voicemail`",
        "default": "Voicemail",
        "enum": [
          "TransferToExtension",
          "UnconditionalForwarding",
          "Voicemail"
        ]
      },
      "agentTimeout": {
        "type": "integer",
        "format": "int32",
        "description": "Maximum time in seconds to wait for a call queue member before trying the next member"
      },
      "wrapUpTime": {
        "type": "integer",
        "format": "int32",
        "minimum": 180,
        "maximum": 300,
        "description": "Minimum post-call wrap up time in seconds before agent status\nis automatically set; the value range is from 180 to 300\n"
      },
      "holdTime": {
        "type": "integer",
        "format": "int32",
        "description": "Maximum hold time in seconds to wait for an available call queue member"
      },
      "maxCallers": {
        "type": "integer",
        "format": "int32",
        "maximum": 25,
        "description": "Maximum count of callers on hold; the limitation is 25 callers"
      },
      "maxCallersAction": {
        "type": "string",
        "description": "Specifies the type of action to be taken if count of callers on hold exceeds the supported maximum",
        "enum": [
          "Voicemail",
          "Announcement",
          "TransferToExtension",
          "UnconditionalForwarding"
        ]
      },
      "unconditionalForwarding": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/UnconditionalForwardingInfo"
        }
      }
    },
    "description": "Queue settings applied for department (call queue) extension type,\nwith the 'AgentQueue' value specified as a call handling action\n",
    "name": "QueueInfo"
  },
  {
    "type": "object",
    "properties": {
      "callerId": {
        "type": "string",
        "description": "Phone number of a caller"
      },
      "name": {
        "type": "string",
        "description": "Contact name of a caller"
      }
    },
    "name": "CallersInfo"
  },
  {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "Internal identifier of an extension the call is transferred to"
      },
      "name": {
        "type": "string",
        "description": "Extension name"
      },
      "extensionNumber": {
        "type": "string",
        "description": "Extension number"
      }
    },
    "name": "TransferExtensionInfo"
  },
  {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "Internal identifier of a forwarding number"
      },
      "uri": {
        "type": "string",
        "format": "uri",
        "description": "Canonical URI of a forwarding/call flip phone number"
      },
      "phoneNumber": {
        "type": "string",
        "description": "Forwarding/Call flip phone number"
      },
      "label": {
        "type": "string",
        "description": "Forwarding/Call flip number title"
      },
      "type": {
        "type": "string",
        "description": "Type of a forwarding number",
        "enum": [
          "Home",
          "Mobile",
          "Work",
          "PhoneLine",
          "Outage",
          "Other",
          "BusinessMobilePhone",
          "ExternalCarrier"
        ]
      }
    },
    "name": "CreateAnsweringRuleForwardingNumberInfo"
  },
  {
    "type": "object",
    "description": "Specifies an extension (a calling group) which should be used for the missed call transfer. Returned only if the `actionType` is set to 'ConnectToExtension'",
    "properties": {
      "id": {
        "type": "string",
        "description": "Internal identifier of an extension which should be used for the missed call transfer"
      },
      "externalNumber": {
        "$ref": "#/components/schemas/MissedCallExtensionInfoExternalNumber"
      }
    },
    "name": "MissedCallExtensionInfo"
  },
  {
    "type": "object",
    "properties": {
      "timeout": {
        "type": "integer",
        "format": "int32",
        "minimum": 10,
        "maximum": 80,
        "description": "Number of seconds to wait before forwarding unanswered calls. The value range is 10 - 80\n"
      }
    },
    "description": "SharedLines call handling action settings",
    "name": "SharedLinesInfo"
  },
  {
    "type": "object",
    "properties": {
      "callerId": {
        "type": "string",
        "description": "Phone number of a caller"
      },
      "name": {
        "type": "string",
        "description": "Contact name of a caller"
      }
    },
    "name": "CallersInfoRequest"
  },
  {
    "type": "object",
    "properties": {
      "extension": {
        "$ref": "#/components/schemas/FixedOrderAgentsExtensionInfo"
      },
      "index": {
        "type": "integer",
        "format": "int32",
        "description": "Ordinal of an agent (call queue member)"
      }
    },
    "name": "FixedOrderAgents"
  },
  {
    "type": "object",
    "description": "Schedule when an answering rule should be applied",
    "properties": {
      "weeklyRanges": {
        "$ref": "#/components/schemas/WeeklyScheduleInfo"
      },
      "ranges": {
        "type": "array",
        "description": "Specific data ranges",
        "items": {
          "$ref": "#/components/schemas/RangesInfo"
        }
      },
      "ref": {
        "type": "string",
        "description": "The user's schedule specified for business hours or after hours; it can also be set/retrieved calling the corresponding method",
        "enum": [
          "BusinessHours",
          "AfterHours"
        ]
      }
    },
    "name": "ScheduleInfo"
  },
  {
    "type": "object",
    "description": "Specifies an external PSTN number which should be used for the missed call transfer. Returned only if the actionType is set to `ConnectToExternalNumber`",
    "properties": {
      "phoneNumber": {
        "type": "string",
        "description": "Phone number to which the call is forwarded. In addition to common [E.164](https://www.itu.int/rec/T-REC-E.164-201011-I) format, the following number patterns are supported: 11xxxxxxxxxxx, 444xxxxxxxxxxx, 616xxxxxxxxxxx, 1700yyyy; where `xxxxxxxxxxx` is a phone number in e.164 format (without '+' sign) and `yyyy` is an external short extension number. Maximum number of digits is 15"
      }
    },
    "name": "MissedCallExtensionInfoExternalNumber"
  },
  {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "Internal identifier of an extension"
      },
      "uri": {
        "type": "string",
        "format": "uri",
        "description": "Canonical URI of an extension"
      },
      "extensionNumber": {
        "type": "string",
        "description": "Number of extension"
      },
      "partnerId": {
        "type": "string",
        "description": "For Partner Applications Internal identifier of an extension\ncreated by partner. The RingCentral supports the mapping of accounts and\nstores the corresponding account ID/extension ID for each partner ID of\na client application. In request URIs partner IDs are accepted instead\nof regular RingCentral native IDs as path parameters using pid = XXX clause.\nThough in response URIs contain the corresponding account IDs and extension\nIDs. In all request and response bodies these values are reflected via\npartnerId attributes of account and extension\n"
      }
    },
    "name": "CallHandlingExtensionInfo"
  },
  {
    "type": "object",
    "properties": {
      "uri": {
        "type": "string",
        "format": "uri",
        "description": "Canonical URI to an answering rule resource"
      },
      "id": {
        "type": "string",
        "description": "Internal identifier of an answering rule"
      },
      "type": {
        "type": "string",
        "description": "Type of an answering rule",
        "enum": [
          "BusinessHours",
          "AfterHours",
          "Custom"
        ]
      },
      "name": {
        "type": "string",
        "description": "Name of an answering rule specified by user"
      },
      "enabled": {
        "type": "boolean",
        "description": "Specifies if an answering rule is active or inactive"
      },
      "schedule": {
        "$ref": "#/components/schemas/ScheduleInfo"
      },
      "calledNumbers": {
        "type": "array",
        "description": "Answering rules are applied when calling to selected number(s)",
        "items": {
          "$ref": "#/components/schemas/CalledNumberInfo"
        }
      },
      "callers": {
        "type": "array",
        "description": "Answering rules are applied when calls are received from specified caller(s)",
        "items": {
          "$ref": "#/components/schemas/CallersInfo"
        }
      },
      "callHandlingAction": {
        "type": "string",
        "description": "Specifies how incoming calls are forwarded",
        "enum": [
          "ForwardCalls",
          "UnconditionalForwarding",
          "AgentQueue",
          "TransferToExtension",
          "TakeMessagesOnly",
          "PlayAnnouncementOnly",
          "SharedLines"
        ]
      },
      "forwarding": {
        "$ref": "#/components/schemas/ForwardingInfo"
      },
      "unconditionalForwarding": {
        "$ref": "#/components/schemas/UnconditionalForwardingInfo"
      },
      "queue": {
        "$ref": "#/components/schemas/QueueInfo"
      },
      "transfer": {
        "$ref": "#/components/schemas/TransferredExtensionInfo"
      },
      "voicemail": {
        "$ref": "#/components/schemas/VoicemailInfo"
      },
      "greetings": {
        "type": "array",
        "description": "Greetings applied for an answering rule; only predefined greetings can be applied, see Dictionary Greeting List",
        "items": {
          "$ref": "#/components/schemas/GreetingInfo"
        }
      },
      "screening": {
        "type": "string",
        "description": "Call screening status. 'Off' - no call screening; 'NoCallerId' - if caller ID is missing, then callers are asked to say their name before connecting; 'UnknownCallerId' - if caller ID is not in contact list, then callers are asked to say their name before connecting; 'Always' - the callers are always asked to say their name before connecting. The default value is 'Off'",
        "enum": [
          "Off",
          "NoCallerId",
          "UnknownCallerId",
          "Always"
        ],
        "default": "Off"
      },
      "sharedLines": {
        "$ref": "#/components/schemas/SharedLinesInfo"
      }
    },
    "name": "CustomAnsweringRuleInfo"
  },
  {
    "required": [
      "name",
      "type"
    ],
    "type": "object",
    "properties": {
      "enabled": {
        "type": "boolean",
        "description": "Specifies if the rule is active or inactive. The default value\nis 'True'\n"
      },
      "type": {
        "type": "string",
        "description": "Type of an answering rule. The 'Custom' value should be specified"
      },
      "name": {
        "type": "string",
        "description": "Name of an answering rule specified by user"
      },
      "callers": {
        "type": "array",
        "description": "Answering rule will be applied when calls are received from the specified caller(s)",
        "items": {
          "$ref": "#/components/schemas/CallersInfoRequest"
        }
      },
      "calledNumbers": {
        "type": "array",
        "description": "Answering rules are applied when calling to selected number(s)",
        "items": {
          "$ref": "#/components/schemas/CalledNumberInfo"
        }
      },
      "schedule": {
        "$ref": "#/components/schemas/ScheduleInfo"
      },
      "callHandlingAction": {
        "type": "string",
        "description": "Specifies how incoming calls are forwarded",
        "enum": [
          "ForwardCalls",
          "UnconditionalForwarding",
          "AgentQueue",
          "TransferToExtension",
          "TakeMessagesOnly",
          "PlayAnnouncementOnly",
          "SharedLines"
        ]
      },
      "forwarding": {
        "$ref": "#/components/schemas/ForwardingInfo"
      },
      "unconditionalForwarding": {
        "$ref": "#/components/schemas/UnconditionalForwardingInfo"
      },
      "queue": {
        "$ref": "#/components/schemas/QueueInfo"
      },
      "transfer": {
        "$ref": "#/components/schemas/TransferredExtensionInfo"
      },
      "voicemail": {
        "$ref": "#/components/schemas/VoicemailInfo"
      },
      "missedCall": {
        "$ref": "#/components/schemas/MissedCallInfo"
      },
      "greetings": {
        "type": "array",
        "description": "Greetings applied for an answering rule; only predefined greetings\ncan be applied, see Dictionary Greeting List\n",
        "items": {
          "$ref": "#/components/schemas/GreetingInfo"
        }
      },
      "screening": {
        "type": "string",
        "description": "Call screening status. 'Off' - no call screening; 'NoCallerId'\n- if caller ID is missing, then callers are asked to say their name before\nconnecting; 'UnknownCallerId' - if caller ID is not in contact list, then\ncallers are asked to say their name before connecting; 'Always' - the\ncallers are always asked to say their name before connecting. The default\nvalue is 'Off'\n",
        "enum": [
          "Off",
          "NoCallerId",
          "UnknownCallerId",
          "Always"
        ],
        "default": "Off"
      }
    },
    "name": "CreateAnsweringRuleRequest"
  },
  {
    "type": "object",
    "properties": {
      "uri": {
        "type": "string",
        "format": "uri",
        "description": "Canonical URI of an answering rule list resource",
        "example": "https://platform.ringcentral.com/restapi/v1.0/account/240913004/extension/240972004/answering-rule?page=1&perPage=100"
      },
      "records": {
        "type": "array",
        "description": "List of answering rules",
        "items": {
          "$ref": "#/components/schemas/UserAnsweringRuleListRecord"
        }
      },
      "paging": {
        "$ref": "#/components/schemas/EnumeratedPagingModel"
      },
      "navigation": {
        "$ref": "#/components/schemas/PageNavigationModel"
      }
    },
    "name": "UserAnsweringRuleList"
  },
  {
    "type": "object",
    "properties": {
      "notifyMySoftPhones": {
        "type": "boolean",
        "description": "Specifies if the user's softphone(s) are notified before forwarding the incoming call to desk phones and forwarding numbers"
      },
      "notifyAdminSoftPhones": {
        "type": "boolean",
        "description": "Deprecated parameter. Specifies if the administrator's softphone is notified before forwarding the incoming call to desk phones and forwarding numbers. The default value is 'False'",
        "deprecated": true
      },
      "softPhonesRingCount": {
        "type": "integer",
        "format": "int32",
        "description": "Number of rings before forwarding starts"
      },
      "softPhonesAlwaysRing": {
        "type": "boolean",
        "description": "Specifies that desktop and mobile applications of the user will ring till the end of their forwarding list. If set to 'True' then `softPhonesRingCount` is ignored",
        "default": true
      },
      "ringingMode": {
        "type": "string",
        "description": "Specifies the order in which the forwarding numbers ring. 'Sequentially' means that forwarding numbers are ringing one at a time, in order of priority. 'Simultaneously' means that forwarding numbers are ring all at the same time",
        "enum": [
          "Sequentially",
          "Simultaneously"
        ]
      },
      "rules": {
        "type": "array",
        "description": "Information on a call forwarding rule",
        "items": {
          "$ref": "#/components/schemas/ForwardingRuleInfo"
        }
      },
      "softPhonesPositionTop": {
        "type": "boolean",
        "description": "Specifies if desktop and mobile applications of the user are notified before (true) or after (false) forwarding the incoming call to desk phones and forwarding numbers. Applicable only if `notifyMySoftPhones` parameter is set to `true`"
      },
      "mobileTimeout": {
        "type": "boolean",
        "description": "Deprecated parameter. Specifies if mobile timeout is activated for the rule",
        "deprecated": true
      }
    },
    "description": "Forwarding parameters. Returned if 'ForwardCalls' is specified in 'callHandlingAction'. These settings determine the forwarding numbers to which the call will be forwarded",
    "name": "ForwardingInfo"
  },
  {
    "type": "object",
    "properties": {
      "index": {
        "type": "integer",
        "format": "int32",
        "description": "Forwarding number (or group) ordinal"
      },
      "ringCount": {
        "type": "integer",
        "format": "int32",
        "description": "Number of rings for a forwarding number (or group)"
      },
      "enabled": {
        "type": "boolean",
        "description": "Forwarding number status. Returned only if `showInactiveNumbers` is set to `true`"
      },
      "forwardingNumbers": {
        "type": "array",
        "description": "Forwarding number (or group) data",
        "items": {
          "$ref": "#/components/schemas/CreateAnsweringRuleForwardingNumberInfo"
        }
      }
    },
    "name": "ForwardingRuleInfo"
  },
  {
    "type": "object",
    "properties": {
      "enabled": {
        "type": "boolean",
        "description": "If 'True' then voicemails are allowed to be received"
      },
      "recipient": {
        "$ref": "#/components/schemas/RecipientInfo"
      }
    },
    "description": "Specifies whether to take a voicemail and who should do it",
    "name": "VoicemailInfo"
  },
  {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "Internal identifier of an extension"
      },
      "uri": {
        "type": "string",
        "format": "uri",
        "description": "Canonical URI of an extension"
      },
      "extensionNumber": {
        "type": "string",
        "description": "Number of extension"
      },
      "name": {
        "type": "string",
        "description": "Name of agent extension"
      }
    },
    "name": "FixedOrderAgentsExtensionInfo"
  },
  {
    "type": "object",
    "description": "Specifies behavior for the missed call scenario. Returned only if `enabled` parameter of a voicemail is set to 'false'",
    "properties": {
      "actionType": {
        "type": "string",
        "description": "Specifies the action that should be executed on a missed call. It can either be playing greeting message and disconnection, or sending call to a calling group. If 'ConnectToExtension' is set, then calling group extension should be specified",
        "enum": [
          "PlayGreetingAndDisconnect",
          "ConnectToExtension",
          "ConnectToExternalNumber"
        ]
      },
      "extension": {
        "$ref": "#/components/schemas/MissedCallExtensionInfo"
      }
    },
    "name": "MissedCallInfo"
  },
  {
    "type": "object",
    "properties": {
      "uri": {
        "type": "string",
        "format": "uri",
        "description": "Canonical URI to an answering rule resource",
        "example": "https://platform.ringcentral.com/restapi/v1.0/account/240913004/extension/240972004/answering-rule/business-hours-rule"
      },
      "id": {
        "type": "string",
        "description": "Internal identifier of an answering rule",
        "example": "business-hours-rule"
      },
      "type": {
        "type": "string",
        "description": "Type of an answering rule",
        "enum": [
          "BusinessHours",
          "AfterHours",
          "Custom"
        ]
      },
      "name": {
        "type": "string",
        "description": "Name of an answering rule specified by user"
      },
      "enabled": {
        "type": "boolean",
        "description": "Specifies if an answering rule is active or inactive"
      },
      "sharedLines": {
        "$ref": "#/components/schemas/SharedLinesInfo"
      }
    },
    "name": "UserAnsweringRuleListRecord"
  },
  {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "Identifier of an answering rule"
      },
      "forwarding": {
        "$ref": "#/components/schemas/ForwardingInfoCreateRuleRequest"
      },
      "enabled": {
        "type": "boolean",
        "description": "Specifies if the rule is active or inactive. The default value is 'True'"
      },
      "name": {
        "type": "string",
        "description": "Name of an answering rule specified by user"
      },
      "callers": {
        "type": "array",
        "description": "Answering rule will be applied when calls are received from the specified caller(s)",
        "items": {
          "$ref": "#/components/schemas/CallersInfoRequest"
        }
      },
      "calledNumbers": {
        "type": "array",
        "description": "Answering rules are applied when calling to selected number(s)",
        "items": {
          "$ref": "#/components/schemas/CalledNumberInfo"
        }
      },
      "schedule": {
        "$ref": "#/components/schemas/ScheduleInfo"
      },
      "callHandlingAction": {
        "type": "string",
        "description": "Specifies how incoming calls are forwarded",
        "enum": [
          "ForwardCalls",
          "UnconditionalForwarding",
          "AgentQueue",
          "TransferToExtension",
          "TakeMessagesOnly",
          "PlayAnnouncementOnly",
          "SharedLines"
        ]
      },
      "type": {
        "type": "string",
        "description": "Type of an answering rule",
        "enum": [
          "BusinessHours",
          "AfterHours",
          "Custom"
        ]
      },
      "unconditionalForwarding": {
        "$ref": "#/components/schemas/UnconditionalForwardingInfo"
      },
      "queue": {
        "$ref": "#/components/schemas/QueueInfo"
      },
      "voicemail": {
        "$ref": "#/components/schemas/VoicemailInfo"
      },
      "missedCall": {
        "$ref": "#/components/schemas/MissedCallInfo"
      },
      "greetings": {
        "type": "array",
        "description": "Greetings applied for an answering rule; only predefined greetings\ncan be applied, see Dictionary Greeting List\n",
        "items": {
          "$ref": "#/components/schemas/GreetingInfo"
        }
      },
      "screening": {
        "type": "string",
        "description": "Call screening status. 'Off' - no call screening; 'NoCallerId'\n- if caller ID is missing, then callers are asked to say their name before\nconnecting; 'UnknownCallerId' - if caller ID is not in contact list, then\ncallers are asked to say their name before connecting; 'Always' - the\ncallers are always asked to say their name before connecting. The default\nvalue is 'Off'\n",
        "enum": [
          "Off",
          "NoCallerId",
          "UnknownCallerId",
          "Always"
        ],
        "default": "Off"
      },
      "showInactiveNumbers": {
        "type": "boolean",
        "description": "Indicates whether inactive numbers should be returned or not"
      },
      "transfer": {
        "$ref": "#/components/schemas/TransferredExtensionInfo"
      }
    },
    "name": "UpdateAnsweringRuleRequest"
  },
  {
    "type": "object",
    "properties": {
      "notifyMySoftPhones": {
        "type": "boolean",
        "description": "Specifies if the first ring on desktop/mobile apps is enabled. The default value is 'True'"
      },
      "notifyAdminSoftPhones": {
        "type": "boolean",
        "description": "Deprecated parameter. Specifies if the administrator's softphone (desktop application) is notified before forwarding the incoming call to desk phones and forwarding numbers. The default value is 'True'.",
        "deprecated": true
      },
      "softPhonesRingCount": {
        "type": "integer",
        "format": "int32",
        "description": "Specifies delay between ring on apps and starting of a call forwarding. To activate this parameter use the value > 0, and turn off the `softPhonesAlwaysRing` setting. If the value is 1 or 0, the `softPhonesAlwaysRing` setting cannot be turned off"
      },
      "softPhonesAlwaysRing": {
        "type": "boolean",
        "description": "Specifies that desktop and mobile applications of the user will ring till the end of their forwarding list. If set to 'True' then `softPhonesRingCount` is ignored",
        "default": true
      },
      "ringingMode": {
        "type": "string",
        "description": "Specifies the order in which forwarding numbers ring. 'Sequentially' means that forwarding numbers are ringing one at a time, in order of priority. 'Simultaneously' means that forwarding numbers are ringing all at the same time. The default value is 'Sequentially'",
        "enum": [
          "Sequentially",
          "Simultaneously"
        ]
      },
      "rules": {
        "type": "array",
        "description": "Information on a call forwarding rule",
        "items": {
          "$ref": "#/components/schemas/ForwardingRuleCreateRequest"
        }
      },
      "mobileTimeout": {
        "type": "boolean",
        "description": "Deprecated parameter. Specifies if mobile timeout is activated for the rule",
        "deprecated": true
      }
    },
    "description": "Forwarding parameters. Returned if 'ForwardCalls' is specified in 'callHandlingAction'. These settings determine the forwarding numbers to which the call will be forwarded",
    "name": "ForwardingInfoCreateRuleRequest"
  },
  {
    "type": "object",
    "properties": {
      "index": {
        "type": "integer",
        "format": "int32",
        "description": "Forwarding number (or group) ordinal. Not returned for inactive numbers"
      },
      "ringCount": {
        "type": "integer",
        "format": "int32",
        "description": "Number of rings for a forwarding number (or group). For inactive\nnumbers the default value ('4') is returned\n"
      },
      "enabled": {
        "type": "boolean",
        "description": "Phone number status"
      },
      "forwardingNumbers": {
        "type": "array",
        "description": "Forwarding number (or group) data",
        "items": {
          "$ref": "#/components/schemas/ForwardingNumberInfoRulesCreateRuleRequest"
        }
      }
    },
    "name": "ForwardingRuleCreateRequest"
  },
  {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "Internal identifier of a forwarding number"
      },
      "type": {
        "type": "string",
        "description": "Forwarding phone number type",
        "enum": [
          "Home",
          "Mobile",
          "Work",
          "PhoneLine",
          "Outage",
          "Other",
          "BusinessMobilePhone",
          "ExternalCarrier"
        ]
      },
      "phoneNumber": {
        "type": "string",
        "description": "Forwarding/Call flip phone number"
      },
      "label": {
        "type": "string",
        "description": "Forwarding/Call flip number title"
      }
    },
    "name": "ForwardingNumberInfoRulesCreateRuleRequest"
  },
  {
    "type": "object",
    "properties": {
      "uri": {
        "type": "string",
        "format": "uri",
        "description": "Canonical URI to an answering rule resource"
      },
      "id": {
        "type": "string",
        "description": "Internal identifier of an answering rule"
      },
      "type": {
        "type": "string",
        "description": "Type of an answering rule",
        "enum": [
          "BusinessHours",
          "AfterHours",
          "Custom"
        ]
      },
      "name": {
        "type": "string",
        "description": "Name of an answering rule specified by user"
      },
      "enabled": {
        "type": "boolean",
        "description": "Specifies if an answering rule is active or inactive"
      },
      "schedule": {
        "$ref": "#/components/schemas/ScheduleInfo"
      },
      "calledNumbers": {
        "type": "array",
        "description": "Answering rules are applied when calling to selected number(s)",
        "items": {
          "$ref": "#/components/schemas/CalledNumberInfo"
        }
      },
      "callers": {
        "type": "array",
        "description": "Answering rules are applied when calls are received from specified caller(s)",
        "items": {
          "$ref": "#/components/schemas/CallersInfo"
        }
      },
      "callHandlingAction": {
        "type": "string",
        "description": "Specifies how incoming calls are forwarded",
        "enum": [
          "ForwardCalls",
          "UnconditionalForwarding",
          "AgentQueue",
          "TransferToExtension",
          "TakeMessagesOnly",
          "PlayAnnouncementOnly",
          "SharedLines"
        ]
      },
      "forwarding": {
        "$ref": "#/components/schemas/ForwardingInfo"
      },
      "unconditionalForwarding": {
        "$ref": "#/components/schemas/UnconditionalForwardingInfo"
      },
      "queue": {
        "$ref": "#/components/schemas/QueueInfo"
      },
      "transfer": {
        "$ref": "#/components/schemas/TransferredExtensionInfo"
      },
      "voicemail": {
        "$ref": "#/components/schemas/VoicemailInfo"
      },
      "greetings": {
        "type": "array",
        "description": "Greetings applied for an answering rule; only predefined greetings can be applied, see Dictionary Greeting List",
        "items": {
          "$ref": "#/components/schemas/GreetingInfo"
        }
      },
      "screening": {
        "type": "string",
        "description": "Call screening status. 'Off' - no call screening; 'NoCallerId' - if caller ID is missing, then callers are asked to say their name before connecting; 'UnknownCallerId' - if caller ID is not in contact list, then callers are asked to say their name before connecting; 'Always' - the callers are always asked to say their name before connecting. The default value is 'Off'",
        "enum": [
          "Off",
          "NoCallerId",
          "UnknownCallerId",
          "Always"
        ],
        "default": "Off"
      },
      "sharedLines": {
        "$ref": "#/components/schemas/SharedLinesInfo"
      },
      "missedCall": {
        "$ref": "#/components/schemas/MissedCallInfo"
      }
    },
    "name": "AnsweringRuleInfo"
  },
  {
    "type": "object",
    "properties": {
      "type": {
        "type": "string",
        "description": "If 'PhoneNumber' value is specified, then a certain phone number\nis shown as a caller ID when using this telephony feature. If 'Blocked'\nvalue is specified, then a caller ID is hidden. The value 'CurrentLocation'\ncan be specified for 'RingOut' feature only. The default is 'PhoneNumber'\n= ['PhoneNumber', 'Blocked', 'CurrentLocation']\n"
      },
      "phoneInfo": {
        "$ref": "#/components/schemas/CallerIdPhoneInfoRequest"
      }
    },
    "name": "CallerIdByFeatureInfoRequest"
  },
  {
    "type": "object",
    "properties": {
      "uri": {
        "type": "string",
        "format": "uri",
        "description": "Canonical URL of a caller ID resource"
      },
      "byDevice": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/CallerIdByDeviceRequest"
        }
      },
      "byFeature": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/CallerIdByFeatureRequest"
        }
      },
      "extensionNameForOutboundCalls": {
        "type": "boolean",
        "description": "If 'True', then the user first name and last name will be used\nas caller ID when making outbound calls from extension\n"
      },
      "extensionNumberForInternalCalls": {
        "type": "boolean",
        "description": "If 'True', then extension number will be used as caller ID\nwhen making internal calls\n"
      }
    },
    "name": "ExtensionCallerIdInfoRequest"
  },
  {
    "type": "object",
    "properties": {
      "feature": {
        "type": "string",
        "enum": [
          "RingOut",
          "RingMe",
          "CallFlip",
          "FaxNumber",
          "AdditionalSoftphone",
          "Alternate",
          "CommonPhone",
          "MobileApp",
          "Delegated"
        ]
      },
      "callerId": {
        "$ref": "#/components/schemas/CallerIdByFeatureInfo"
      }
    },
    "description": "Caller ID settings by feature",
    "name": "CallerIdByFeature"
  },
  {
    "type": "object",
    "properties": {
      "type": {
        "type": "string",
        "description": "If 'PhoneNumber' value is specified, then a certain phone number\nis shown as a caller ID when using this telephony feature. If 'Blocked'\nvalue is specified, then a caller ID is hidden. The value 'CurrentLocation'\ncan be specified for 'RingOut' feature only. The default is 'PhoneNumber'\n= ['PhoneNumber', 'Blocked', 'CurrentLocation']\n"
      },
      "phoneInfo": {
        "$ref": "#/components/schemas/CallerIdPhoneInfo"
      }
    },
    "name": "CallerIdByFeatureInfo"
  },
  {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "Internal identifier of a phone number"
      }
    },
    "name": "CallerIdPhoneInfoRequest"
  },
  {
    "type": "object",
    "properties": {
      "device": {
        "$ref": "#/components/schemas/CallerIdDeviceInfoRequest"
      },
      "callerId": {
        "$ref": "#/components/schemas/CallerIdByDeviceInfoRequest"
      }
    },
    "description": "Caller ID settings by device",
    "name": "CallerIdByDeviceRequest"
  },
  {
    "type": "object",
    "properties": {
      "feature": {
        "type": "string",
        "enum": [
          "RingOut",
          "RingMe",
          "CallFlip",
          "FaxNumber",
          "AdditionalSoftphone",
          "Alternate",
          "CommonPhone",
          "MobileApp",
          "Delegated"
        ]
      },
      "callerId": {
        "$ref": "#/components/schemas/CallerIdByFeatureInfoRequest"
      }
    },
    "description": "Caller ID settings by feature",
    "name": "CallerIdByFeatureRequest"
  },
  {
    "type": "object",
    "properties": {
      "type": {
        "type": "string",
        "description": "If 'PhoneNumber' value is specified, then a certain phone number\nis shown as a caller ID when using this telephony feature. If 'Blocked'\nvalue is specified, then a caller ID is hidden. The value 'CurrentLocation'\ncan be specified for 'RingOut' feature only. The default is 'PhoneNumber'\n= ['PhoneNumber', 'Blocked', 'CurrentLocation']\n"
      },
      "phoneInfo": {
        "$ref": "#/components/schemas/CallerIdPhoneInfo"
      }
    },
    "name": "CallerIdByDeviceInfo"
  },
  {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "Internal identifier of a phone number"
      },
      "uri": {
        "type": "string",
        "format": "uri",
        "description": "Link to a phone number resource"
      },
      "phoneNumber": {
        "type": "string",
        "description": "Phone number in [E.164](https://www.itu.int/rec/T-REC-E.164-201011-I)\n(with '+' sign) format\n"
      }
    },
    "name": "CallerIdPhoneInfo"
  },
  {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "Internal identifier of a device"
      },
      "uri": {
        "type": "string",
        "format": "uri",
        "description": "Link to a device resource"
      },
      "name": {
        "type": "string",
        "description": "Name of a device"
      }
    },
    "name": "CallerIdDeviceInfo"
  },
  {
    "type": "object",
    "properties": {
      "type": {
        "type": "string",
        "description": "If 'PhoneNumber' value is specified, then a certain phone number\nis shown as a caller ID when using this telephony feature. If 'Blocked'\nvalue is specified, then a caller ID is hidden. The value 'CurrentLocation'\ncan be specified for 'RingOut' feature only. The default is 'PhoneNumber'\n= ['PhoneNumber', 'Blocked', 'CurrentLocation']\n"
      },
      "phoneInfo": {
        "$ref": "#/components/schemas/CallerIdPhoneInfoRequest"
      }
    },
    "name": "CallerIdByDeviceInfoRequest"
  },
  {
    "type": "object",
    "properties": {
      "uri": {
        "type": "string",
        "format": "uri",
        "description": "Canonical URL of a caller ID resource"
      },
      "byDevice": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/CallerIdByDevice"
        }
      },
      "byFeature": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/CallerIdByFeature"
        }
      },
      "extensionNameForOutboundCalls": {
        "type": "boolean",
        "description": "If 'True', then user first name and last name will be used\nas caller ID when making outbound calls from extension\n"
      },
      "extensionNumberForInternalCalls": {
        "type": "boolean",
        "description": "If 'True', then extension number will be used as caller ID\nwhen making internal calls\n"
      }
    },
    "name": "ExtensionCallerIdInfo"
  },
  {
    "type": "object",
    "properties": {
      "device": {
        "$ref": "#/components/schemas/CallerIdDeviceInfo"
      },
      "callerId": {
        "$ref": "#/components/schemas/CallerIdByDeviceInfo"
      }
    },
    "description": "Caller ID settings by device",
    "name": "CallerIdByDevice"
  },
  {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "Internal identifier of a device"
      }
    },
    "name": "CallerIdDeviceInfoRequest"
  },
  {
    "type": "object",
    "properties": {
      "uri": {
        "type": "string",
        "format": "uri"
      },
      "id": {
        "type": "string"
      }
    },
    "name": "RoleIdResource"
  },
  {
    "type": "object",
    "properties": {
      "uri": {
        "type": "string",
        "format": "uri"
      },
      "permissions": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/ActivePermissionResource"
        }
      }
    },
    "name": "AuthProfileResource"
  },
  {
    "type": "object",
    "properties": {
      "permission": {
        "$ref": "#/components/schemas/PermissionIdResource"
      },
      "effectiveRole": {
        "$ref": "#/components/schemas/RoleIdResource"
      },
      "scopes": {
        "type": "array",
        "items": {
          "type": "string",
          "enum": [
            "Account",
            "AllExtensions",
            "Federation",
            "NonUserExtensions",
            "RoleBased",
            "Self",
            "UserExtensions"
          ]
        }
      }
    },
    "name": "ActivePermissionResource"
  },
  {
    "type": "object",
    "properties": {
      "uri": {
        "type": "string",
        "format": "uri"
      },
      "successful": {
        "type": "boolean",
        "default": false
      },
      "details": {
        "$ref": "#/components/schemas/ActivePermissionResource"
      }
    },
    "name": "AuthProfileCheckResource"
  },
  {
    "type": "object",
    "properties": {
      "name": {
        "type": "string",
        "description": "Name of a new personal emergency response location"
      },
      "address": {
        "$ref": "#/components/schemas/EmergencyLocationAddressInfo"
      }
    },
    "name": "CreateUserEmergencyLocationRequest"
  },
  {
    "type": "object",
    "properties": {
      "records": {
        "type": "array",
        "description": "List of queues where an extension is an agent",
        "items": {
          "$ref": "#/components/schemas/QueueShortInfoResource"
        }
      }
    },
    "name": "UserCallQueues"
  },
  {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "Call queue extension identifier"
      },
      "name": {
        "type": "string",
        "description": "Call queue name (read-only)"
      }
    },
    "name": "QueueShortInfoResource"
  },
  {
    "type": "object",
    "properties": {
      "uri": {
        "type": "string",
        "format": "uri"
      },
      "records": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/MeetingResponseResource"
        }
      },
      "paging": {
        "$ref": "#/components/schemas/MeetingsPagingInfo"
      },
      "navigation": {
        "$ref": "#/components/schemas/MeetingsNavigationInfo"
      }
    },
    "name": "MeetingsResource"
  },
  {
    "type": "object",
    "properties": {
      "page": {
        "type": "integer",
        "format": "int32"
      },
      "totalPages": {
        "type": "integer",
        "format": "int32"
      },
      "perPage": {
        "type": "integer",
        "format": "int32"
      },
      "totalElements": {
        "type": "integer",
        "format": "int32"
      },
      "pageStart": {
        "type": "integer",
        "format": "int32"
      },
      "pageEnd": {
        "type": "integer",
        "format": "int32"
      }
    },
    "name": "MeetingsPagingInfo"
  },
  {
    "type": "object",
    "properties": {
      "topic": {
        "type": "string",
        "description": "Custom topic of a meeting"
      },
      "meetingType": {
        "type": "string",
        "enum": [
          "Instant",
          "Scheduled",
          "ScheduledRecurring",
          "Recurring"
        ]
      },
      "schedule": {
        "$ref": "#/components/schemas/MeetingScheduleResource"
      },
      "password": {
        "type": "string",
        "format": "password",
        "description": "Meeting password"
      },
      "host": {
        "$ref": "#/components/schemas/HostInfoRequest"
      },
      "allowJoinBeforeHost": {
        "type": "boolean",
        "default": false
      },
      "startHostVideo": {
        "type": "boolean",
        "default": false
      },
      "startParticipantsVideo": {
        "type": "boolean",
        "description": "Starting meetings with participant video on/off (true/false)",
        "default": false
      },
      "usePersonalMeetingId": {
        "type": "boolean",
        "description": "If true, then personal user's meeting ID is applied for creation of this meeting"
      },
      "audioOptions": {
        "type": "array",
        "items": {
          "type": "string",
          "enum": [
            "Phone",
            "ComputerAudio"
          ]
        }
      },
      "recurrence": {
        "$ref": "#/components/schemas/RecurrenceInfo"
      },
      "autoRecordType": {
        "type": "string",
        "description": "Automatic record type",
        "default": "none",
        "enum": [
          "local",
          "cloud",
          "none"
        ]
      },
      "enforceLogin": {
        "type": "boolean",
        "description": "If true, then only signed-in users can join this meeting"
      },
      "muteParticipantsOnEntry": {
        "type": "boolean",
        "description": "If true, then participants are muted on entry"
      },
      "enableWaitingRoom": {
        "type": "boolean",
        "description": "If true, then the waiting room for participants is enabled"
      },
      "globalDialInCountries": {
        "type": "array",
        "description": "List of global dial-in countries (eg. US, UK, AU, etc.)",
        "items": {
          "type": "string"
        }
      },
      "alternativeHosts": {
        "type": "string"
      }
    },
    "name": "MeetingRequestResource"
  },
  {
    "type": "object",
    "properties": {
      "uri": {
        "type": "string",
        "format": "uri"
      }
    },
    "name": "MeetingsNavigationInfoUri"
  },
  {
    "type": "object",
    "properties": {
      "nextPage": {
        "$ref": "#/components/schemas/MeetingsNavigationInfoUri"
      },
      "previousPage": {
        "$ref": "#/components/schemas/MeetingsNavigationInfoUri"
      },
      "firstPage": {
        "$ref": "#/components/schemas/MeetingsNavigationInfoUri"
      },
      "lastPage": {
        "$ref": "#/components/schemas/MeetingsNavigationInfoUri"
      }
    },
    "name": "MeetingsNavigationInfo"
  },
  {
    "type": "object",
    "properties": {
      "recording": {
        "$ref": "#/components/schemas/UserMeetingRecordingSetting"
      },
      "scheduleMeeting": {
        "$ref": "#/components/schemas/ScheduleUserMeetingInfo"
      },
      "telephony": {
        "$ref": "#/components/schemas/TelephonyUserMeetingSettings"
      },
      "inMeetings": {
        "$ref": "#/components/schemas/UserInMeetingResponse"
      }
    },
    "name": "MeetingUserSettingsResponse"
  },
  {
    "type": "object",
    "properties": {
      "enforceLogin": {
        "type": "boolean",
        "description": "If true, then only signed-in users can join this meeting"
      },
      "startHostVideo": {
        "type": "boolean",
        "description": "Starting meetings with host video on/off (true/false)"
      },
      "startParticipantsVideo": {
        "type": "boolean",
        "description": "Starting meetings with participant video on/off (true/false)"
      },
      "audioOptions": {
        "type": "array",
        "description": "Determines how participants can join the audio channel of a meeting",
        "items": {
          "type": "string",
          "enum": [
            "Phone",
            "ComputerAudio",
            "ThirdParty"
          ]
        }
      },
      "allowJoinBeforeHost": {
        "type": "boolean",
        "description": "Allows participants to join the meeting before the host arrives"
      },
      "usePmiForScheduledMeetings": {
        "type": "boolean",
        "description": "Determines whether to use Personal Meeting ID (PMI) when scheduling a meeting"
      },
      "usePmiForInstantMeetings": {
        "type": "boolean",
        "description": "Determines whether to use Personal Meeting ID (PMI) when starting an instant meeting"
      },
      "requirePasswordForSchedulingNewMeetings": {
        "type": "boolean",
        "description": "A password will be generated when scheduling a meeting and participants will require password to join a meeting. The Personal Meeting ID (PMI) meetings are not included"
      },
      "requirePasswordForScheduledMeetings": {
        "type": "boolean",
        "description": "Specifies whether to require a password for meetings which have already been scheduled"
      },
      "defaultPasswordForScheduledMeetings": {
        "type": "string",
        "description": "Password for already scheduled meetings. Users can set it individually"
      },
      "requirePasswordForInstantMeetings": {
        "type": "boolean",
        "description": "A random password will be generated for an instant meeting, if set to 'True'. If you use PMI for your instant meetings, this option will be disabled"
      },
      "requirePasswordForPmiMeetings": {
        "type": "string",
        "description": "Specifies whether to require a password for meetings using Personal Meeting ID (PMI). The supported values are: 'none', 'all' and 'jbhOnly' (joined before host only)",
        "enum": [
          "all",
          "none",
          "jbhOnly"
        ]
      },
      "pmiPassword": {
        "type": "string",
        "description": "The default password for Personal Meeting ID (PMI) meetings"
      },
      "pstnPasswordProtected": {
        "type": "boolean",
        "description": "Specifies whether to generate and require a password for participants joining by phone"
      },
      "muteParticipantsOnEntry": {
        "type": "boolean"
      }
    },
    "description": "Scheduling meeting settings locked on account level || Settings defining how to schedule user meetings",
    "name": "ScheduleUserMeetingInfo"
  },
  {
    "type": "object",
    "properties": {
      "countryCode": {
        "type": "string"
      },
      "countryName": {
        "type": "string"
      },
      "checked": {
        "type": "boolean"
      },
      "order": {
        "type": "integer",
        "format": "int32"
      }
    },
    "name": "GlobalDialInCountryResponse"
  },
  {
    "type": "object",
    "properties": {
      "localRecording": {
        "type": "boolean",
        "description": "Allows hosts and participants to record a meeting to a local file"
      },
      "cloudRecording": {
        "type": "boolean",
        "description": "Allows hosts to record and save a meeting/webinar in the cloud"
      },
      "recordSpeakerView": {
        "type": "boolean",
        "description": "Allows to record active speaker with the shared screen",
        "default": false
      },
      "recordGalleryView": {
        "type": "boolean",
        "description": "Allows to record gallery view with the shared screen",
        "default": false
      },
      "recordAudioFile": {
        "type": "boolean",
        "description": "Allows to record an audio-only file",
        "default": false
      },
      "saveChatText": {
        "type": "boolean",
        "description": "Allows to save chat text from a meeting",
        "default": false
      },
      "showTimestamp": {
        "type": "boolean",
        "description": "Allows to show timestamp on video",
        "default": false
      },
      "autoRecording": {
        "type": "string",
        "description": "Automatic recording (local/cloud/none) of meetings as they start",
        "default": "local",
        "enum": [
          "local",
          "cloud",
          "none"
        ]
      },
      "autoDeleteCmr": {
        "type": "string",
        "description": "Automatic deletion of cloud recordings",
        "default": "false"
      },
      "autoDeleteCmrDays": {
        "type": "integer",
        "format": "int32",
        "description": "A specified number of days for automatic deletion of cloud recordings, the value range is 1-60"
      }
    },
    "description": "Meeting recording settings locked on account level",
    "name": "UserMeetingRecordingSetting"
  },
  {
    "type": "object",
    "properties": {
      "enableWaitingRoom": {
        "type": "boolean"
      },
      "breakoutRoom": {
        "type": "boolean"
      },
      "chat": {
        "type": "boolean"
      },
      "polling": {
        "type": "boolean"
      },
      "annotation": {
        "type": "boolean"
      },
      "virtualBackground": {
        "type": "boolean"
      },
      "screenSharing": {
        "type": "boolean"
      },
      "requestPermissionToUnmute": {
        "type": "boolean"
      }
    },
    "name": "UserInMeetingResponse"
  },
  {
    "type": "object",
    "properties": {
      "thirdPartyAudio": {
        "type": "boolean",
        "description": "ThirdParty audio option"
      },
      "audioConferenceInfo": {
        "type": "boolean",
        "description": "Users can join the meeting using the existing 3rd party audio configuration"
      },
      "globalDialCountries": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/GlobalDialInCountryResponse"
        }
      }
    },
    "name": "TelephonyUserMeetingSettings"
  },
  {
    "type": "object",
    "properties": {
      "invitation": {
        "type": "string",
        "description": "Meeting invitation"
      }
    },
    "name": "PublicMeetingInvitationResponse"
  },
  {
    "type": "object",
    "properties": {
      "uri": {
        "type": "string",
        "format": "uri"
      },
      "id": {
        "type": "string"
      },
      "name": {
        "type": "string"
      },
      "isoCode": {
        "type": "string"
      },
      "callingCode": {
        "type": "string"
      },
      "emergencyCalling": {
        "type": "boolean",
        "default": false
      },
      "numberSelling": {
        "type": "boolean",
        "default": false
      },
      "loginAllowed": {
        "type": "boolean",
        "default": false
      }
    },
    "name": "MeetingsCountryResource"
  },
  {
    "type": "object",
    "properties": {
      "uri": {
        "type": "string",
        "format": "uri"
      },
      "userId": {
        "type": "string"
      },
      "accountId": {
        "type": "string"
      },
      "userType": {
        "type": "integer",
        "format": "int64"
      },
      "userToken": {
        "type": "string"
      },
      "hostKey": {
        "type": "string"
      },
      "personalMeetingId": {
        "type": "string"
      },
      "personalLink": {
        "type": "string",
        "description": "Link to the user's personal meeting room, used as an alias for personal meeting URL (with personal meeting ID)",
        "example": "https://meetings.ringcentral.com/my/jsmith"
      },
      "personalLinkName": {
        "type": "string"
      },
      "usePmiForInstantMeetings": {
        "type": "boolean",
        "description": "Enables using personal meeting ID for instant meetings",
        "default": false
      }
    },
    "name": "MeetingExternalUserInfoResource"
  },
  {
    "type": "object",
    "properties": {
      "phoneNumber": {
        "type": "string"
      },
      "formattedNumber": {
        "type": "string"
      },
      "location": {
        "type": "string"
      },
      "country": {
        "$ref": "#/components/schemas/MeetingsCountryResource"
      }
    },
    "name": "DialInNumberResource"
  },
  {
    "type": "object",
    "properties": {
      "uri": {
        "type": "string",
        "format": "uri"
      },
      "supportUri": {
        "type": "string",
        "format": "uri"
      },
      "intlDialInNumbersUri": {
        "type": "string",
        "format": "uri"
      },
      "externalUserInfo": {
        "$ref": "#/components/schemas/MeetingExternalUserInfoResource"
      },
      "dialInNumbers": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/DialInNumberResource"
        }
      }
    },
    "name": "MeetingServiceInfoResource"
  },
  {
    "type": "object",
    "properties": {
      "externalUserInfo": {
        "$ref": "#/components/schemas/MeetingExternalUserInfoResource"
      }
    },
    "name": "MeetingServiceInfoRequest"
  },
  {
    "type": "object",
    "properties": {
      "uri": {
        "type": "string",
        "format": "uri",
        "description": "Link to the forwarding number list resource"
      },
      "records": {
        "type": "array",
        "description": "List of forwarding phone numbers",
        "items": {
          "$ref": "#/components/schemas/ForwardingNumberInfo"
        }
      },
      "navigation": {
        "$ref": "#/components/schemas/PageNavigationModel"
      },
      "paging": {
        "$ref": "#/components/schemas/EnumeratedPagingModel"
      }
    },
    "name": "GetExtensionForwardingNumberListResponse"
  },
  {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "Internal identifier of the other extension device"
      }
    },
    "description": "Forwarding device information. Applicable for 'PhoneLine' type only.\nCannot be specified together with 'phoneNumber' parameter\n",
    "name": "CreateForwardingNumberDeviceInfo"
  },
  {
    "type": "object",
    "properties": {
      "forwardingNumberId": {
        "type": "string",
        "description": "Forwarding number id"
      }
    },
    "name": "ForwardingNumberId"
  },
  {
    "type": "object",
    "properties": {
      "records": {
        "type": "array",
        "description": "List of forwarding number IDs",
        "items": {
          "$ref": "#/components/schemas/ForwardingNumberId"
        }
      }
    },
    "name": "DeleteForwardingNumbersRequest"
  },
  {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "Internal identifier of a forwarding/call flip phone number"
      },
      "uri": {
        "type": "string",
        "format": "uri",
        "description": "Canonical URI of a forwarding/call flip phone number"
      },
      "phoneNumber": {
        "type": "string",
        "description": "Forwarding/Call flip phone number"
      },
      "label": {
        "type": "string",
        "description": "Forwarding/Call flip number title"
      },
      "features": {
        "type": "array",
        "description": "Type of option this phone number is used for. Multiple values are accepted",
        "items": {
          "type": "string",
          "enum": [
            "CallFlip",
            "CallForwarding"
          ]
        }
      },
      "flipNumber": {
        "type": "string",
        "description": "Number assigned to the call flip phone number, corresponds to the shortcut dial number"
      },
      "device": {
        "$ref": "#/components/schemas/CreateForwardingNumberDeviceInfo"
      },
      "type": {
        "type": "string",
        "description": "Forwarding phone number type",
        "enum": [
          "Home",
          "Mobile",
          "Work",
          "PhoneLine",
          "Outage",
          "Other",
          "BusinessMobilePhone",
          "ExternalCarrier"
        ]
      }
    },
    "name": "ForwardingNumberInfo"
  },
  {
    "type": "object",
    "properties": {
      "flipNumber": {
        "type": "integer",
        "format": "int32",
        "description": "Number assigned to the call flip phone number, corresponds to the shortcut dial number"
      },
      "phoneNumber": {
        "type": "string",
        "description": "Forwarding/Call flip phone number"
      },
      "label": {
        "type": "string",
        "description": "Forwarding/Call flip number title"
      },
      "type": {
        "type": "string",
        "description": "Forwarding/Call flip phone type. If specified, 'label' attribute value is ignored. The default value is 'Other'",
        "enum": [
          "PhoneLine",
          "Home",
          "Mobile",
          "Work",
          "Other"
        ]
      },
      "device": {
        "$ref": "#/components/schemas/CreateForwardingNumberDeviceInfo"
      }
    },
    "name": "CreateForwardingNumberRequest"
  },
  {
    "type": "object",
    "properties": {
      "uri": {
        "type": "string",
        "format": "uri"
      },
      "id": {
        "type": "string"
      },
      "phoneNumber": {
        "type": "string"
      },
      "label": {
        "type": "string"
      },
      "features": {
        "type": "array",
        "items": {
          "type": "string",
          "enum": [
            "CallFlip",
            "CallForwarding"
          ]
        }
      },
      "flipNumber": {
        "pattern": "[1-8]",
        "type": "string"
      },
      "type": {
        "type": "string",
        "description": "Forwarding phone number type",
        "enum": [
          "Home",
          "Mobile",
          "Work",
          "PhoneLine",
          "Outage",
          "Other"
        ]
      }
    },
    "name": "ForwardingNumberResource"
  },
  {
    "type": "object",
    "properties": {
      "phoneNumber": {
        "type": "string",
        "description": "Forwarding/Call flip phone number"
      },
      "label": {
        "type": "string",
        "description": "Forwarding/Call flip number title"
      },
      "flipNumber": {
        "type": "string",
        "description": "Number assigned to the call flip phone number, corresponds to the shortcut dial number"
      },
      "type": {
        "type": "string",
        "description": "Forwarding phone number type",
        "enum": [
          "Home",
          "Mobile",
          "Work",
          "PhoneLine",
          "Outage",
          "Other",
          "BusinessMobilePhone",
          "ExternalCarrier"
        ]
      }
    },
    "name": "UpdateForwardingNumberRequest"
  },
  {
    "type": "object",
    "properties": {
      "id": {
        "type": "integer",
        "description": "Internal identifier of a message attachment",
        "format": "int64"
      },
      "uri": {
        "type": "string",
        "format": "uri",
        "description": "Canonical URI of a message attachment"
      },
      "type": {
        "type": "string",
        "description": "Type of a message attachment",
        "enum": [
          "AudioRecording",
          "AudioTranscription",
          "Text",
          "SourceDocument",
          "RenderedDocument",
          "MmsAttachment"
        ]
      },
      "contentType": {
        "type": "string",
        "description": "MIME type for a given attachment, for instance 'audio/wav'"
      },
      "filename": {
        "type": "string",
        "description": "Name of a file attached"
      },
      "size": {
        "type": "integer",
        "format": "int32",
        "description": "Size of an attachment in bytes"
      }
    },
    "name": "MessageAttachmentInfoIntId"
  },
  {
    "type": "object",
    "properties": {
      "id": {
        "type": "integer",
        "description": "Internal identifier of a message",
        "format": "int64"
      },
      "uri": {
        "type": "string",
        "format": "uri",
        "description": "Canonical URI of a message"
      },
      "type": {
        "type": "string",
        "description": "Message type - 'Fax'",
        "enum": [
          "Fax"
        ]
      },
      "from": {
        "$ref": "#/components/schemas/MessageStoreCallerInfoResponseFrom"
      },
      "to": {
        "type": "array",
        "description": "Recipient information",
        "items": {
          "$ref": "#/components/schemas/MessageStoreCallerInfoResponseTo"
        }
      },
      "creationTime": {
        "type": "string",
        "description": "Message creation datetime in ISO 8601 format including timezone,\nfor example 2016-03-10T18:07:52.534Z\n",
        "format": "date-time"
      },
      "readStatus": {
        "description": "Message read status",
        "type": "string",
        "enum": [
          "Read",
          "Unread"
        ]
      },
      "priority": {
        "type": "string",
        "description": "Message priority",
        "enum": [
          "Normal",
          "High"
        ]
      },
      "attachments": {
        "type": "array",
        "description": "List of message attachments",
        "items": {
          "$ref": "#/components/schemas/MessageAttachmentInfoIntId"
        }
      },
      "direction": {
        "type": "string",
        "enum": [
          "Inbound",
          "Outbound"
        ],
        "description": "Text message direction. Note that for some message types not all\ndirections are allowed. For example voicemail messages can\nbe only inbound\n"
      },
      "availability": {
        "type": "string",
        "enum": [
          "Alive",
          "Deleted",
          "Purged"
        ],
        "description": "Message availability status. Message in 'Deleted' state is still\npreserved with all its attachments and can be restored. 'Purged' means\nthat all attachments are already deleted and the message itself is about\nto be physically deleted shortly\n"
      },
      "messageStatus": {
        "type": "string",
        "description": "Message status. Different message types may have different\nallowed status values. For outbound faxes the aggregated message status\nis returned. If, for outbound message, a status for at least one recipient is 'Queued', then\nthe 'Queued' value is returned. If a status for at least one recipient is\n'SendingFailed', then the 'SendingFailed' value is returned. In other cases\nthe 'Sent' status is returned\n",
        "enum": [
          "Queued",
          "Sent",
          "Delivered",
          "DeliveryFailed",
          "SendingFailed",
          "Received"
        ]
      },
      "faxResolution": {
        "type": "string",
        "description": "Fax only. Resolution of a fax message. 'High' for black and\nwhite image scanned at 200 dpi, 'Low' for black and white image scanned\nat 100 dpi\n",
        "enum": [
          "High",
          "Low"
        ]
      },
      "faxPageCount": {
        "type": "integer",
        "format": "int32",
        "description": "Page count in a fax message"
      },
      "lastModifiedTime": {
        "type": "string",
        "description": "Datetime when the message was modified on server in ISO 8601\nformat including timezone, for example 2016-03-10T18:07:52.534Z\n",
        "format": "date-time"
      },
      "coverIndex": {
        "type": "integer",
        "format": "int32",
        "description": "Cover page identifier. If `coverIndex` is set to '0' (zero), a cover\npage is not attached. For a list of available cover page identifiers\n(1-13) please call the Fax Cover Pages method. If not specified,\nthe default cover page is attached (which is configured in\n'Outbound Fax Settings')\n"
      },
      "coverPageText": {
        "type": "string",
        "description": "Cover page text, entered by a fax sender and printed on a\ncover page. Maximum length is limited to 1024 symbols\n"
      }
    },
    "name": "FaxResponse"
  },
  {
    "type": "object",
    "description": "Notification payload body",
    "properties": {
      "extensionId": {
        "type": "string",
        "description": "Internal identifier of an extension",
        "default": "~"
      },
      "telephonyStatus": {
        "type": "string",
        "description": "Telephony presence status. Returned if telephony status is changed.",
        "enum": [
          "NoCall",
          "CallConnected",
          "Ringing",
          "OnHold",
          "ParkedCall"
        ]
      },
      "activeCalls": {
        "type": "array",
        "description": "List of the latest 7 active calls on extension",
        "items": {
          "$ref": "#/components/schemas/ActiveCallInfo"
        }
      },
      "sequence": {
        "type": "integer",
        "format": "int32",
        "description": "Order number of a notification to state the chronology"
      },
      "presenceStatus": {
        "type": "string",
        "description": "Aggregated presence status, calculated from a number of sources",
        "enum": [
          "Offline",
          "Busy",
          "Available"
        ]
      },
      "userStatus": {
        "type": "string",
        "description": "User-defined presence status (as previously published by the user)",
        "enum": [
          "Offline",
          "Busy",
          "Available"
        ]
      },
      "meetingStatus": {
        "type": "string",
        "description": "Meetings presence status",
        "enum": [
          "Connected",
          "Disconnected"
        ]
      },
      "dndStatus": {
        "type": "string",
        "description": "Extended DnD (Do not Disturb) status",
        "enum": [
          "TakeAllCalls",
          "DoNotAcceptAnyCalls",
          "DoNotAcceptDepartmentCalls",
          "TakeDepartmentCallsOnly"
        ]
      },
      "allowSeeMyPresence": {
        "type": "boolean",
        "description": "If 'True' enables other extensions to see the extension presence status"
      },
      "ringOnMonitoredCall": {
        "type": "boolean",
        "description": "If 'True' enables to ring extension phone, if any user monitored by this extension is ringing"
      },
      "pickUpCallsOnHold": {
        "type": "boolean",
        "description": "If 'True' enables the extension user to pick up a monitored line on hold"
      },
      "totalActiveCalls": {
        "type": "integer",
        "format": "int32",
        "description": "Total number of active calls on extension at the present moment"
      },
      "ownerId": {
        "type": "string",
        "description": "Internal identifier of a subscription owner extension"
      }
    },
    "name": "DetailedExtensionPresenceWithSIPEventBody"
  },
  {
    "type": "object",
    "properties": {
      "aps": {
        "$ref": "#/components/schemas/APSInfo"
      },
      "event": {
        "type": "string",
        "description": "Event filter name"
      },
      "uuid": {
        "type": "string",
        "description": "Universally unique identifier of a notification"
      },
      "subscriptionId": {
        "type": "string",
        "description": "Internal identifier of a subscription"
      },
      "timestamp": {
        "type": "string",
        "format": "date-time",
        "description": "The timestamp of a call action in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format including timezone, for example 2016-03-10T18:07:52.534Z"
      },
      "extensionId": {
        "type": "string",
        "description": "Internal identifier of an extension",
        "default": "~"
      },
      "action": {
        "type": "string",
        "description": "Calling action, for example 'StartRing'"
      },
      "sessionId": {
        "type": "string",
        "description": "Identifier of a call session"
      },
      "serverId": {
        "type": "string",
        "description": "Identifier of a server"
      },
      "from": {
        "type": "string",
        "description": "Phone number of a caller. For GCM transport type '_from' property should be used"
      },
      "fromName": {
        "type": "string",
        "description": "Caller name"
      },
      "to": {
        "type": "string",
        "description": "Phone number of a callee"
      },
      "toName": {
        "type": "string",
        "description": "Callee name"
      },
      "sid": {
        "type": "string",
        "description": "Unique identifier of a session"
      },
      "toUrl": {
        "type": "string",
        "description": "SIP proxy registration name"
      },
      "srvLvl": {
        "type": "string",
        "description": "User data"
      },
      "srvLvlExt": {
        "type": "string",
        "description": "User data"
      },
      "recUrl": {
        "type": "string",
        "description": "File containing recorded caller name"
      },
      "pn_ttl": {
        "type": "integer",
        "format": "int32",
        "description": "Notification lifetime value in seconds, the default value is 30 seconds"
      },
      "ownerId": {
        "type": "string",
        "description": "Internal identifier of a subscription owner extension"
      }
    },
    "name": "IncomingCallEvent"
  },
  {
    "type": "object",
    "properties": {
      "uuid": {
        "type": "string",
        "description": "Universally unique identifier of a notification"
      },
      "event": {
        "type": "string",
        "description": "Event filter name"
      },
      "timestamp": {
        "type": "string",
        "format": "date-time",
        "description": "Timestamp when this notification was sent in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format including timezone, for example *2016-03-10T18:07:52.534Z*"
      },
      "subscriptionId": {
        "type": "string",
        "description": "Internal identifier of a subscription"
      },
      "body": {
        "$ref": "#/components/schemas/ExtensionPresenceEventBody"
      }
    },
    "name": "ExtensionPresenceEvent"
  },
  {
    "type": "object",
    "properties": {
      "uuid": {
        "type": "string",
        "description": "Universally unique identifier of a notification"
      },
      "event": {
        "type": "string",
        "description": "Event filter name"
      },
      "timestamp": {
        "type": "string",
        "format": "date-time",
        "description": "Timestamp when this notification was sent in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format including timezone, for example *2016-03-10T18:07:52.534Z*"
      },
      "subscriptionId": {
        "type": "string",
        "description": "Internal identifier of a subscription"
      },
      "body": {
        "$ref": "#/components/schemas/DetailedExtensionPresenceWithSIPEventBody"
      }
    },
    "name": "DetailedExtensionPresenceWithSIPEvent"
  },
  {
    "type": "object",
    "description": "APS (Apple Push Service) information/ priority data",
    "properties": {
      "content-available": {
        "type": "integer",
        "format": "int32",
        "description": "If the value is '1' then notification is turned on even if the application is in background"
      }
    },
    "name": "APSInfo"
  },
  {
    "type": "object",
    "description": "APNS (Apple Push Notification Service) information",
    "properties": {
      "aps": {
        "$ref": "#/components/schemas/APSInfo"
      }
    },
    "name": "APNSInfo"
  },
  {
    "type": "object",
    "description": "Notification payload body",
    "properties": {
      "extensionId": {
        "type": "string",
        "description": "Internal identifier of an extension",
        "default": "~"
      },
      "telephonyStatus": {
        "type": "string",
        "description": "Telephony presence status. Returned if telephony status is changed.",
        "enum": [
          "NoCall",
          "CallConnected",
          "Ringing",
          "OnHold",
          "ParkedCall"
        ]
      },
      "activeCalls": {
        "type": "array",
        "description": "List of the latest 7 active calls on extension",
        "items": {
          "$ref": "#/components/schemas/ActiveCallInfoWithoutSIP"
        }
      },
      "sequence": {
        "type": "integer",
        "format": "int32",
        "description": "Order number of a notification to state the chronology"
      },
      "presenceStatus": {
        "type": "string",
        "description": "Aggregated presence status, calculated from a number of sources",
        "enum": [
          "Offline",
          "Busy",
          "Available"
        ]
      },
      "userStatus": {
        "type": "string",
        "description": "User-defined presence status (as previously published by the user)",
        "enum": [
          "Offline",
          "Busy",
          "Available"
        ]
      },
      "meetingStatus": {
        "type": "string",
        "description": "Meetings presence status",
        "enum": [
          "Connected",
          "Disconnected"
        ]
      },
      "dndStatus": {
        "type": "string",
        "description": "Extended DnD (Do not Disturb) status",
        "enum": [
          "TakeAllCalls",
          "DoNotAcceptAnyCalls",
          "DoNotAcceptDepartmentCalls",
          "TakeDepartmentCallsOnly"
        ]
      },
      "allowSeeMyPresence": {
        "type": "boolean",
        "description": "If 'True' enables other extensions to see the extension presence status"
      },
      "ringOnMonitoredCall": {
        "type": "boolean",
        "description": "If 'True' enables to ring extension phone, if any user monitored by this extension is ringing"
      },
      "pickUpCallsOnHold": {
        "type": "boolean",
        "description": "If 'True' enables the extension user to pick up a monitored line on hold"
      },
      "totalActiveCalls": {
        "type": "integer",
        "format": "int32",
        "description": "Total number of active calls on extension at the present moment"
      },
      "ownerId": {
        "type": "string",
        "description": "Internal identifier of a subscription owner extension"
      }
    },
    "name": "DetailedExtensionPresenceEventBody"
  },
  {
    "type": "object",
    "properties": {
      "userStatus": {
        "type": "string",
        "enum": [
          "Offline",
          "Busy",
          "Available"
        ]
      },
      "dndStatus": {
        "type": "string",
        "enum": [
          "TakeAllCalls",
          "DoNotAcceptDepartmentCalls",
          "TakeDepartmentCallsOnly",
          "DoNotAcceptAnyCalls",
          "Unknown"
        ]
      },
      "message": {
        "maxLength": 75,
        "minLength": 0,
        "type": "string"
      },
      "allowSeeMyPresence": {
        "type": "boolean",
        "default": false
      },
      "ringOnMonitoredCall": {
        "type": "boolean",
        "default": false
      },
      "pickUpCallsOnHold": {
        "type": "boolean",
        "default": false
      }
    },
    "name": "PresenceInfoRequest"
  },
  {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "Internal identifier of a call"
      },
      "direction": {
        "type": "string",
        "description": "Call direction",
        "enum": [
          "Inbound",
          "Outbound"
        ]
      },
      "queueCall": {
        "type": "boolean",
        "description": "Identifies if a call belongs to the call queue"
      },
      "from": {
        "type": "string",
        "description": "Phone number or extension number of a caller. For GCM transport type '_from' property should be used"
      },
      "fromName": {
        "type": "string",
        "description": "Name of a caller"
      },
      "to": {
        "type": "string",
        "description": "Phone number or extension number of a callee"
      },
      "toName": {
        "type": "string",
        "description": "Name of a callee"
      },
      "partyId": {
        "type": "string",
        "description": "Internal identifier of a call party"
      },
      "startTime": {
        "type": "string",
        "format": "date-time",
        "description": "Time when the call is actually started"
      },
      "sessionId": {
        "type": "string",
        "description": "Internal identifier of a call session"
      },
      "telephonySessionId": {
        "type": "string",
        "description": "Telephony identifier of a call session"
      },
      "telephonyStatus": {
        "type": "string",
        "description": "Telephony call status",
        "enum": [
          "NoCall",
          "CallConnected",
          "Ringing",
          "OnHold",
          "ParkedCall"
        ]
      },
      "terminationType": {
        "type": "string",
        "description": "Type of call termination. Supported for calls in 'NoCall' status. If the returned termination type is 'intermediate' it means the call is not actually ended, the connection is established on one of the devices",
        "enum": [
          "final",
          "intermediate"
        ]
      },
      "callInfo": {
        "$ref": "#/components/schemas/CallInfoCQ"
      }
    },
    "name": "ActiveCallInfoWithoutSIP"
  },
  {
    "type": "object",
    "properties": {
      "extensionId": {
        "type": "string",
        "description": "Internal identifier of an extension. Optional parameter",
        "default": "~"
      },
      "telephonyStatus": {
        "type": "string",
        "description": "Telephony presence status. Returned if telephony status is changed.",
        "enum": [
          "NoCall",
          "CallConnected",
          "Ringing",
          "OnHold",
          "ParkedCall"
        ]
      },
      "sequence": {
        "type": "integer",
        "format": "int32",
        "description": "Order number of a notification to state the chronology"
      },
      "presenceStatus": {
        "type": "string",
        "description": "Aggregated presence status, calculated from a number of sources",
        "enum": [
          "Offline",
          "Busy",
          "Available"
        ]
      },
      "userStatus": {
        "type": "string",
        "description": "User-defined presence status (as previously published by the user)",
        "enum": [
          "Offline",
          "Busy",
          "Available"
        ]
      },
      "dndStatus": {
        "type": "string",
        "description": "Extended DnD (Do not Disturb) status",
        "enum": [
          "TakeAllCalls",
          "DoNotAcceptAnyCalls",
          "DoNotAcceptDepartmentCalls",
          "TakeDepartmentCallsOnly"
        ]
      },
      "allowSeeMyPresence": {
        "type": "boolean",
        "description": "If 'True' enables other extensions to see the extension presence status"
      },
      "ringOnMonitoredCall": {
        "type": "boolean",
        "description": "If 'True' enables to ring extension phone, if any user monitored by this extension is ringing"
      },
      "pickUpCallsOnHold": {
        "type": "boolean",
        "description": "If 'True' enables the extension user to pick up a monitored line on hold"
      },
      "ownerId": {
        "type": "string",
        "description": "Internal identifier of a subscription owner extension"
      }
    },
    "name": "ExtensionPresenceEventBody"
  },
  {
    "type": "object",
    "properties": {
      "uri": {
        "type": "string",
        "format": "uri",
        "description": "Link to the presence resource"
      },
      "userStatus": {
        "type": "string",
        "enum": [
          "Offline",
          "Busy",
          "Available"
        ]
      },
      "dndStatus": {
        "type": "string",
        "enum": [
          "TakeAllCalls",
          "DoNotAcceptDepartmentCalls",
          "TakeDepartmentCallsOnly",
          "DoNotAcceptAnyCalls",
          "Unknown"
        ]
      },
      "message": {
        "maxLength": 75,
        "minLength": 0,
        "type": "string"
      },
      "allowSeeMyPresence": {
        "type": "boolean",
        "default": false
      },
      "ringOnMonitoredCall": {
        "type": "boolean",
        "default": false
      },
      "pickUpCallsOnHold": {
        "type": "boolean",
        "default": false
      },
      "activeCalls": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/ActiveCallInfo"
        }
      },
      "extension": {
        "$ref": "#/components/schemas/GetPresenceExtensionInfo"
      },
      "meetingStatus": {
        "type": "string",
        "description": "Meetings presence status",
        "enum": [
          "Connected",
          "Disconnected"
        ]
      },
      "telephonyStatus": {
        "type": "string",
        "description": "Telephony presence status. Returned if telephony status is changed",
        "enum": [
          "NoCall",
          "CallConnected",
          "Ringing",
          "OnHold",
          "ParkedCall"
        ]
      },
      "presenceStatus": {
        "type": "string",
        "description": "Aggregated presence status, calculated from a number of sources",
        "enum": [
          "Offline",
          "Busy",
          "Available"
        ]
      }
    },
    "name": "PresenceInfoResponse"
  },
  {
    "type": "object",
    "properties": {
      "uuid": {
        "type": "string",
        "description": "Universally unique identifier of a notification"
      },
      "event": {
        "type": "string",
        "description": "Event filter name"
      },
      "timestamp": {
        "type": "string",
        "format": "date-time",
        "description": "Timestamp when this notification was sent in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format including timezone, for example *2016-03-10T18:07:52.534Z*"
      },
      "subscriptionId": {
        "type": "string",
        "description": "Internal identifier of a subscription"
      },
      "body": {
        "$ref": "#/components/schemas/DetailedExtensionPresenceEventBody"
      }
    },
    "name": "DetailedExtensionPresenceEvent"
  },
  {
    "type": "object",
    "properties": {
      "uuid": {
        "type": "string",
        "description": "Universally unique identifier of a notification"
      },
      "pn_apns": {
        "$ref": "#/components/schemas/APNSInfo"
      },
      "event": {
        "type": "string",
        "description": "Event filter name"
      },
      "subscriptionId": {
        "type": "string",
        "description": "Internal identifier of a subscription"
      },
      "timestamp": {
        "type": "string",
        "format": "date-time",
        "description": "The timestamp of a call action in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format including timezone, for example 2016-03-10T18:07:52.534Z"
      },
      "extensionId": {
        "type": "string",
        "description": "Internal identifier of an extension",
        "default": "~"
      },
      "action": {
        "type": "string",
        "description": "Calling action, for example 'StartRing'"
      },
      "sessionId": {
        "type": "string",
        "description": "Identifier of a call session"
      },
      "serverId": {
        "type": "string",
        "description": "Identifier of a server"
      },
      "from": {
        "type": "string",
        "description": "Phone number of a caller. For GCM transport type '_from' property should be used"
      },
      "fromName": {
        "type": "string",
        "description": "Caller name"
      },
      "to": {
        "type": "string",
        "description": "Phone number of a callee"
      },
      "toName": {
        "type": "string",
        "description": "Callee name"
      },
      "sid": {
        "type": "string",
        "description": "Unique identifier of a session"
      },
      "toUrl": {
        "type": "string",
        "description": "SIP proxy registration name"
      },
      "srvLvl": {
        "type": "string",
        "description": "User data"
      },
      "srvLvlExt": {
        "type": "string",
        "description": "User data"
      },
      "recUrl": {
        "type": "string",
        "description": "File containing recorded caller name"
      },
      "pn_ttl": {
        "type": "integer",
        "format": "int32",
        "description": "Notification lifetime value in seconds, the default value is 30 seconds"
      },
      "ownerId": {
        "type": "string",
        "description": "Internal identifier of a subscription owner extension"
      }
    },
    "name": "MissedCallEvent"
  },
  {
    "type": "object",
    "properties": {
      "uri": {
        "type": "string",
        "format": "uri"
      },
      "records": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/RolesBusinessSiteResource"
        }
      }
    },
    "name": "BusinessSiteCollectionResource"
  },
  {
    "type": "object",
    "properties": {
      "uri": {
        "type": "string",
        "format": "uri"
      },
      "id": {
        "type": "string"
      },
      "name": {
        "type": "string"
      },
      "isoCode": {
        "type": "string"
      },
      "callingCode": {
        "type": "string"
      },
      "emergencyCalling": {
        "type": "boolean"
      },
      "numberSelling": {
        "type": "boolean"
      },
      "loginAllowed": {
        "type": "boolean"
      },
      "freeSoftphoneLine": {
        "type": "boolean"
      },
      "signupAllowed": {
        "type": "boolean"
      }
    },
    "name": "RolesCountryResource"
  },
  {
    "type": "object",
    "properties": {
      "id": {
        "type": "string"
      },
      "code": {
        "type": "string"
      },
      "name": {
        "type": "string"
      },
      "symbol": {
        "type": "string"
      },
      "minorSymbol": {
        "type": "string"
      }
    },
    "name": "CurrencyResource"
  },
  {
    "type": "object",
    "properties": {
      "records": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/RolesBusinessSiteResource"
        }
      }
    },
    "name": "BusinessSiteCollectionRequest"
  },
  {
    "type": "object",
    "required": [
      "id"
    ],
    "properties": {
      "id": {
        "type": "string"
      },
      "email": {
        "type": "string",
        "format": "email"
      },
      "code": {
        "type": "string"
      },
      "name": {
        "type": "string"
      },
      "extensionNumber": {
        "type": "string"
      },
      "callerIdName": {
        "type": "string"
      },
      "operator": {
        "$ref": "#/components/schemas/BasicExtensionInfoResource"
      },
      "regionalSettings": {
        "$ref": "#/components/schemas/RolesRegionalSettingsResource"
      },
      "businessAddress": {
        "$ref": "#/components/schemas/ContactAddressInfoResource"
      }
    },
    "name": "RolesBusinessSiteResource"
  },
  {
    "type": "object",
    "properties": {
      "id": {
        "type": "string"
      },
      "name": {
        "type": "string"
      },
      "extensionNumber": {
        "type": "string"
      }
    },
    "name": "BasicExtensionInfoResource"
  },
  {
    "type": "object",
    "properties": {
      "street": {
        "type": "string"
      },
      "city": {
        "type": "string"
      },
      "state": {
        "type": "string"
      },
      "zip": {
        "type": "string"
      },
      "country": {
        "type": "string"
      }
    },
    "name": "ContactAddressInfoResource"
  },
  {
    "type": "object",
    "properties": {
      "uri": {
        "type": "string",
        "format": "uri"
      },
      "id": {
        "type": "string"
      },
      "name": {
        "type": "string"
      },
      "description": {
        "type": "string"
      },
      "bias": {
        "type": "string"
      }
    },
    "name": "RolesTimezoneResource"
  },
  {
    "type": "object",
    "properties": {
      "id": {
        "type": "string"
      },
      "name": {
        "type": "string"
      },
      "localeCode": {
        "type": "string"
      }
    },
    "name": "RolesLanguageResource"
  },
  {
    "type": "object",
    "properties": {
      "timezone": {
        "$ref": "#/components/schemas/RolesTimezoneResource"
      },
      "homeCountry": {
        "$ref": "#/components/schemas/RolesCountryResource"
      },
      "language": {
        "$ref": "#/components/schemas/RolesLanguageResource"
      },
      "greetingLanguage": {
        "$ref": "#/components/schemas/RolesLanguageResource"
      },
      "formattingLocale": {
        "$ref": "#/components/schemas/RolesLanguageResource"
      },
      "timeFormat": {
        "type": "string",
        "enum": [
          "12h",
          "24h"
        ]
      },
      "currency": {
        "$ref": "#/components/schemas/CurrencyResource"
      }
    },
    "name": "RolesRegionalSettingsResource"
  },
  {
    "type": "object",
    "properties": {
      "callStatus": {
        "type": "string",
        "description": "Status of a call",
        "enum": [
          "Invalid",
          "Success",
          "InProgress",
          "Busy",
          "NoAnswer",
          "Rejected",
          "GenericError",
          "Finished",
          "InternationalDisabled",
          "DestinationBlocked",
          "NotEnoughFunds",
          "NoSuchUser"
        ]
      },
      "callerStatus": {
        "type": "string",
        "description": "Status of a calling party",
        "enum": [
          "Invalid",
          "Success",
          "InProgress",
          "Busy",
          "NoAnswer",
          "Rejected",
          "GenericError",
          "Finished",
          "InternationalDisabled",
          "DestinationBlocked",
          "NotEnoughFunds",
          "NoSuchUser"
        ]
      },
      "calleeStatus": {
        "type": "string",
        "description": "Status of a called party",
        "enum": [
          "Invalid",
          "Success",
          "InProgress",
          "Busy",
          "NoAnswer",
          "Rejected",
          "GenericError",
          "Finished",
          "InternationalDisabled",
          "DestinationBlocked",
          "NotEnoughFunds",
          "NoSuchUser"
        ]
      }
    },
    "description": "RingOut status information",
    "name": "RingOutStatusInfo"
  },
  {
    "type": "object",
    "properties": {
      "phoneNumber": {
        "type": "string",
        "description": "Phone number in E.164 format"
      }
    },
    "description": "Phone number of a called party. This number corresponds to the\n2nd leg of a RingOut call\n",
    "name": "MakeRingOutCallerInfoRequestTo"
  },
  {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "Internal identifier of a RingOut call"
      },
      "uri": {
        "type": "string",
        "description": "Link to a RingOut call resource",
        "format": "uri"
      },
      "status": {
        "$ref": "#/components/schemas/RingOutStatusInfo"
      }
    },
    "name": "GetRingOutStatusResponse"
  },
  {
    "required": [
      "from",
      "to"
    ],
    "type": "object",
    "properties": {
      "from": {
        "$ref": "#/components/schemas/MakeRingOutCallerInfoRequestFrom"
      },
      "to": {
        "$ref": "#/components/schemas/MakeRingOutCallerInfoRequestTo"
      },
      "callerId": {
        "$ref": "#/components/schemas/MakeRingOutCallerIdInfo"
      },
      "playPrompt": {
        "type": "boolean",
        "description": "Audio prompt that a calling party hears when a call\nis connected\n"
      },
      "country": {
        "$ref": "#/components/schemas/MakeRingOutCountryInfo"
      }
    },
    "name": "MakeRingOutRequest"
  },
  {
    "type": "object",
    "properties": {
      "phoneNumber": {
        "type": "string",
        "description": "Phone number in E.164 format"
      },
      "forwardingNumberId": {
        "type": "string",
        "description": "Internal identifier of a forwarding number; returned in response\nas an 'id' field value. Can be specified instead of a `phoneNumber` attribute\n"
      }
    },
    "description": "Phone number of a caller. This number corresponds to the 1st\nleg of a RingOut call. This number can be one of the user's configured forwarding\nnumbers or an arbitrary number\n",
    "name": "MakeRingOutCallerInfoRequestFrom"
  },
  {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "Dialing plan country identifier"
      }
    },
    "description": "Optional. Dialing plan country data. If not specified, then an extension\nhome country is applied by default\n",
    "name": "MakeRingOutCountryInfo"
  },
  {
    "type": "object",
    "properties": {
      "phoneNumber": {
        "type": "string",
        "description": "Phone number in E.164 format"
      }
    },
    "description": "Phone number which will be displayed to the called party",
    "name": "MakeRingOutCallerIdInfo"
  },
  {
    "type": "object",
    "properties": {
      "records": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/AssistantResource"
        }
      }
    },
    "name": "AssistantsResource"
  },
  {
    "type": "object",
    "properties": {
      "id": {
        "type": "string"
      },
      "name": {
        "type": "string"
      }
    },
    "name": "AssistantResource"
  },
  {
    "type": "object",
    "properties": {
      "id": {
        "type": "string"
      },
      "name": {
        "type": "string"
      }
    },
    "name": "AssistedUserResource"
  },
  {
    "type": "object",
    "properties": {
      "records": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/AssistedUserResource"
        }
      }
    },
    "name": "AssistedUsersResource"
  },
  {
    "type": "object",
    "properties": {
      "uri": {
        "type": "string",
        "format": "uri",
        "description": "Link to the list of address book groups"
      }
    },
    "description": "Information on address book groups",
    "name": "UserContactsGroupsInfo"
  },
  {
    "type": "object",
    "properties": {
      "uri": {
        "type": "string",
        "format": "uri"
      }
    },
    "description": "Canonical URI for a corresponding page of a list",
    "name": "UserContactsNavigationInfoUri"
  },
  {
    "type": "object",
    "properties": {
      "uri": {
        "type": "string",
        "format": "uri",
        "description": "Link to the list of user personal contacts"
      },
      "records": {
        "type": "array",
        "description": "List of personal contacts from the extension address book\n",
        "items": {
          "$ref": "#/components/schemas/PersonalContactResource"
        }
      },
      "navigation": {
        "$ref": "#/components/schemas/UserContactsNavigationInfo"
      },
      "paging": {
        "$ref": "#/components/schemas/UserContactsPagingInfo"
      },
      "groups": {
        "$ref": "#/components/schemas/UserContactsGroupsInfo"
      }
    },
    "name": "ContactList"
  },
  {
    "type": "object",
    "properties": {
      "firstName": {
        "type": "string",
        "description": "First name of a contact",
        "example": "Charlie"
      },
      "lastName": {
        "type": "string",
        "description": "Last name of a contact",
        "example": "Williams"
      },
      "middleName": {
        "type": "string",
        "description": "Middle name of a contact",
        "example": "J"
      },
      "nickName": {
        "type": "string",
        "description": "Nick name of a contact",
        "example": "The Boss"
      },
      "company": {
        "type": "string",
        "description": "Company name of a contact",
        "example": "Example, Inc."
      },
      "jobTitle": {
        "type": "string",
        "description": "Job title of a contact",
        "example": "CEO"
      },
      "email": {
        "type": "string",
        "format": "email",
        "description": "Email of a contact",
        "example": "charlie.williams@example.com"
      },
      "email2": {
        "type": "string",
        "format": "email",
        "description": "Second email of a contact",
        "example": "charlie-example@gmail.com"
      },
      "email3": {
        "type": "string",
        "format": "email",
        "description": "Third email of a contact",
        "example": "theboss-example@hotmail.com"
      },
      "birthday": {
        "type": "string",
        "description": "Date of birth of a contact",
        "format": "date-time"
      },
      "webPage": {
        "type": "string",
        "format": "uri",
        "description": "Contact home page URL",
        "example": "http://www.example.com"
      },
      "notes": {
        "type": "string",
        "description": "Notes for a contact",
        "example": "#1 Customer"
      },
      "homePhone": {
        "type": "string",
        "description": "Home phone number of a contact in e.164 (with \"+\") format",
        "example": "+15551234567"
      },
      "homePhone2": {
        "type": "string",
        "description": "Second home phone number of a contact in e.164 (with \"+\") format",
        "example": "+15551234567"
      },
      "businessPhone": {
        "type": "string",
        "description": "Business phone of a contact in e.164 (with \"+\") format",
        "example": "+15551234567"
      },
      "businessPhone2": {
        "type": "string",
        "description": "Second business phone of a contact in e.164 (with \"+\") format",
        "example": "+15551234567"
      },
      "mobilePhone": {
        "type": "string",
        "description": "Mobile phone of a contact in e.164 (with \"+\") format",
        "example": "+15551234567"
      },
      "businessFax": {
        "type": "string",
        "description": "Business fax number of a contact in e.164 (with \"+\") format",
        "example": "+15551234567"
      },
      "companyPhone": {
        "type": "string",
        "description": "Company number of a contact in e.164 (with \"+\") format",
        "example": "+15551234567"
      },
      "assistantPhone": {
        "type": "string",
        "description": "Phone number of a contact assistant in e.164 (with \"+\") format",
        "example": "+15551234567"
      },
      "carPhone": {
        "type": "string",
        "description": "Car phone number of a contact in e.164 (with \"+\") format",
        "example": "+15551234567"
      },
      "otherPhone": {
        "type": "string",
        "description": "Other phone number of a contact in e.164 (with \"+\") format",
        "example": "+15551234567"
      },
      "otherFax": {
        "type": "string",
        "description": "Other fax number of a contact in e.164 (with \"+\") format",
        "example": "+15551234567"
      },
      "callbackPhone": {
        "type": "string",
        "description": "Callback phone number of a contact in e.164 (with \"+\") format",
        "example": "+15551234567"
      },
      "homeAddress": {
        "$ref": "#/components/schemas/ContactAddressInfo"
      },
      "businessAddress": {
        "$ref": "#/components/schemas/ContactAddressInfo"
      },
      "otherAddress": {
        "$ref": "#/components/schemas/ContactAddressInfo"
      },
      "ringtoneIndex": {
        "type": "string",
        "description": "Contact ringtone. Max number of symbols is 64"
      }
    },
    "name": "PersonalContactRequest"
  },
  {
    "type": "object",
    "properties": {
      "street": {
        "type": "string",
        "description": "Street address",
        "example": "20 Davis Dr."
      },
      "city": {
        "type": "string",
        "description": "City name",
        "example": "Belmont"
      },
      "country": {
        "type": "string",
        "description": "Country name"
      },
      "state": {
        "type": "string",
        "description": "State/province name",
        "example": "CA"
      },
      "zip": {
        "type": "string",
        "description": "Zip/Postal code",
        "example": "94002"
      }
    },
    "name": "ContactAddressInfo"
  },
  {
    "type": "object",
    "properties": {
      "uri": {
        "type": "string",
        "format": "uri",
        "description": "Canonical URI of a contact",
        "example": "https://platform.ringcentral.com/restapi/v1.0/account/230919004/extension/230919004/address-book/contact/623045004"
      },
      "availability": {
        "type": "string",
        "description": "This property has a special meaning only on Address Book Sync\n(e.g. a contact can be `Deleted`). For simple contact list reading it\nhas always the default value - `Alive`\n",
        "enum": [
          "Alive",
          "Deleted",
          "Purged"
        ]
      },
      "email": {
        "type": "string",
        "format": "email",
        "description": "Email of a contact",
        "example": "charlie.williams@example.com"
      },
      "id": {
        "type": "integer",
        "format": "int64",
        "description": "Internal identifier of availability contact",
        "example": 623045004
      },
      "notes": {
        "type": "string",
        "description": "Notes for a contact",
        "example": "#1 Customer"
      },
      "company": {
        "type": "string",
        "description": "Company name of a contact",
        "example": "Example, Inc."
      },
      "firstName": {
        "type": "string",
        "description": "First name of a contact",
        "example": "Charlie"
      },
      "lastName": {
        "type": "string",
        "description": "Last name of a contact",
        "example": "Williams"
      },
      "jobTitle": {
        "type": "string",
        "description": "Job title of a contact",
        "example": "CEO"
      },
      "birthday": {
        "type": "string",
        "description": "Date of birth of a contact",
        "format": "date-time"
      },
      "webPage": {
        "type": "string",
        "format": "uri",
        "description": "The contact home page URL",
        "example": "http://www.example.com"
      },
      "middleName": {
        "type": "string",
        "description": "Middle name of a contact",
        "example": "J"
      },
      "nickName": {
        "type": "string",
        "description": "Nick name of a contact",
        "example": "The Boss"
      },
      "email2": {
        "type": "string",
        "format": "email",
        "description": "Second email of a contact",
        "example": "charlie-example@gmail.com"
      },
      "email3": {
        "type": "string",
        "format": "email",
        "description": "Third email of a contact",
        "example": "theboss-example@hotmail.com"
      },
      "homePhone": {
        "type": "string",
        "description": "Home phone number of a contact in e.164 (with \"+\") format",
        "example": "+15551234567"
      },
      "homePhone2": {
        "type": "string",
        "description": "Second home phone number of a contact in e.164 (with \"+\") format",
        "example": "+15551234567"
      },
      "businessPhone": {
        "type": "string",
        "description": "Business phone of the contact in e.164 (with \"+\") format",
        "example": "+15551234567"
      },
      "businessPhone2": {
        "type": "string",
        "description": "Second business phone of a contact in e.164 (with \"+\") format",
        "example": "+15551234567"
      },
      "mobilePhone": {
        "type": "string",
        "description": "Mobile phone of a contact in e.164 (with \"+\") format",
        "example": "+15551234567"
      },
      "businessFax": {
        "type": "string",
        "description": "Business fax number of a contact in e.164 (with \"+\") format",
        "example": "+15551234567"
      },
      "companyPhone": {
        "type": "string",
        "description": "Company number of a contact in e.164 (with \"+\") format",
        "example": "+15551234567"
      },
      "assistantPhone": {
        "type": "string",
        "description": "Phone number of a contact assistant in e.164 (with \"+\") format",
        "example": "+15551234567"
      },
      "carPhone": {
        "type": "string",
        "description": "Car phone number of a contact in e.164 (with \"+\") format",
        "example": "+15551234567"
      },
      "otherPhone": {
        "type": "string",
        "description": "Other phone number of a contact in e.164 (with \"+\") format",
        "example": "+15551234567"
      },
      "otherFax": {
        "type": "string",
        "description": "Other fax number of a contact in e.164 (with \"+\") format",
        "example": "+15551234567"
      },
      "callbackPhone": {
        "type": "string",
        "description": "Callback phone number of a contact in e.164 (with \"+\") format",
        "example": "+15551234567"
      },
      "businessAddress": {
        "$ref": "#/components/schemas/ContactAddressInfo"
      },
      "homeAddress": {
        "$ref": "#/components/schemas/ContactAddressInfo"
      },
      "otherAddress": {
        "$ref": "#/components/schemas/ContactAddressInfo"
      },
      "ringtoneIndex": {
        "type": "string",
        "description": "Contact ringtone. Max number of symbols is 64"
      }
    },
    "name": "PersonalContactResource"
  },
  {
    "type": "object",
    "properties": {
      "firstPage": {
        "$ref": "#/components/schemas/UserContactsNavigationInfoUri"
      },
      "nextPage": {
        "$ref": "#/components/schemas/UserContactsNavigationInfoUri"
      },
      "previousPage": {
        "$ref": "#/components/schemas/UserContactsNavigationInfoUri"
      },
      "lastPage": {
        "$ref": "#/components/schemas/UserContactsNavigationInfoUri"
      }
    },
    "description": "Information on navigation",
    "name": "UserContactsNavigationInfo"
  },
  {
    "type": "object",
    "properties": {
      "page": {
        "type": "integer",
        "description": "Current page number. 1-indexed, so the first page is 1\nby default. May be omitted if the result is empty (because non-existent page\nwas specified or perPage=0 was requested)\n",
        "format": "int32"
      },
      "perPage": {
        "type": "integer",
        "description": "Current page size, describes how many items each page contains.\nDefault value is 100. Maximum value is 1000. If perPage value in the request\nis greater than 1000, the maximum value (1000) is applied\n",
        "format": "int32"
      },
      "pageStart": {
        "type": "integer",
        "description": "Zero-based number of the first element on the current page.\nOmitted if a page is omitted or the result is empty\n",
        "format": "int32"
      },
      "pageEnd": {
        "type": "integer",
        "description": "Zero-based index of the last element on the current page.\nOmitted if a page is omitted or the result is empty\n",
        "format": "int32"
      },
      "totalPages": {
        "type": "integer",
        "description": "Total number of pages in a dataset. May be omitted for\nsome resources due to performance reasons\n",
        "format": "int32"
      },
      "totalElements": {
        "type": "integer",
        "description": "Total number of elements in a dataset. May be omitted for\nsome resource due to performance reasons\n",
        "format": "int32"
      }
    },
    "description": "Information on paging",
    "name": "UserContactsPagingInfo"
  },
  {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "Internal identifier of a country"
      },
      "uri": {
        "type": "string",
        "format": "uri",
        "description": "Canonical URI of a country"
      },
      "name": {
        "type": "string",
        "description": "Official name of a country"
      },
      "isoCode": {
        "type": "string",
        "description": "ISO code of a country"
      },
      "callingCode": {
        "type": "string",
        "description": "Calling code of a country"
      }
    },
    "name": "MessageCountryInfo"
  },
  {
    "type": "object",
    "properties": {
      "id": {
        "type": "integer",
        "format": "int64",
        "description": "Internal identifier of a message"
      },
      "uri": {
        "type": "string",
        "format": "uri",
        "description": "Canonical URI of a message"
      },
      "attachments": {
        "type": "array",
        "description": "List of message attachments",
        "items": {
          "$ref": "#/components/schemas/MessageAttachmentInfo"
        }
      },
      "availability": {
        "type": "string",
        "enum": [
          "Alive",
          "Deleted",
          "Purged"
        ],
        "description": "Message availability status. Message in 'Deleted' state is still\npreserved with all its attachments and can be restored. 'Purged' means\nthat all attachments are already deleted and the message itself is about\nto be physically deleted shortly\n"
      },
      "conversationId": {
        "type": "integer",
        "format": "int64",
        "description": "SMS and Pager only. Identifier of a conversation that the message\nbelongs to\n"
      },
      "conversation": {
        "$ref": "#/components/schemas/ConversationInfo"
      },
      "creationTime": {
        "type": "string",
        "description": "Message creation datetime in ISO 8601 format including timezone,\nfor example 2016-03-10T18:07:52.534Z\n",
        "format": "date-time"
      },
      "deliveryErrorCode": {
        "type": "string",
        "description": "SMS only. Delivery error code returned by gateway"
      },
      "direction": {
        "type": "string",
        "enum": [
          "Inbound",
          "Outbound"
        ],
        "description": "Text message direction. Note that for some message types not all\ndirections are allowed. For example voicemail messages can\nbe only inbound\n"
      },
      "from": {
        "$ref": "#/components/schemas/MessageStoreCallerInfoResponseFrom"
      },
      "lastModifiedTime": {
        "type": "string",
        "description": "Datetime when the message was modified on server in ISO\n8601 format including timezone, for example 2016-03-10T18:07:52.534Z\n",
        "format": "date-time"
      },
      "messageStatus": {
        "type": "string",
        "description": "Message status. Different message types may have different\nallowed status values. For outbound faxes the aggregated message status\nis returned. If, for outbound message, a status for at least one recipient is 'Queued', then\nthe 'Queued' value is returned. If a status for at least one recipient is\n'SendingFailed', then the 'SendingFailed' value is returned. In other cases\nthe 'Sent' status is returned\n",
        "enum": [
          "Queued",
          "Sent",
          "Delivered",
          "DeliveryFailed",
          "SendingFailed",
          "Received"
        ]
      },
      "priority": {
        "type": "string",
        "description": "Message priority",
        "enum": [
          "Normal",
          "High"
        ]
      },
      "readStatus": {
        "description": "Message read status",
        "type": "string",
        "enum": [
          "Read",
          "Unread"
        ]
      },
      "smsDeliveryTime": {
        "type": "string",
        "description": "SMS only. The datetime when outbound SMS was delivered to\nrecipient's handset in ISO 8601 format including timezone,\nfor example 2016-03-10T18:07:52.534Z. It is filled only if\nthe carrier sends a delivery receipt to RingCentral\n",
        "format": "date-time"
      },
      "smsSendingAttemptsCount": {
        "type": "integer",
        "format": "int32",
        "description": "SMS only. Number of attempts made to send an outbound SMS to\nthe Gateway (if Gateway is temporary unavailable)\n"
      },
      "subject": {
        "type": "string",
        "description": "Message subject. For SMS and Pager messages it replicates message\ntext which is also returned as an attachment\n"
      },
      "to": {
        "type": "array",
        "description": "Recipient information",
        "items": {
          "$ref": "#/components/schemas/MessageStoreCallerInfoResponseTo"
        }
      },
      "type": {
        "type": "string",
        "description": "Message type",
        "enum": [
          "Fax",
          "SMS",
          "VoiceMail",
          "Pager",
          "Text"
        ]
      }
    },
    "name": "GetSMSMessageInfoResponse"
  },
  {
    "required": [
      "from",
      "text",
      "to"
    ],
    "type": "object",
    "properties": {
      "from": {
        "$ref": "#/components/schemas/MessageStoreCallerInfoRequest"
      },
      "to": {
        "type": "array",
        "description": "Message receiver(s) information. The `phoneNumber` value is required",
        "items": {
          "$ref": "#/components/schemas/MessageStoreCallerInfoRequest"
        }
      },
      "text": {
        "type": "string",
        "description": "Text of a message. Max length is 1000 symbols (2-byte UTF-16\nencoded). If a character is encoded in 4 bytes in UTF-16 it is treated\nas 2 characters, thus restricting the maximum message length to 500 symbols\n"
      },
      "country": {
        "$ref": "#/components/schemas/MessageCountryInfo"
      }
    },
    "name": "CreateSMSMessage"
  },
  {
    "type": "object",
    "properties": {
      "phoneNumber": {
        "type": "string",
        "description": "Phone number in E.164 format"
      }
    },
    "description": "Message sender information. The `phoneNumber` value should be one\nthe account phone numbers allowed to send the current type of messages\n",
    "name": "MessageStoreCallerInfoRequest"
  },
  {
    "type": "object",
    "properties": {
      "uri": {
        "type": "string",
        "format": "uri"
      },
      "records": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/AssignedRoleResource"
        }
      }
    },
    "name": "AssignedRolesResource"
  },
  {
    "type": "object",
    "properties": {
      "emailAddresses": {
        "type": "array",
        "description": "List of notification recipient email addresses. Should not be empty\nif 'includeManagers' parameter is set to false\n",
        "items": {
          "type": "string"
        }
      },
      "smsEmailAddresses": {
        "type": "array",
        "description": "List of notification recipient email addresses",
        "items": {
          "type": "string"
        }
      },
      "advancedMode": {
        "type": "boolean",
        "description": "Specifies notifications settings mode. If 'True' then advanced\nmode is on, it allows using different emails and/or phone numbers for\neach notification type. If 'False' then basic mode is on. Advanced mode\nsettings are returned in both modes, if specified once, but if basic mode\nis switched on, they are not applied\n"
      },
      "voicemails": {
        "$ref": "#/components/schemas/VoicemailsInfo"
      },
      "inboundFaxes": {
        "$ref": "#/components/schemas/InboundFaxesInfo"
      },
      "outboundFaxes": {
        "$ref": "#/components/schemas/OutboundFaxesInfo"
      },
      "inboundTexts": {
        "$ref": "#/components/schemas/InboundTextsInfo"
      },
      "missedCalls": {
        "$ref": "#/components/schemas/MissedCallsInfo"
      },
      "includeManagers": {
        "type": "boolean",
        "description": "Specifies if managers' emails are included in the list of emails to\nwhich notifications are sent. If not specified, then the value is 'True'\n",
        "default": true
      }
    },
    "name": "NotificationSettingsUpdateRequest"
  },
  {
    "type": "object",
    "properties": {
      "uri": {
        "type": "string",
        "format": "uri",
        "description": "Canonical URI of notifications settings resource"
      },
      "emailRecipients": {
        "type": "array",
        "description": "List of extensions specified as email notification recipients.\nReturned only for call queues where queue managers are assigned as user\nextensions.\n",
        "items": {
          "$ref": "#/components/schemas/EmailRecipientInfo"
        }
      },
      "emailAddresses": {
        "type": "array",
        "description": "List of notification recipient email addresses\n",
        "items": {
          "type": "string"
        }
      },
      "includeManagers": {
        "type": "boolean",
        "description": "Specifies if managers' emails are included in the list of emails to which\nnotifications are sent\n"
      },
      "smsEmailAddresses": {
        "type": "array",
        "description": "List of notification recipient email addresses",
        "items": {
          "type": "string"
        }
      },
      "advancedMode": {
        "type": "boolean",
        "description": "Specifies notifications settings mode. If 'True' then advanced\nmode is on, it allows using different emails and/or phone numbers for\neach notification type. If 'False' then basic mode is on. Advanced mode\nsettings are returned in both modes, if specified once, but if basic mode\nis switched on, they are not applied\n"
      },
      "voicemails": {
        "$ref": "#/components/schemas/VoicemailsInfo"
      },
      "inboundFaxes": {
        "$ref": "#/components/schemas/InboundFaxesInfo"
      },
      "outboundFaxes": {
        "$ref": "#/components/schemas/OutboundFaxesInfo"
      },
      "inboundTexts": {
        "$ref": "#/components/schemas/InboundTextsInfo"
      },
      "missedCalls": {
        "$ref": "#/components/schemas/MissedCallsInfo"
      }
    },
    "name": "NotificationSettings"
  },
  {
    "type": "object",
    "properties": {
      "notifyByEmail": {
        "type": "boolean",
        "description": "Email notification flag"
      },
      "notifyBySms": {
        "type": "boolean",
        "description": "SMS notification flag"
      },
      "advancedEmailAddresses": {
        "type": "array",
        "description": "List of recipient email addresses for inbound fax notifications.\nReturned if specified, in both modes (advanced/basic). Applied in advanced\nmode only\n",
        "items": {
          "type": "string"
        }
      },
      "advancedSmsEmailAddresses": {
        "type": "array",
        "description": "List of recipient phone numbers for inbound fax notifications.\nReturned if specified, in both modes (advanced/basic). Applied in advanced\nmode only\n",
        "items": {
          "type": "string"
        }
      },
      "includeAttachment": {
        "type": "boolean",
        "description": "Indicates whether fax should be attached to email\n"
      },
      "markAsRead": {
        "type": "boolean",
        "description": "Indicates whether email should be automatically marked as read\n"
      }
    },
    "name": "InboundFaxesInfo"
  },
  {
    "type": "object",
    "properties": {
      "notifyByEmail": {
        "type": "boolean",
        "description": "Email notification flag"
      },
      "notifyBySms": {
        "type": "boolean",
        "description": "SMS notification flag"
      },
      "advancedEmailAddresses": {
        "type": "array",
        "description": "List of recipient email addresses for inbound text message\nnotifications. Returned if specified, in both modes (advanced/basic).\nApplied in advanced mode only\n",
        "items": {
          "type": "string"
        }
      },
      "advancedSmsEmailAddresses": {
        "type": "array",
        "description": "List of recipient phone numbers for inbound text message notifications.\nReturned if specified, in both modes (advanced/basic). Applied in advanced\nmode only\n",
        "items": {
          "type": "string"
        }
      }
    },
    "name": "InboundTextsInfo"
  },
  {
    "type": "object",
    "properties": {
      "notifyByEmail": {
        "type": "boolean",
        "description": "Email notification flag"
      },
      "notifyBySms": {
        "type": "boolean",
        "description": "SMS notification flag"
      },
      "advancedEmailAddresses": {
        "type": "array",
        "description": "List of recipient email addresses for outbound fax notifications.\nReturned if specified, in both modes (advanced/basic). Applied in advanced\nmode only\n",
        "items": {
          "type": "string"
        }
      },
      "advancedSmsEmailAddresses": {
        "type": "array",
        "description": "List of recipient phone numbers for outbound fax notifications.\nReturned if specified, in both modes (advanced/basic). Applied in advanced\nmode only\n",
        "items": {
          "type": "string"
        }
      }
    },
    "name": "OutboundFaxesInfo"
  },
  {
    "type": "object",
    "properties": {
      "notifyByEmail": {
        "type": "boolean",
        "description": "Email notification flag"
      },
      "notifyBySms": {
        "type": "boolean",
        "description": "SMS notification flag"
      },
      "advancedEmailAddresses": {
        "type": "array",
        "description": "List of recipient email addresses for missed call notifications.\nReturned if specified, in both modes (advanced/basic). Applied in advanced\nmode only\n",
        "items": {
          "type": "string"
        }
      },
      "advancedSmsEmailAddresses": {
        "type": "array",
        "description": "List of recipient phone numbers for missed call notifications.\nReturned if specified, in both modes (advanced/basic). Applied in advanced\nmode only\n",
        "items": {
          "type": "string"
        }
      }
    },
    "name": "MissedCallsInfo"
  },
  {
    "type": "object",
    "properties": {
      "notifyByEmail": {
        "type": "boolean",
        "description": "Email notification flag"
      },
      "notifyBySms": {
        "type": "boolean",
        "description": "SMS notification flag"
      },
      "advancedEmailAddresses": {
        "type": "array",
        "description": "List of recipient email addresses for voicemail notifications.\nReturned if specified, in both modes (advanced/basic). Applied in advanced\nmode only\n",
        "items": {
          "type": "string"
        }
      },
      "advancedSmsEmailAddresses": {
        "type": "array",
        "description": "List of recipient phone numbers for voicemail notifications.\nReturned if specified, in both modes (advanced/basic). Applied in advanced\nmode only\n",
        "items": {
          "type": "string"
        }
      },
      "includeAttachment": {
        "type": "boolean",
        "description": "Indicates whether voicemail should be attached to email\n"
      },
      "includeTranscription": {
        "type": "boolean",
        "description": "Specifies whether to add voicemail transcription or not\n"
      },
      "markAsRead": {
        "type": "boolean",
        "description": "Indicates whether a voicemail should be automatically marked\nas read\n"
      }
    },
    "name": "VoicemailsInfo"
  },
  {
    "type": "object",
    "properties": {
      "extensionId": {
        "type": "string",
        "description": "Internal identifier of an extension"
      },
      "fullName": {
        "type": "string",
        "description": "User full name"
      },
      "extensionNumber": {
        "type": "string",
        "description": "User extension number"
      },
      "status": {
        "type": "string",
        "description": "Current state of an extension",
        "enum": [
          "Enabled",
          "Disable",
          "NotActivated",
          "Unassigned"
        ]
      },
      "emailAddresses": {
        "type": "array",
        "description": "List of user email addresses from extension notification settings.\nBy default main email address from contact information is returned\n",
        "items": {
          "type": "string"
        }
      },
      "permission": {
        "type": "string",
        "description": "Call queue manager permission",
        "enum": [
          "FullAccess",
          "Messages",
          "MemberManagement"
        ]
      }
    },
    "name": "EmailRecipientInfo"
  },
  {
    "required": [
      "attachments",
      "from",
      "to"
    ],
    "type": "object",
    "properties": {
      "from": {
        "$ref": "#/components/schemas/MessageStoreCallerInfoRequest"
      },
      "to": {
        "type": "array",
        "description": "Message receiver(s) information. The `phoneNumber` value is required",
        "items": {
          "$ref": "#/components/schemas/MessageStoreCallerInfoRequest"
        }
      },
      "text": {
        "type": "string",
        "description": "Text of a message. Max length is 1000 symbols (2-byte UTF-16\nencoded). If a character is encoded in 4 bytes in UTF-16 it is treated\nas 2 characters, thus restricting the maximum message length to 500 symbols\n"
      },
      "country": {
        "$ref": "#/components/schemas/MessageCountryInfo"
      },
      "attachments": {
        "type": "array",
        "description": "Media file(s) to upload",
        "items": {
          "type": "string",
          "format": "binary"
        }
      }
    },
    "name": "CreateMMSMessage"
  },
  {
    "type": "object",
    "properties": {
      "code": {
        "type": "string",
        "description": "Reason code",
        "enum": [
          "ServicePlanLimitation",
          "AccountLimitation",
          "ExtensionTypeLimitation",
          "ExtensionLimitation",
          "InsufficientPermissions",
          "ConfigurationLimitation"
        ]
      },
      "message": {
        "type": "string",
        "description": "Reason description"
      },
      "permission": {
        "type": "string"
      }
    },
    "description": "Reason for the feature unavailability. Returned only if `available`\nis set to 'False'\n",
    "name": "ReasonInfo"
  },
  {
    "type": "object",
    "properties": {
      "name": {
        "type": "string",
        "description": "Parameter name"
      },
      "value": {
        "type": "string",
        "description": "Parameter value"
      }
    },
    "name": "ParamsInfo"
  },
  {
    "type": "object",
    "properties": {
      "records": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/FeatureInfo"
        }
      }
    },
    "name": "FeatureList"
  },
  {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "Internal identifier of a feature"
      },
      "available": {
        "type": "boolean",
        "description": "Specifies if the feature is available for the current user\naccording to services enabled for the account, type, entitlements and\npermissions of the extension. If the authorized user gets features of\nthe other extension, only features that can be delegated are returned\n(such as configuration by administrators).\n"
      },
      "params": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/ParamsInfo"
        }
      },
      "reason": {
        "$ref": "#/components/schemas/ReasonInfo"
      }
    },
    "name": "FeatureInfo"
  },
  {
    "type": "object",
    "properties": {
      "firstPage": {
        "$ref": "#/components/schemas/MessagingNavigationInfoURI"
      },
      "nextPage": {
        "$ref": "#/components/schemas/MessagingNavigationInfoURI"
      },
      "previousPage": {
        "$ref": "#/components/schemas/MessagingNavigationInfoURI"
      },
      "lastPage": {
        "$ref": "#/components/schemas/MessagingNavigationInfoURI"
      }
    },
    "description": "Information on navigation",
    "name": "MessagingNavigationInfo"
  },
  {
    "type": "object",
    "properties": {
      "uri": {
        "type": "string",
        "format": "uri"
      }
    },
    "description": "Canonical URI for the corresponding page of the list",
    "name": "MessagingNavigationInfoURI"
  },
  {
    "type": "object",
    "properties": {
      "title": {
        "type": "string",
        "description": "Title of a message"
      },
      "body": {
        "type": "string",
        "description": "Message Description"
      }
    },
    "description": "Alert information",
    "name": "AlertInfo"
  },
  {
    "type": "object",
    "properties": {
      "aps": {
        "$ref": "#/components/schemas/NotificationInfo"
      },
      "messageId": {
        "type": "string",
        "description": "Internal identifier of a message"
      },
      "conversationId": {
        "type": "string",
        "description": "Internal identifier of a conversation"
      },
      "from": {
        "type": "string",
        "description": "Sender phone number. For GCM transport type '_from' property should be used"
      },
      "to": {
        "type": "string",
        "description": "Receiver phone number"
      },
      "ownerId": {
        "type": "string",
        "description": "Internal identifier of a subscription owner extension"
      }
    },
    "name": "InboundMessageEvent"
  },
  {
    "type": "object",
    "properties": {
      "phoneNumber": {
        "type": "string",
        "description": "Phone number in E.164 (with '+' sign) format"
      },
      "extensionNumber": {
        "type": "string",
        "description": "Extension number"
      },
      "target": {
        "type": "boolean",
        "description": "True specifies that message is sent exactly to this recipient.\nReturned in to field for group MMS. Useful if one extension has several\nphone numbers'\n"
      },
      "location": {
        "type": "string",
        "description": "Contains party location (city, state) if one can be determined\nfrom phoneNumber. This property is filled only when phoneNumber is not\nempty and server can calculate location information from it (for example,\nthis information is unavailable for US toll-free numbers)\n"
      },
      "name": {
        "type": "string",
        "description": "Symbolic name associated with a caller/callee. If the phone\ndoes not belong to the known extension, only the location is returned,\nthe name is not determined then\n"
      }
    },
    "name": "NotificationRecipientInfo"
  },
  {
    "type": "object",
    "properties": {
      "phoneNumber": {
        "type": "string",
        "description": "Phone number in E.164 (with '+' sign) format"
      },
      "extensionNumber": {
        "type": "string",
        "description": "Extension number"
      },
      "location": {
        "type": "string",
        "description": "Contains party location (city, state) if one can be determined\nfrom phoneNumber. This property is filled only when phoneNumber is not\nempty and server can calculate location information from it (for example,\nthis information is unavailable for US toll-free numbers)\n"
      },
      "name": {
        "type": "string",
        "description": "Symbolic name associated with a caller/callee. If the phone\ndoes not belong to the known extension, only the location is returned,\nthe name is not determined then\n"
      }
    },
    "description": "Extension Type. For GCM transport type '_from' property should be used || Message sender information",
    "name": "SenderInfo"
  },
  {
    "type": "object",
    "properties": {
      "uuid": {
        "type": "string",
        "description": "Universally unique identifier of a notification"
      },
      "event": {
        "type": "string",
        "description": "Event filter URI"
      },
      "timestamp": {
        "type": "string",
        "description": "Datetime of sending a notification in [ISO 8601](shttps://en.wikipedia.org/wiki/ISO_8601)\nformat including timezone, for example *2016-03-10T18:07:52.534Z*\n"
      },
      "subscriptionId": {
        "type": "string",
        "description": "Internal identifier of a subscription"
      },
      "body": {
        "$ref": "#/components/schemas/InstantMessageEventBody"
      }
    },
    "name": "InstantMessageEvent"
  },
  {
    "type": "object",
    "properties": {
      "alert": {
        "$ref": "#/components/schemas/AlertInfo"
      },
      "badge": {
        "type": "string",
        "description": "Number of incoming messages"
      },
      "sound": {
        "type": "string",
        "description": "Message sound"
      },
      "content-available": {
        "type": "string",
        "description": "Content availability"
      },
      "category": {
        "type": "string",
        "description": "Category of a message"
      }
    },
    "description": "Information on a notification",
    "name": "NotificationInfo"
  },
  {
    "required": [
      "navigation",
      "paging",
      "records"
    ],
    "type": "object",
    "properties": {
      "uri": {
        "type": "string",
        "format": "uri",
        "description": "Link to a list of user messages"
      },
      "records": {
        "type": "array",
        "description": "List of records with message information",
        "items": {
          "$ref": "#/components/schemas/GetMessageInfoResponse"
        }
      },
      "navigation": {
        "$ref": "#/components/schemas/MessagingNavigationInfo"
      },
      "paging": {
        "$ref": "#/components/schemas/MessagingPagingInfo"
      }
    },
    "name": "GetMessageList"
  },
  {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "Internal identifier of a message"
      },
      "to": {
        "type": "array",
        "description": "Message receiver(s) information",
        "items": {
          "$ref": "#/components/schemas/NotificationRecipientInfo"
        }
      },
      "from": {
        "$ref": "#/components/schemas/SenderInfo"
      },
      "type": {
        "type": "string",
        "description": "Type of a message. The default value is 'SMS'"
      },
      "creationTime": {
        "type": "string",
        "description": "Message creation datetime in ISO 8601 format including timezone,\nfor example 2016-03-10T18:07:52.534Z\n",
        "format": "date-time"
      },
      "lastModifiedTime": {
        "type": "string",
        "description": "Datetime when the message was modified in ISO 8601 format including\ntimezone, for example 2016-03-10T18:07:52.534Z\n",
        "format": "date-time"
      },
      "readStatus": {
        "description": "Message read status",
        "type": "string",
        "enum": [
          "Read",
          "Unread"
        ]
      },
      "priority": {
        "type": "string",
        "description": "Message priority",
        "enum": [
          "Normal",
          "High"
        ]
      },
      "attachments": {
        "type": "array",
        "description": "Message attachment data",
        "items": {
          "$ref": "#/components/schemas/MessageAttachmentInfo"
        }
      },
      "direction": {
        "type": "string",
        "enum": [
          "Inbound",
          "Outbound"
        ],
        "description": "Text message direction. Note that for some message types not all\ndirections are allowed. For example voicemail messages can\nbe only inbound\n"
      },
      "availability": {
        "type": "string",
        "enum": [
          "Alive",
          "Deleted",
          "Purged"
        ],
        "description": "Message availability status. Message in 'Deleted' state is still\npreserved with all its attachments and can be restored. 'Purged' means\nthat all attachments are already deleted and the message itself is about\nto be physically deleted shortly\n"
      },
      "subject": {
        "type": "string",
        "description": "Message subject. It replicates message text which is also returned\nas an attachment\n"
      },
      "messageStatus": {
        "type": "string",
        "description": "Message status. Different message types may have different\nallowed status values. For outbound faxes the aggregated message status\nis returned. If, for outbound message, a status for at least one recipient is 'Queued', then\nthe 'Queued' value is returned. If a status for at least one recipient is\n'SendingFailed', then the 'SendingFailed' value is returned. In other cases\nthe 'Sent' status is returned\n",
        "enum": [
          "Queued",
          "Sent",
          "Delivered",
          "DeliveryFailed",
          "SendingFailed",
          "Received"
        ]
      },
      "conversationId": {
        "type": "string",
        "description": "Deprecated. Identifier of a conversation the message belongs\nto\n"
      },
      "conversation": {
        "$ref": "#/components/schemas/ConversationInfo"
      },
      "ownerId": {
        "type": "string",
        "description": "Internal identifier of a subscription owner extension"
      }
    },
    "description": "Notification payload body",
    "name": "InstantMessageEventBody"
  },
  {
    "type": "object",
    "properties": {
      "page": {
        "type": "integer",
        "format": "int32",
        "description": "Current page number. 1-indexed, so the first page is 1\nby default. May be omitted if result is empty (because non-existent page\nwas specified or perPage=0 was requested)\n"
      },
      "perPage": {
        "type": "integer",
        "format": "int32",
        "description": "Current page size, describes how many items are in each page.\nDefault value is 100. Maximum value is 1000. If perPage value in the request\nis greater than 1000, the maximum value (1000) is applied\n"
      },
      "pageStart": {
        "type": "integer",
        "format": "int32",
        "description": "Zero-based number of the first element on the current page.\nOmitted if the page is omitted or result is empty\n"
      },
      "pageEnd": {
        "type": "integer",
        "format": "int32",
        "description": "Zero-based index of the last element on the current page.\nOmitted if the page is omitted or result is empty\n"
      },
      "totalPages": {
        "type": "integer",
        "format": "int32",
        "description": "Total number of pages in a dataset. May be omitted for\nsome resources due to performance reasons\n"
      },
      "totalElements": {
        "type": "integer",
        "format": "int32",
        "description": "Total number of elements in a dataset. May be omitted for\nsome resource due to performance reasons\n"
      }
    },
    "description": "Information on paging",
    "name": "MessagingPagingInfo"
  },
  {
    "type": "object",
    "properties": {
      "extensionId": {
        "type": "string",
        "description": "Internal identifier of an extension"
      },
      "lastUpdated": {
        "type": "string",
        "description": "Datetime when the message was last modified in ISO 8601 format including timezone, for example 2016-03-10T18:07:52.534Z",
        "format": "date-time"
      },
      "changes": {
        "type": "array",
        "description": "Message Changes",
        "items": {
          "$ref": "#/components/schemas/MessageChanges"
        }
      },
      "ownerId": {
        "type": "string",
        "description": "Internal identifier of a subscription owner extension"
      }
    },
    "description": "Notification payload body",
    "name": "MessageEventBody"
  },
  {
    "type": "object",
    "properties": {
      "uuid": {
        "type": "string",
        "description": "Universally unique identifier of a notification"
      },
      "event": {
        "type": "string",
        "description": "Event filter URI"
      },
      "timestamp": {
        "type": "string",
        "description": "Datetime of sending a notification in [ISO 8601](shttps://en.wikipedia.org/wiki/ISO_8601) format including timezone, for example *2016-03-10T18:07:52.534Z*"
      },
      "subscriptionId": {
        "type": "string",
        "description": "Internal identifier of a subscription"
      },
      "body": {
        "$ref": "#/components/schemas/MessageEventBody"
      }
    },
    "name": "MessageEvent"
  },
  {
    "type": "object",
    "properties": {
      "type": {
        "type": "string",
        "description": "Type of messages to be collected",
        "enum": [
          "EMail",
          "Fax",
          "SMS",
          "VoiceMail",
          "Pager",
          "Text"
        ],
        "example": "Fax"
      },
      "newCount": {
        "type": "integer",
        "format": "int32",
        "description": "Number of new messages. Can be omitted if the value is zero"
      },
      "updatedCount": {
        "type": "integer",
        "format": "int32",
        "description": "Number of updated messages. Can be omitted if the value is zero"
      }
    },
    "name": "MessageChanges"
  },
  {
    "type": "array",
    "minItems": 1,
    "items": {
      "allOf": [
        {
          "$ref": "#/components/schemas/MultipartRequestEntryBase"
        },
        {
          "type": "object",
          "required": [
            "body"
          ],
          "properties": {
            "body": {
              "$ref": "#/components/schemas/PatchMessageRequest"
            }
          }
        }
      ]
    },
    "name": "PatchMessageBulkRequest"
  },
  {
    "name": "GetMessageInfoMultiResponse",
    "type": "object",
    "required": [
      "resourceId",
      "status",
      "body"
    ],
    "properties": {
      "resourceId": {
        "type": "string",
        "description": "Internal identifier of a resource",
        "example": "1724099032020"
      },
      "status": {
        "type": "integer",
        "format": "int32",
        "description": "HTTP status code of an operation on given resource",
        "example": 200
      },
      "body": {
        "$ref": "#/components/schemas/GetMessageInfoResponse"
      }
    }
  },
  {
    "type": "object",
    "required": [
      "readStatus"
    ],
    "properties": {
      "readStatus": {
        "description": "Message read status",
        "type": "string",
        "enum": [
          "Read",
          "Unread"
        ]
      }
    },
    "name": "UpdateMessageRequest"
  },
  {
    "type": "object",
    "required": [
      "resourceId",
      "status"
    ],
    "properties": {
      "resourceId": {
        "type": "string",
        "description": "Internal identifier of a resource",
        "example": "1724099032020"
      },
      "status": {
        "type": "integer",
        "format": "int32",
        "description": "HTTP status code of an operation on given resource",
        "example": 200
      }
    },
    "name": "MultipartResponseEntryBase"
  },
  {
    "type": "object",
    "properties": {
      "uuid": {
        "type": "string",
        "description": "Universally unique identifier of a notification"
      },
      "event": {
        "type": "string",
        "description": "Event filter URI"
      },
      "timestamp": {
        "type": "string",
        "description": "Datetime of sending a notification in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format including timezone, for example *2016-03-10T18:07:52.534Z*"
      },
      "subscriptionId": {
        "type": "string",
        "description": "Internal identifier of a subscription"
      },
      "ownerId": {
        "type": "string",
        "description": "Internal identifier of a subscription owner extension"
      },
      "body": {
        "$ref": "#/components/schemas/VoicemailMessageEventBody"
      }
    },
    "name": "VoicemailMessageEvent"
  },
  {
    "type": "object",
    "description": "Either `readStatus` or `availability` or both are required",
    "properties": {
      "readStatus": {
        "description": "Message read status",
        "type": "string",
        "enum": [
          "Read",
          "Unread"
        ]
      },
      "availability": {
        "type": "string",
        "enum": [
          "Alive",
          "Deleted",
          "Purged"
        ],
        "description": "Message availability status. Message in 'Deleted' state is still\npreserved with all its attachments and can be restored. 'Purged' means\nthat all attachments are already deleted and the message itself is about\nto be physically deleted shortly\n"
      }
    },
    "name": "PatchMessageRequest"
  },
  {
    "type": "array",
    "minItems": 1,
    "items": {
      "allOf": [
        {
          "$ref": "#/components/schemas/MultipartRequestEntryBase"
        },
        {
          "type": "object",
          "required": [
            "body"
          ],
          "properties": {
            "body": {
              "$ref": "#/components/schemas/UpdateMessageRequest"
            }
          }
        }
      ]
    },
    "name": "UpdateMessageBulkRequest"
  },
  {
    "type": "array",
    "items": {
      "$ref": "#/components/schemas/GetMessageInfoMultiResponse"
    },
    "name": "GetMessageMultiResponse"
  },
  {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "Internal identifier of a message"
      },
      "to": {
        "type": "array",
        "description": "Message receiver(s) information",
        "items": {
          "$ref": "#/components/schemas/NotificationRecipientInfo"
        }
      },
      "from": {
        "$ref": "#/components/schemas/SenderInfo"
      },
      "type": {
        "type": "string",
        "description": "Type of a message",
        "enum": [
          "Voicemail"
        ]
      },
      "creationTime": {
        "type": "string",
        "format": "date-time",
        "description": "Message creation datetime in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601)\nformat including timezone, for example *2019-03-10T18:07:52.534Z*\n"
      },
      "lastModifiedTime": {
        "type": "string",
        "format": "date-time",
        "description": "Datetime when a message was modified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601)\nformat including timezone, for example *2019-03-10T18:07:52.534Z*\n"
      },
      "readStatus": {
        "description": "Message read status",
        "type": "string",
        "enum": [
          "Read",
          "Unread"
        ]
      },
      "priority": {
        "type": "string",
        "description": "Message priority",
        "enum": [
          "Normal",
          "High"
        ]
      },
      "attachments": {
        "type": "array",
        "description": "Message attachment data",
        "items": {
          "$ref": "#/components/schemas/MessageAttachmentInfo"
        }
      },
      "direction": {
        "type": "string",
        "enum": [
          "Inbound",
          "Outbound"
        ],
        "description": "Text message direction. Note that for some message types not all\ndirections are allowed. For example voicemail messages can\nbe only inbound\n"
      },
      "availability": {
        "type": "string",
        "enum": [
          "Alive",
          "Deleted",
          "Purged"
        ],
        "description": "Message availability status. Message in 'Deleted' state is still\npreserved with all its attachments and can be restored. 'Purged' means\nthat all attachments are already deleted and the message itself is about\nto be physically deleted shortly\n"
      },
      "subject": {
        "type": "string",
        "description": "Message subject. It replicates message text which is also returned as an attachment"
      },
      "messageStatus": {
        "type": "string",
        "description": "Message status. Different message types may have different\nallowed status values. For outbound faxes the aggregated message status\nis returned. If, for outbound message, a status for at least one recipient is 'Queued', then\nthe 'Queued' value is returned. If a status for at least one recipient is\n'SendingFailed', then the 'SendingFailed' value is returned. In other cases\nthe 'Sent' status is returned\n",
        "enum": [
          "Queued",
          "Sent",
          "Delivered",
          "DeliveryFailed",
          "SendingFailed",
          "Received"
        ]
      },
      "conversationId": {
        "type": "string",
        "description": "Internal identifier of a conversation this message belongs to"
      },
      "vmTranscriptionStatus": {
        "type": "string",
        "description": "Specifies if a voicemail message transcription is already completed or not"
      }
    },
    "description": "Notification payload body",
    "name": "VoicemailMessageEventBody"
  },
  {
    "type": "object",
    "properties": {
      "resourceId": {
        "type": "string",
        "description": "Internal identifier of a resource (required when alternative syntax with '*' is used)",
        "example": "1724099032020"
      }
    },
    "name": "MultipartRequestEntryBase"
  },
  {
    "type": "object",
    "properties": {
      "uri": {
        "type": "string",
        "format": "uri",
        "description": "Link to a custom user greeting"
      },
      "id": {
        "type": "string",
        "description": "Internal identifier of a custom user greeting"
      },
      "type": {
        "type": "string",
        "description": "Type of a custom user greeting",
        "enum": [
          "Introductory",
          "Announcement",
          "InterruptPrompt",
          "ConnectingAudio",
          "ConnectingMessage",
          "Voicemail",
          "Unavailable",
          "HoldMusic",
          "PronouncedName",
          "TemplateGreeting"
        ]
      },
      "contentType": {
        "type": "string",
        "description": "Content media type",
        "enum": [
          "audio/mpeg",
          "audio/wav"
        ]
      },
      "contentUri": {
        "type": "string",
        "format": "uri",
        "description": "Link to a greeting content (audio file)"
      },
      "answeringRule": {
        "$ref": "#/components/schemas/CustomGreetingAnsweringRuleInfo"
      }
    },
    "name": "CustomUserGreetingInfo"
  },
  {
    "type": "object",
    "properties": {
      "glip": {
        "$ref": "#/components/schemas/UpdateUnifiedPresenceGlip"
      },
      "telephony": {
        "$ref": "#/components/schemas/UpdateUnifiedPresenceTelephony"
      }
    },
    "name": "UpdateUnifiedPresence"
  },
  {
    "type": "array",
    "items": {
      "$ref": "#/components/schemas/UnifiedPresenceListEntry"
    },
    "name": "UnifiedPresenceList"
  },
  {
    "type": "object",
    "properties": {
      "status": {
        "type": "string",
        "description": "Aggregated presence status of the user",
        "enum": [
          "Available",
          "Offline",
          "DND",
          "Busy"
        ]
      },
      "glip": {
        "$ref": "#/components/schemas/UnifiedPresenceGlip"
      },
      "telephony": {
        "$ref": "#/components/schemas/UnifiedPresenceTelephony"
      },
      "meeting": {
        "$ref": "#/components/schemas/UnifiedPresenceMeeting"
      }
    },
    "name": "UnifiedPresence"
  },
  {
    "type": "object",
    "properties": {
      "resourceId": {
        "type": "string",
        "description": "Internal identifier of the resource"
      },
      "status": {
        "type": "integer",
        "format": "int32",
        "description": "Status code of resource retrieval"
      },
      "body": {
        "$ref": "#/components/schemas/UnifiedPresence"
      }
    },
    "name": "UnifiedPresenceListEntry"
  },
  {
    "type": "object",
    "properties": {
      "availability": {
        "type": "string",
        "description": "Telephony DND status",
        "enum": [
          "TakeAllCalls",
          "DoNotAcceptAnyCalls",
          "DoNotAcceptQueueCalls"
        ]
      }
    },
    "name": "UpdateUnifiedPresenceTelephony"
  },
  {
    "type": "object",
    "properties": {
      "status": {
        "type": "string",
        "description": "Glip connection status calculated from all user's apps. Returned always for the requester's extension; returned for another users if their glip visibility is set to 'Visible'",
        "enum": [
          "Offline",
          "Online"
        ]
      },
      "visibility": {
        "type": "string",
        "description": "Visibility setting allowing other users to see the user's Glip presence status; returned only for requester's extension",
        "enum": [
          "Visible",
          "Invisible"
        ]
      },
      "availability": {
        "type": "string",
        "description": "Shows whether user wants to receive Glip notifications or not.",
        "enum": [
          "Available",
          "DND"
        ]
      }
    },
    "description": "Returned if *Glip* feature is switched on",
    "name": "UnifiedPresenceGlip"
  },
  {
    "type": "object",
    "properties": {
      "status": {
        "type": "string",
        "description": "Meeting status calculated from all user`s meetings",
        "enum": [
          "NoMeeting",
          "InMeeting"
        ]
      }
    },
    "description": "Returned if *Meetings* feature is switched on",
    "name": "UnifiedPresenceMeeting"
  },
  {
    "type": "object",
    "properties": {
      "visibility": {
        "type": "string",
        "description": "Visibility setting allowing other users to see Glip presence status",
        "enum": [
          "Visible",
          "Invisible"
        ]
      },
      "availability": {
        "type": "string",
        "description": "Availability setting specifying whether to receive Glip notifications or not",
        "enum": [
          "Available",
          "DND"
        ]
      }
    },
    "name": "UpdateUnifiedPresenceGlip"
  },
  {
    "type": "object",
    "properties": {
      "status": {
        "type": "string",
        "description": "Telephony status calculated from all user's phone numbers. Returned always for the requester's extension; returned for another users if their telephony visibility is set to 'Visible'",
        "enum": [
          "NoCall",
          "Ringing",
          "CallConnected",
          "OnHold",
          "ParkedCall"
        ]
      },
      "visibility": {
        "type": "string",
        "description": "Specifies if the user's phone presence status is visible to other users; returned only for requester's extension",
        "enum": [
          "Visible",
          "Invisible"
        ]
      },
      "availability": {
        "type": "string",
        "description": "Telephony DND status. Returned if *DND* feature is switched on",
        "enum": [
          "TakeAllCalls",
          "DoNotAcceptAnyCalls",
          "DoNotAcceptQueueCalls"
        ]
      }
    },
    "description": "Returned if *BLF* feature is switched on",
    "name": "UnifiedPresenceTelephony"
  },
  {
    "type": "object",
    "properties": {
      "syncType": {
        "type": "string",
        "enum": [
          "FSync",
          "ISync"
        ]
      },
      "syncToken": {
        "type": "string"
      },
      "syncTime": {
        "type": "string",
        "format": "date-time"
      },
      "olderRecordsExist": {
        "type": "boolean",
        "default": false
      }
    },
    "name": "SyncInfo"
  },
  {
    "type": "object",
    "properties": {
      "uri": {
        "type": "string",
        "format": "uri"
      },
      "records": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/PersonalContactResource"
        }
      },
      "syncInfo": {
        "$ref": "#/components/schemas/SyncInfo"
      },
      "nextPageId": {
        "type": "integer",
        "format": "int64"
      },
      "nextPageUri": {
        "type": "string",
        "format": "uri"
      }
    },
    "name": "AddressBookSync"
  },
  {
    "type": "object",
    "properties": {
      "type": {
        "type": "string",
        "description": "Type of a greeting"
      },
      "preset": {
        "$ref": "#/components/schemas/PresetInfo"
      }
    },
    "name": "BlockedCallerGreetingInfo"
  },
  {
    "type": "object",
    "properties": {
      "mode": {
        "type": "string",
        "description": "Call blocking options: either specific or all calls and faxes",
        "enum": [
          "Specific",
          "All"
        ]
      },
      "noCallerId": {
        "type": "string",
        "description": "Determines how to handle calls with no caller ID in `Specific` mode",
        "enum": [
          "BlockCallsAndFaxes",
          "BlockFaxes",
          "Allow"
        ]
      },
      "payPhones": {
        "type": "string",
        "description": "Blocking settings for pay phones",
        "enum": [
          "Block",
          "Allow"
        ]
      },
      "greetings": {
        "type": "array",
        "description": "List of greetings played for blocked callers",
        "items": {
          "$ref": "#/components/schemas/BlockedCallerGreetingInfo"
        }
      }
    },
    "description": "Returns the lists of blocked and allowed phone numbers",
    "name": "CallerBlockingSettings"
  },
  {
    "type": "object",
    "description": "Returns the lists of blocked and allowed phone numbers",
    "properties": {
      "mode": {
        "type": "string",
        "description": "Call blocking options: either specific or all calls and faxes",
        "enum": [
          "Specific",
          "All"
        ]
      },
      "noCallerId": {
        "type": "string",
        "description": "Determines how to handle calls with no caller ID in 'Specific' mode",
        "enum": [
          "BlockCallsAndFaxes",
          "BlockFaxes",
          "Allow"
        ]
      },
      "payPhones": {
        "type": "string",
        "description": "Blocking settings for pay phones",
        "enum": [
          "Block",
          "Allow"
        ]
      },
      "greetings": {
        "type": "array",
        "description": "List of greetings played for blocked callers",
        "items": {
          "$ref": "#/components/schemas/BlockedCallerGreetingInfo"
        }
      }
    },
    "name": "CallerBlockingSettingsUpdate"
  },
  {
    "type": "object",
    "description": "Information on a blocked/allowed phone number",
    "properties": {
      "uri": {
        "type": "string",
        "format": "uri",
        "description": "Link to a blocked/allowed phone number"
      },
      "id": {
        "type": "string",
        "description": "Internal identifier of a blocked/allowed phone number"
      },
      "phoneNumber": {
        "type": "string",
        "description": "A blocked/allowed phone number in [E.164](https://www.itu.int/rec/T-REC-E.164-201011-I) format"
      },
      "label": {
        "type": "string",
        "description": "Custom name of a blocked/allowed phone number"
      },
      "status": {
        "type": "string",
        "description": "Status of a phone number",
        "default": "Blocked",
        "enum": [
          "Blocked",
          "Allowed"
        ]
      }
    },
    "name": "BlockedAllowedPhoneNumberInfo"
  },
  {
    "type": "object",
    "description": "List of blocked or allowed phone numbers",
    "properties": {
      "uri": {
        "type": "string",
        "format": "uri",
        "description": "Link to a list of blocked/allowed phone numbers resource"
      },
      "records": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/BlockedAllowedPhoneNumberInfo"
        }
      },
      "navigation": {
        "$ref": "#/components/schemas/PageNavigationModel"
      },
      "paging": {
        "$ref": "#/components/schemas/EnumeratedPagingModel"
      }
    },
    "name": "BlockedAllowedPhoneNumbersList"
  },
  {
    "type": "object",
    "description": "Updates either blocked or allowed phone number list with a new phone number.",
    "properties": {
      "phoneNumber": {
        "type": "string",
        "description": "A blocked/allowed phone number in [E.164](https://www.itu.int/rec/T-REC-E.164-201011-I) format"
      },
      "label": {
        "type": "string",
        "description": "Custom name of a blocked/allowed phone number"
      },
      "status": {
        "type": "string",
        "description": "Status of a phone number",
        "default": "Blocked",
        "enum": [
          "Blocked",
          "Allowed"
        ]
      }
    },
    "name": "AddBlockedAllowedPhoneNumber"
  },
  {
    "required": [
      "navigation",
      "paging",
      "records"
    ],
    "type": "object",
    "properties": {
      "uri": {
        "type": "string",
        "format": "uri",
        "description": "Link to the user phone number list resource"
      },
      "records": {
        "type": "array",
        "description": "List of phone numbers",
        "items": {
          "$ref": "#/components/schemas/UserPhoneNumberInfo"
        }
      },
      "navigation": {
        "$ref": "#/components/schemas/ProvisioningNavigationInfo"
      },
      "paging": {
        "$ref": "#/components/schemas/ProvisioningPagingInfo"
      }
    },
    "name": "GetExtensionPhoneNumbersResponse"
  },
  {
    "type": "object",
    "properties": {
      "id": {
        "type": "integer",
        "format": "int64",
        "description": "Internal identifier of an extension"
      },
      "uri": {
        "type": "string",
        "format": "uri",
        "description": "Canonical URI of an extension"
      },
      "extensionNumber": {
        "type": "string",
        "description": "Number of extension"
      },
      "partnerId": {
        "type": "string",
        "description": "For Partner Applications Internal identifier of an extension\ncreated by partner. The RingCentral supports the mapping of accounts and\nstores the corresponding account ID/extension ID for each partner ID of\na client application. In request URIs partner IDs are accepted instead\nof regular RingCentral native IDs as path parameters using pid = XXX clause.\nThough in response URIs contain the corresponding account IDs and extension\nIDs. In all request and response bodies these values are reflected via\npartnerId attributes of account and extension\n"
      },
      "type": {
        "type": "string",
        "description": "Extension type. Please note that legacy 'Department' extension type\ncorresponds to 'Call Queue' extensions in modern RingCentral product terminology\n",
        "enum": [
          "User",
          "FaxUser",
          "VirtualUser",
          "DigitalUser",
          "Department",
          "Announcement",
          "Voicemail",
          "SharedLinesGroup",
          "PagingOnly",
          "IvrMenu",
          "ApplicationExtension",
          "ParkLocation",
          "Site"
        ]
      },
      "contactCenterProvider": {
        "$ref": "#/components/schemas/ContactCenterProvider"
      },
      "name": {
        "type": "string",
        "description": "Extension name. For user extension types the value is a combination\nof the specified first name and last name\n"
      }
    },
    "description": "Information on the extension, to which the phone number is assigned.\nReturned only for the request of Account phone number list\n",
    "name": "UserPhoneNumberExtensionInfo"
  },
  {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "Internal identifier of the provider"
      },
      "name": {
        "type": "string",
        "description": "Provider's name"
      }
    },
    "description": "CCRN (Contact Center Routing Number) provider. If not specified then the default value 'InContact/North America' is used, its ID is '1'",
    "name": "ContactCenterProvider"
  },
  {
    "type": "object",
    "properties": {
      "uri": {
        "type": "string",
        "format": "uri",
        "description": "Link to the user phone number resource"
      },
      "id": {
        "type": "integer",
        "format": "int64",
        "description": "Internal identifier of a phone number"
      },
      "country": {
        "$ref": "#/components/schemas/CountryInfoBasicModel"
      },
      "contactCenterProvider": {
        "$ref": "#/components/schemas/ContactCenterProvider"
      },
      "extension": {
        "$ref": "#/components/schemas/UserPhoneNumberExtensionInfo"
      },
      "label": {
        "type": "string",
        "description": "Custom user name of a phone number, if any"
      },
      "location": {
        "type": "string",
        "description": "Location (City, State). Filled for local US numbers"
      },
      "paymentType": {
        "type": "string",
        "description": "Payment type. 'External' is returned for forwarded numbers which are not terminated in the RingCentral phone system",
        "enum": [
          "External",
          "TollFree",
          "Local",
          "BusinessMobileNumberProvider",
          "ExternalNumberProvider"
        ]
      },
      "phoneNumber": {
        "type": "string",
        "description": "Phone number"
      },
      "primary": {
        "type": "boolean",
        "description": "Specifies if the number is primary, i.e. displayed as 'main number' and called by default",
        "example": false
      },
      "status": {
        "type": "string",
        "description": "Status of a phone number. If the value is 'Normal', the phone number is ready to be used. Otherwise it is an external number not yet ported to RingCentral",
        "enum": [
          "Normal",
          "Pending",
          "PortedIn",
          "Temporary"
        ]
      },
      "type": {
        "type": "string",
        "description": "Phone number type",
        "enum": [
          "VoiceFax",
          "FaxOnly",
          "VoiceOnly"
        ]
      },
      "subType": {
        "type": "string",
        "description": "Extension sub-type, if applicable. For any unsupported sub-types the 'Unknown' value will be returned",
        "enum": [
          "VideoPro",
          "VideoProPlus",
          "DigitalSignage",
          "Unknown"
        ]
      },
      "usageType": {
        "type": "string",
        "description": "Usage type of a phone number. Numbers of 'NumberPool' type will not be returned for phone number list requests",
        "enum": [
          "MainCompanyNumber",
          "AdditionalCompanyNumber",
          "CompanyNumber",
          "DirectNumber",
          "CompanyFaxNumber",
          "ForwardedNumber",
          "ForwardedCompanyNumber",
          "ContactCenterNumber",
          "ConferencingNumber",
          "NumberPool",
          "BusinessMobileNumber",
          "IntegrationNumber"
        ]
      },
      "features": {
        "type": "array",
        "description": "List of features of a phone number",
        "items": {
          "type": "string",
          "enum": [
            "CallerId",
            "SmsSender",
            "A2PSmsSender",
            "MmsSender",
            "InternationalSmsSender",
            "Delegated"
          ]
        }
      }
    },
    "name": "UserPhoneNumberInfo"
  },
  {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "Internal identifier of a Call queue extension"
      },
      "extensionNumber": {
        "type": "string",
        "description": "Extension number of call queue"
      },
      "name": {
        "type": "string",
        "description": "Name of a call queue"
      },
      "status": {
        "type": "string",
        "description": "Queue current state (Enabled/Disabled)",
        "enum": [
          "Disabled",
          "Enabled"
        ]
      }
    },
    "name": "CallQueueOverflowAgent"
  },
  {
    "type": "object",
    "properties": {
      "enabled": {
        "type": "boolean",
        "description": "Call queue overflow status"
      },
      "items": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/CallQueueIdResource"
        }
      }
    },
    "name": "CallQueueOverflowSettingsRequestResource"
  },
  {
    "type": "object",
    "properties": {
      "enabled": {
        "type": "boolean",
        "description": "Call queue overflow status"
      },
      "items": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/CallQueueOverflowAgent"
        }
      }
    },
    "name": "CallQueueOverflowSettings"
  },
  {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "Internal identifier of a call queue"
      }
    },
    "name": "CallQueueIdResource"
  },
  {
    "type": "object",
    "properties": {
      "uri": {
        "type": "string",
        "format": "uri",
        "description": "Link to the users list resource"
      },
      "records": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/AutomaticLocationUpdatesUserInfo"
        }
      },
      "navigation": {
        "$ref": "#/components/schemas/ProvisioningNavigationInfo"
      },
      "paging": {
        "$ref": "#/components/schemas/ProvisioningPagingInfo"
      }
    },
    "name": "AutomaticLocationUpdatesUserList"
  },
  {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "Internal identifier of a site"
      },
      "uri": {
        "type": "string",
        "format": "uri",
        "description": "Link to a site resource"
      },
      "name": {
        "type": "string",
        "description": "Name of a site"
      },
      "code": {
        "type": "string",
        "description": "Site code value. Returned only if specified"
      }
    },
    "description": "Site data. If multi-site feature is turned on for the account,\nthen ID of a site must be specified. In order to assign a wireless\npoint to the main site (company) site ID should be set to `main-site`\n",
    "name": "AutomaticLocationUpdatesSiteInfo"
  },
  {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "Internal identifier of a device"
      },
      "fullName": {
        "type": "string",
        "description": "User name"
      },
      "extensionNumber": {
        "type": "string"
      },
      "featureEnabled": {
        "type": "boolean",
        "description": "Specifies whether Automatic Location Updates feature is enabled"
      },
      "type": {
        "type": "string",
        "description": "User extension type",
        "enum": [
          "User",
          "Limited"
        ]
      },
      "site": {
        "$ref": "#/components/schemas/AutomaticLocationUpdatesSiteInfo"
      },
      "department": {
        "type": "string",
        "description": "Department name"
      }
    },
    "name": "AutomaticLocationUpdatesUserInfo"
  },
  {
    "type": "object",
    "properties": {
      "enabledUserIds": {
        "type": "array",
        "items": {
          "type": "string"
        }
      },
      "disabledUserIds": {
        "type": "array",
        "items": {
          "type": "string"
        }
      }
    },
    "name": "EmergencyAddressAutoUpdateUsersBulkAssignResource"
  },
  {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "Internal identifier of a task"
      },
      "status": {
        "type": "string",
        "description": "Status of a task",
        "enum": [
          "Accepted",
          "InProgress",
          "Completed",
          "Failed"
        ]
      },
      "creationTime": {
        "type": "string",
        "format": "date-time",
        "description": "Task creation time"
      },
      "lastModifiedTime": {
        "type": "string",
        "format": "date-time",
        "description": "Time of the task latest modification"
      },
      "type": {
        "type": "string",
        "description": "Type of a task",
        "enum": [
          "WirelessPointsBulkCreate",
          "WirelessPointsBulkUpdate",
          "SwitchesBulkCreate",
          "SwitchesBulkUpdate"
        ]
      },
      "result": {
        "$ref": "#/components/schemas/TaskResultInfo"
      }
    },
    "name": "AutomaticLocationUpdatesTaskInfo"
  },
  {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "Internal identifier of the created/updated element - wireless point or network switch"
      },
      "bssid": {
        "type": "string",
        "description": "Unique 48-bit identifier of the wireless access point complying with MAC address conventions. Returned only for 'Wireless Points Bulk Create' tasks"
      },
      "chassisId": {
        "type": "string",
        "description": "Unique identifier of a network switch. Returned only for 'Switches Bulk Create' tasks"
      },
      "status": {
        "type": "string",
        "description": "Operation status"
      },
      "errors": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/TaskResultRecordErrorsInfo"
        }
      }
    },
    "name": "TaskResultRecord"
  },
  {
    "type": "object",
    "properties": {
      "records": {
        "type": "array",
        "description": "Detailed task results by elements from initial request",
        "items": {
          "$ref": "#/components/schemas/TaskResultRecord"
        }
      }
    },
    "description": "Task detailed result. Returned for failed and completed tasks",
    "name": "TaskResultInfo"
  },
  {
    "type": "object",
    "properties": {
      "errorCode": {
        "type": "string"
      },
      "message": {
        "type": "string"
      },
      "parameterName": {
        "type": "string"
      },
      "description": {
        "type": "string"
      }
    },
    "name": "TaskResultRecordErrorsInfo"
  },
  {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "Internal identifier of an emergency response location"
      },
      "name": {
        "type": "string",
        "description": "Emergency response location name"
      }
    },
    "description": "Emergency response location information",
    "name": "ERLLocationInfo"
  },
  {
    "type": "object",
    "properties": {
      "id": {
        "type": "string"
      },
      "startIp": {
        "type": "string"
      },
      "endIp": {
        "type": "string"
      },
      "matched": {
        "type": "boolean"
      }
    },
    "name": "PublicIpRangeInfo"
  },
  {
    "type": "object",
    "properties": {
      "country": {
        "type": "string",
        "description": "Country name"
      },
      "countryId": {
        "type": "string",
        "description": "Internal identifier of a country"
      },
      "countryIsoCode": {
        "type": "string",
        "description": "ISO code of a country"
      },
      "countryName": {
        "type": "string",
        "description": "Full name of a country"
      },
      "customerName": {
        "type": "string",
        "description": "Customer name"
      },
      "state": {
        "type": "string",
        "description": "State/Province name. Mandatory for the USA, the UK and Canada"
      },
      "stateId": {
        "type": "string",
        "description": "Internal identifier of a state"
      },
      "stateIsoCode": {
        "type": "string",
        "description": "ISO code of a state"
      },
      "stateName": {
        "type": "string",
        "description": "Full name of a state"
      },
      "city": {
        "type": "string",
        "description": "City name"
      },
      "street": {
        "type": "string",
        "description": "First line address"
      },
      "street2": {
        "type": "string",
        "description": "Second line address (apartment, suite, unit, building, floor, etc.)"
      },
      "zip": {
        "type": "string",
        "description": "Postal (Zip) code"
      }
    },
    "description": "Emergency address information (or information assigned to the switch or\nwireless point - in case of using them). Only one of a pair `emergencyAddress`\nor `emergencyLocationId` should be specified, otherwise an error is returned\n",
    "name": "LocationUpdatesEmergencyAddressInfo"
  },
  {
    "type": "object",
    "properties": {
      "id": {
        "type": "string"
      },
      "startIp": {
        "type": "string"
      },
      "endIp": {
        "type": "string"
      },
      "name": {
        "type": "string",
        "description": "Network name"
      },
      "emergencyAddress": {
        "$ref": "#/components/schemas/LocationUpdatesEmergencyAddressInfo"
      },
      "emergencyLocationId": {
        "type": "string",
        "description": "Emergency response location (address) internal identifier.\nOnly one of a pair `emergencyAddress` or `emergencyLocationId` should\nbe specified, otherwise an error is returned\n"
      },
      "matched": {
        "type": "boolean"
      }
    },
    "name": "PrivateIpRangeInfo"
  },
  {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "Internal identifier of a network"
      },
      "uri": {
        "type": "string",
        "format": "uri",
        "description": "Link to a network resource"
      },
      "name": {
        "type": "string"
      },
      "site": {
        "$ref": "#/components/schemas/AutomaticLocationUpdatesSiteInfo"
      },
      "publicIpRanges": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/PublicIpRangeInfo"
        }
      },
      "privateIpRanges": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/PrivateIpRangeInfo"
        }
      },
      "emergencyLocation": {
        "$ref": "#/components/schemas/ERLLocationInfo"
      }
    },
    "name": "NetworkInfo"
  },
  {
    "type": "object",
    "required": [
      "name",
      "publicIpRanges",
      "privateIpRanges"
    ],
    "properties": {
      "name": {
        "type": "string"
      },
      "site": {
        "$ref": "#/components/schemas/AutomaticLocationUpdatesSiteInfo"
      },
      "publicIpRanges": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/PublicIpRangeInfo"
        }
      },
      "privateIpRanges": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/PrivateIpRangeInfoRequest"
        }
      },
      "emergencyLocation": {
        "$ref": "#/components/schemas/ERLLocationInfo"
      }
    },
    "name": "CreateNetworkRequest"
  },
  {
    "type": "object",
    "properties": {
      "uri": {
        "type": "string",
        "format": "uri",
        "description": "Link to a networks resource"
      },
      "records": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/NetworkInfo"
        }
      },
      "navigation": {
        "$ref": "#/components/schemas/ProvisioningNavigationInfo"
      },
      "paging": {
        "$ref": "#/components/schemas/ProvisioningPagingInfo"
      }
    },
    "name": "NetworksList"
  },
  {
    "type": "object",
    "properties": {
      "id": {
        "type": "string"
      },
      "startIp": {
        "type": "string"
      },
      "endIp": {
        "type": "string"
      },
      "name": {
        "type": "string",
        "description": "Network name"
      },
      "emergencyAddress": {
        "$ref": "#/components/schemas/LocationUpdatesEmergencyAddressInfoRequest"
      },
      "emergencyLocationId": {
        "type": "string",
        "description": "Emergency response location (address) internal identifier.\nOnly one of a pair `emergencyAddress` or `emergencyLocationId` should\nbe specified, otherwise the error is returned\n"
      }
    },
    "name": "PrivateIpRangeInfoRequest"
  },
  {
    "type": "object",
    "properties": {
      "country": {
        "type": "string",
        "description": "Country name"
      },
      "countryId": {
        "type": "string",
        "description": "Internal identifier of a country"
      },
      "countryIsoCode": {
        "type": "string",
        "description": "ISO code of a country"
      },
      "countryName": {
        "type": "string",
        "description": "Full name of a country"
      },
      "customerName": {
        "type": "string",
        "description": "Customer name"
      },
      "state": {
        "type": "string",
        "description": "State/Province name. Mandatory for the USA, the UK and Canada"
      },
      "stateId": {
        "type": "string",
        "description": "Internal identifier of a state"
      },
      "stateIsoCode": {
        "type": "string",
        "description": "ISO code of a state"
      },
      "stateName": {
        "type": "string",
        "description": "Full name of a state"
      },
      "city": {
        "type": "string",
        "description": "City name"
      },
      "street": {
        "type": "string",
        "description": "First line address"
      },
      "street2": {
        "type": "string",
        "description": "Second line address (apartment, suite, unit, building, floor,\netc.)\n"
      },
      "zip": {
        "type": "string",
        "description": "Postal (Zip) code"
      }
    },
    "description": "Emergency address assigned to the switch. Only one of a pair `emergencyAddress`\nor `emergencyLocationId` should be specified, otherwise the error is returned\n",
    "name": "LocationUpdatesEmergencyAddressInfoRequest"
  },
  {
    "type": "object",
    "required": [
      "name",
      "publicIpRanges",
      "privateIpRanges"
    ],
    "properties": {
      "id": {
        "type": "string",
        "example": "2874044",
        "description": "Internal identifier of a network"
      },
      "name": {
        "type": "string"
      },
      "site": {
        "$ref": "#/components/schemas/AutomaticLocationUpdatesSiteInfo"
      },
      "publicIpRanges": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/PublicIpRangeInfo"
        }
      },
      "privateIpRanges": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/PrivateIpRangeInfoRequest"
        }
      },
      "emergencyLocation": {
        "$ref": "#/components/schemas/ERLLocationInfo"
      }
    },
    "name": "UpdateNetworkRequest"
  },
  {
    "type": "object",
    "description": "Emergency address information (or information assigned to the\nswitch or wireless point - in case of using them). Only one of a pair\n`emergencyAddress` or `emergencyLocationId` should be specified,\notherwise an error is returned\n",
    "properties": {
      "customerName": {
        "type": "string",
        "description": "Name of a customer"
      },
      "street": {
        "type": "string",
        "description": "Street address, line 1 - street address, P.O. box, company\nname, c/o\n"
      },
      "street2": {
        "type": "string",
        "description": "Street address, line 2 - apartment, suite, unit, building,\nfloor, etc.\n"
      },
      "city": {
        "type": "string",
        "description": "City name"
      },
      "zip": {
        "type": "string",
        "description": "Zip code"
      },
      "state": {
        "type": "string",
        "description": "State/province name"
      },
      "stateId": {
        "type": "string",
        "description": "Internal identifier of a state"
      },
      "stateIsoCode": {
        "type": "string",
        "description": "ISO code of a state"
      },
      "stateName": {
        "type": "string",
        "description": "Full name of a state"
      },
      "countryId": {
        "type": "string",
        "description": "Internal identifier of a country"
      },
      "countryIsoCode": {
        "type": "string",
        "description": "ISO code of a country"
      },
      "country": {
        "type": "string",
        "description": "Country name"
      },
      "countryName": {
        "type": "string",
        "description": "Full name of a country"
      },
      "syncStatus": {
        "type": "string",
        "description": "Resulting status of emergency address synchronization. Returned\nfor 'Get Device Info' request if `syncEmergencyAddress` parameter is set\nto 'True'\n",
        "enum": [
          "Verified",
          "Updated",
          "Deleted",
          "NotRequired",
          "Unsupported",
          "Failed"
        ]
      }
    },
    "name": "EmergencyAddressInfo"
  },
  {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "Internal identifier of a site"
      },
      "name": {
        "type": "string",
        "description": "Name pf a site"
      }
    },
    "name": "EmergencyAddressAutoUpdateSiteInfo"
  },
  {
    "type": "object",
    "properties": {
      "task": {
        "$ref": "#/components/schemas/BulkTaskInfo"
      }
    },
    "name": "CreateMultipleWirelessPointsResponse"
  },
  {
    "type": "object",
    "properties": {
      "records": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/CreateWirelessPoint"
        }
      }
    },
    "name": "CreateMultipleWirelessPointsRequest"
  },
  {
    "required": [
      "bssid",
      "name"
    ],
    "type": "object",
    "properties": {
      "bssid": {
        "type": "string",
        "description": "Unique 48-bit identifier of wireless access point that follows MAC address conventions.  Mask: XX:XX:XX:XX:XX:XX, where X can be a symbol in the range of 0-9 or A-F"
      },
      "name": {
        "type": "string",
        "description": "Wireless access point name"
      },
      "site": {
        "$ref": "#/components/schemas/EmergencyAddressAutoUpdateSiteInfo"
      },
      "emergencyAddress": {
        "$ref": "#/components/schemas/EmergencyAddressInfo"
      },
      "emergencyLocation": {
        "$ref": "#/components/schemas/EmergencyLocationInfo"
      }
    },
    "name": "CreateWirelessPoint"
  },
  {
    "type": "object",
    "required": [
      "id"
    ],
    "properties": {
      "id": {
        "type": "string",
        "description": "Internal identifier of an emergency response location"
      },
      "name": {
        "type": "string",
        "description": "Emergency response location name"
      }
    },
    "description": "Emergency response location information",
    "name": "EmergencyLocationInfo"
  },
  {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "Internal identifier of a task for multiple switches creation"
      },
      "status": {
        "type": "string",
        "description": "Status of a task",
        "enum": [
          "Accepted",
          "Failed"
        ]
      },
      "creationTime": {
        "type": "string",
        "format": "date-time",
        "description": "Task creation time"
      },
      "lastModifiedTime": {
        "type": "string",
        "format": "date-time",
        "description": "Time of the task latest modification"
      }
    },
    "name": "BulkTaskInfo"
  },
  {
    "type": "object",
    "properties": {
      "records": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/SwitchInfo"
        }
      }
    },
    "name": "ValidateMultipleSwitchesRequest"
  },
  {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "Internal identifier of a site. The company identifier value\nis 'main-site'\n"
      },
      "name": {
        "type": "string",
        "description": "Name of a site"
      }
    },
    "name": "SwitchSiteInfo"
  },
  {
    "type": "object",
    "properties": {
      "records": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/SwitchValidated"
        }
      }
    },
    "name": "ValidateMultipleSwitchesResponse"
  },
  {
    "type": "object",
    "properties": {
      "uri": {
        "type": "string",
        "format": "uri",
        "description": "Link to the network switch resource"
      },
      "id": {
        "type": "string",
        "description": "Internal identifier of a network switch"
      },
      "chassisId": {
        "type": "string",
        "description": "Unique identifier of a network switch"
      },
      "name": {
        "type": "string",
        "description": "Name of a network switch"
      },
      "site": {
        "$ref": "#/components/schemas/SwitchSiteInfo"
      },
      "emergencyAddress": {
        "$ref": "#/components/schemas/EmergencyAddressInfo"
      },
      "emergencyLocation": {
        "$ref": "#/components/schemas/EmergencyLocationInfo"
      }
    },
    "name": "SwitchInfo"
  },
  {
    "type": "object",
    "properties": {
      "errorCode": {
        "type": "string",
        "description": "Error code"
      },
      "message": {
        "type": "string",
        "description": "Error message"
      },
      "parameterName": {
        "type": "string",
        "description": "Name of invalid parameter"
      }
    },
    "name": "ValidationError"
  },
  {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "Internal identifier of a switch"
      },
      "chassisId": {
        "type": "string",
        "description": "Unique identifier of a network switch"
      },
      "status": {
        "type": "string",
        "description": "Validation result status",
        "enum": [
          "Valid",
          "Invalid"
        ]
      },
      "errors": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/ValidationError"
        }
      }
    },
    "name": "SwitchValidated"
  },
  {
    "required": [
      "chassisId"
    ],
    "type": "object",
    "properties": {
      "chassisId": {
        "type": "string",
        "description": "Unique identifier of a network switch. The supported formats are: XX:XX:XX:XX:XX:XX (symbols 0-9 and A-F) for MAC address and X.X.X.X for IP address (symbols 0-255)"
      },
      "name": {
        "type": "string",
        "description": "Name of a network switch"
      },
      "site": {
        "$ref": "#/components/schemas/SwitchSiteInfo"
      },
      "emergencyAddress": {
        "$ref": "#/components/schemas/EmergencyAddressInfo"
      },
      "emergencyLocation": {
        "$ref": "#/components/schemas/EmergencyLocationInfo"
      }
    },
    "name": "CreateSwitchInfo"
  },
  {
    "type": "object",
    "properties": {
      "records": {
        "type": "array",
        "description": "Switches map",
        "items": {
          "$ref": "#/components/schemas/SwitchInfo"
        }
      },
      "navigation": {
        "$ref": "#/components/schemas/ProvisioningNavigationInfo"
      },
      "paging": {
        "$ref": "#/components/schemas/ProvisioningPagingInfo"
      }
    },
    "name": "SwitchesList"
  },
  {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "Internal identifier of a switch"
      },
      "chassisId": {
        "type": "string",
        "description": "Unique identifier of a network switch. The supported formats\nare: XX:XX:XX:XX:XX:XX (symbols 0-9 and A-F) for MAC address and X.X.X.X\nfor IP address (symbols 0-255)\n"
      },
      "name": {
        "type": "string",
        "description": "Name of a network switch"
      },
      "site": {
        "$ref": "#/components/schemas/SwitchSiteInfo"
      },
      "emergencyAddress": {
        "$ref": "#/components/schemas/EmergencyAddressInfo"
      }
    },
    "name": "UpdateSwitchInfo"
  },
  {
    "required": [
      "bssid",
      "emergencyAddress",
      "name"
    ],
    "type": "object",
    "properties": {
      "uri": {
        "type": "string",
        "format": "uri",
        "description": "Link to the wireless point resource"
      },
      "id": {
        "type": "string",
        "description": "Internal identifier of a wireless point"
      },
      "bssid": {
        "type": "string",
        "description": "Unique 48-bit identifier of the wireless access point that follows MAC address conventions"
      },
      "name": {
        "type": "string",
        "description": "Wireless access point name"
      },
      "site": {
        "$ref": "#/components/schemas/EmergencyAddressAutoUpdateSiteInfo"
      },
      "emergencyAddress": {
        "$ref": "#/components/schemas/EmergencyAddressInfo"
      },
      "emergencyLocation": {
        "$ref": "#/components/schemas/ERLLocationInfo"
      },
      "emergencyLocationId": {
        "type": "string",
        "description": "Deprecated. Emergency response location (address) internal identifier. Only one of a pair `emergencyAddress` or `emergencyLocationId` should be specified, otherwise the error is returned"
      }
    },
    "name": "WirelessPointInfo"
  },
  {
    "type": "object",
    "properties": {
      "records": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/WirelessPointInfo"
        }
      }
    },
    "name": "ValidateMultipleWirelessPointsRequest"
  },
  {
    "type": "object",
    "properties": {
      "records": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/WirelessPointValidated"
        }
      }
    },
    "name": "ValidateMultipleWirelessPointsResponse"
  },
  {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "Internal identifier of a wireless point"
      },
      "bssid": {
        "type": "string",
        "description": "Unique 48-bit identifier of the wireless access point that\nfollows MAC address conventions\n"
      },
      "status": {
        "type": "string",
        "description": "Validation result status",
        "enum": [
          "Valid",
          "Invalid"
        ]
      },
      "errors": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/ValidationError"
        }
      }
    },
    "name": "WirelessPointValidated"
  },
  {
    "type": "object",
    "properties": {
      "uri": {
        "type": "string",
        "format": "uri",
        "description": "Link to a wireless points resource"
      },
      "records": {
        "type": "array",
        "description": "List of wireless points with assigned emergency addresses",
        "items": {
          "$ref": "#/components/schemas/WirelessPointInfo"
        }
      },
      "navigation": {
        "$ref": "#/components/schemas/ProvisioningNavigationInfo"
      },
      "paging": {
        "$ref": "#/components/schemas/ProvisioningPagingInfo"
      }
    },
    "name": "WirelessPointsList"
  },
  {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "Internal identifier of a wireless point"
      },
      "bssid": {
        "type": "string",
        "description": "Unique 48-bit identifier of wireless access point that follows\nMAC address conventions. Mask: XX:XX:XX:XX:XX:XX, where X can be a symbol\nin the range of 0-9 or A-F\n"
      },
      "name": {
        "type": "string",
        "description": "Name of a wireless access point"
      },
      "site": {
        "$ref": "#/components/schemas/EmergencyAddressAutoUpdateSiteInfo"
      },
      "emergencyAddress": {
        "$ref": "#/components/schemas/EmergencyAddressInfo"
      }
    },
    "name": "UpdateWirelessPoint"
  },
  {
    "type": "object",
    "properties": {
      "uri": {
        "type": "string",
        "format": "uri",
        "description": "Link to a devices resource"
      },
      "records": {
        "type": "array",
        "description": "List of the user(s) devices with the current status of Emergency\nAddress Auto Update Feature\n",
        "items": {
          "$ref": "#/components/schemas/AutomaticLocationUpdatesDeviceInfo"
        }
      },
      "navigation": {
        "$ref": "#/components/schemas/ProvisioningNavigationInfo"
      },
      "paging": {
        "$ref": "#/components/schemas/ProvisioningPagingInfo"
      }
    },
    "name": "ListDevicesAutomaticLocationUpdates"
  },
  {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "Internal identifier of a device"
      },
      "type": {
        "type": "string",
        "description": "Device type",
        "default": "HardPhone",
        "enum": [
          "HardPhone",
          "SoftPhone",
          "OtherPhone"
        ]
      },
      "serial": {
        "type": "string",
        "description": "Serial number for HardPhone (is returned only when the phone is shipped and provisioned)"
      },
      "featureEnabled": {
        "type": "boolean",
        "description": "Specifies if Automatic Location Updates feature is enabled"
      },
      "name": {
        "type": "string",
        "description": "Device name"
      },
      "model": {
        "$ref": "#/components/schemas/AutomaticLocationUpdatesModelInfo"
      },
      "site": {
        "$ref": "#/components/schemas/AutomaticLocationUpdatesSiteInfo"
      },
      "phoneLines": {
        "type": "array",
        "description": "Phone lines information",
        "items": {
          "$ref": "#/components/schemas/AutomaticLocationUpdatesPhoneLine"
        }
      }
    },
    "name": "AutomaticLocationUpdatesDeviceInfo"
  },
  {
    "type": "object",
    "properties": {
      "lineType": {
        "type": "string",
        "enum": [
          "Unknown",
          "Standalone",
          "StandaloneFree",
          "BlaPrimary",
          "BlaSecondary",
          "BLF"
        ]
      },
      "phoneInfo": {
        "$ref": "#/components/schemas/AutomaticLocationUpdatesPhoneNumberInfo"
      }
    },
    "name": "AutomaticLocationUpdatesPhoneLine"
  },
  {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "Device model identifier"
      },
      "name": {
        "type": "string",
        "description": "Device name"
      },
      "features": {
        "type": "array",
        "description": "Device feature or multiple features supported",
        "items": {
          "type": "string",
          "enum": [
            "BLA",
            "Intercom",
            "Paging",
            "HELD"
          ]
        }
      }
    },
    "description": "HardPhone model information",
    "name": "AutomaticLocationUpdatesModelInfo"
  },
  {
    "type": "object",
    "properties": {
      "id": {
        "type": "integer",
        "format": "int64",
        "description": "Internal identifier of a phone number"
      },
      "phoneNumber": {
        "type": "string",
        "description": "Phone number"
      }
    },
    "name": "AutomaticLocationUpdatesPhoneNumberInfo"
  },
  {
    "type": "object",
    "properties": {
      "enabledDeviceIds": {
        "type": "array",
        "items": {
          "type": "string",
          "description": "List of common devices for feature activation"
        }
      },
      "disabledDeviceIds": {
        "type": "array",
        "items": {
          "type": "string",
          "description": "List of common devices for feature disabling"
        }
      }
    },
    "name": "AssignMultipleDevicesAutomaticLocationUpdates"
  },
  {
    "type": "object",
    "properties": {
      "task": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/BulkTaskInfo"
        }
      }
    },
    "description": "Information on a task for multiple switches creation",
    "name": "CreateMultipleSwitchesResponse"
  },
  {
    "type": "object",
    "properties": {
      "records": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/CreateSwitchInfo"
        }
      }
    },
    "name": "CreateMultipleSwitchesRequest"
  },
  {
    "type": "object",
    "properties": {
      "task": {
        "$ref": "#/components/schemas/BulkTaskInfo"
      }
    },
    "name": "UpdateMultipleWirelessPointsResponse"
  },
  {
    "type": "object",
    "properties": {
      "records": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/UpdateWirelessPoint"
        }
      }
    },
    "name": "UpdateMultipleWirelessPointsRequest"
  },
  {
    "type": "object",
    "properties": {
      "records": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/UpdateSwitchInfo"
        }
      }
    },
    "name": "UpdateMultipleSwitchesRequest"
  },
  {
    "type": "object",
    "properties": {
      "task": {
        "$ref": "#/components/schemas/BulkTaskInfo"
      }
    },
    "name": "UpdateMultipleSwitchesResponse"
  },
  {
    "type": "object",
    "properties": {
      "uri": {
        "type": "string",
        "format": "uri",
        "description": "Link to a company phone number resource"
      },
      "id": {
        "type": "integer",
        "format": "int64",
        "description": "Internal identifier of a phone number"
      },
      "country": {
        "$ref": "#/components/schemas/CountryInfoBasicModel"
      },
      "extension": {
        "$ref": "#/components/schemas/ExtensionInfo"
      },
      "label": {
        "type": "string",
        "description": "Custom user name of a phone number, if any"
      },
      "location": {
        "type": "string",
        "description": "Location (City, State). Filled for local US numbers"
      },
      "paymentType": {
        "type": "string",
        "description": "Payment type. 'External' is returned for forwarded numbers\nwhich are not terminated in the RingCentral phone system\n",
        "enum": [
          "External",
          "TollFree",
          "Local",
          "BusinessMobileNumberProvider",
          "ExternalNumberProvider"
        ]
      },
      "phoneNumber": {
        "type": "string",
        "description": "Phone number"
      },
      "status": {
        "type": "string",
        "description": "Status of a phone number. If the value is 'Normal', the phone\nnumber is ready to be used. If the value is 'Pending' it is an\nexternal number not yet ported to RingCentral.\n",
        "enum": [
          "Normal",
          "Pending",
          "PortedIn",
          "Temporary"
        ]
      },
      "type": {
        "type": "string",
        "description": "Phone number type",
        "enum": [
          "VoiceFax",
          "FaxOnly",
          "VoiceOnly"
        ]
      },
      "usageType": {
        "type": "string",
        "description": "Usage type of a phone number. Usage type of a phone number.\nNumbers of 'NumberPool' type wont't be returned for phone number list\nrequests\n",
        "enum": [
          "MainCompanyNumber",
          "AdditionalCompanyNumber",
          "CompanyNumber",
          "DirectNumber",
          "CompanyFaxNumber",
          "ForwardedNumber",
          "ForwardedCompanyNumber",
          "ContactCenterNumber",
          "ConferencingNumber",
          "MeetingsNumber",
          "NumberPool",
          "BusinessMobileNumber",
          "IntegrationNumber"
        ]
      },
      "temporaryNumber": {
        "$ref": "#/components/schemas/TemporaryNumberInfo"
      },
      "contactCenterProvider": {
        "$ref": "#/components/schemas/ContactCenterProvider"
      },
      "vanityPattern": {
        "type": "string",
        "description": "Vanity pattern for this number. Returned only when vanity search option is requested. Vanity pattern corresponds to request parameters nxx plus line or numberPattern"
      }
    },
    "name": "CompanyPhoneNumberInfo"
  },
  {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "Temporary phone number identifier"
      },
      "phoneNumber": {
        "type": "string",
        "description": "Temporary phone number in [E.164](https://www.itu.int/rec/T-REC-E.164-201011-I) (with '+' sign) format"
      }
    },
    "description": "Temporary phone number, if any. Returned for phone numbers in `Pending` porting status only",
    "name": "TemporaryNumberInfo"
  },
  {
    "type": "object",
    "properties": {
      "uri": {
        "type": "string",
        "format": "uri",
        "description": "Link to a list of account phone numbers"
      },
      "records": {
        "type": "array",
        "description": "List of account phone numbers",
        "items": {
          "$ref": "#/components/schemas/CompanyPhoneNumberInfo"
        }
      },
      "navigation": {
        "$ref": "#/components/schemas/ProvisioningNavigationInfo"
      },
      "paging": {
        "$ref": "#/components/schemas/ProvisioningPagingInfo"
      }
    },
    "name": "AccountPhoneNumbers"
  },
  {
    "type": "object",
    "required": [
      "uri",
      "records"
    ],
    "properties": {
      "uri": {
        "type": "string",
        "format": "uri",
        "description": "Canonical URI of a resource"
      },
      "records": {
        "type": "array",
        "minItems": 0,
        "maxItems": 20,
        "items": {
          "$ref": "#/components/schemas/SubscriptionInfo"
        }
      }
    },
    "name": "SubscriptionListResource"
  },
  {
    "discriminator": {
      "propertyName": "transportType",
      "mapping": {
        "WebHook": "#/components/schemas/WebhookDeliveryModeRequest",
        "RC/APNS": "#/components/schemas/MobileDeliveryModeRequest",
        "RC/GCM": "#/components/schemas/MobileDeliveryModeRequest",
        "PubNub": "#/components/schemas/PubNubDeliveryModeRequest"
      }
    },
    "name": "NotificationDeliveryModeRequest",
    "type": "object",
    "required": [
      "transportType",
      "address",
      "certificateName",
      "registrationId"
    ],
    "properties": {
      "transportType": {
        "type": "string",
        "description": "Notifications transport type",
        "enum": [
          "WebHook",
          "RC/APNS",
          "RC/GCM",
          "PubNub"
        ]
      },
      "address": {
        "type": "string",
        "format": "uri",
        "description": "(Only for a \"WebHook\" transport, required) URL of a subscriber's web service\n",
        "example": "https://acme.com/myservice/webhook"
      },
      "verificationToken": {
        "type": "string",
        "description": "(Only for a \"WebHook\" transport, optional) Subscription verification token",
        "writeOnly": true
      },
      "certificateName": {
        "type": "string",
        "description": "Certificate name for mobile notification transports"
      },
      "registrationId": {
        "type": "string",
        "description": "Device instance ID for mobile notification transports",
        "example": "38b062ae-85f8-4dcc-8734-04d3f7393d42"
      },
      "encryption": {
        "type": "boolean",
        "description": "Optional. Specifies if notification messages will be encrypted\nor not. Please note that for some event filters (e.g. presence) encryption is mandatory and\n`false` value provided by caller will be ignored.\n",
        "default": false
      }
    }
  },
  {
    "name": "CreateSubscriptionRequest",
    "type": "object",
    "required": [
      "eventFilters",
      "deliveryMode"
    ],
    "properties": {
      "eventFilters": {
        "type": "array",
        "description": "The list of event filters corresponding to events the user is subscribed to",
        "minItems": 1,
        "items": {
          "type": "string",
          "minLength": 1
        }
      },
      "expiresIn": {
        "type": "integer",
        "format": "int32",
        "minimum": 1,
        "description": "Subscription lifetime in seconds.\n- For \"WebHook\" transport type max value might be set up to 315360000 seconds (10 years).\n- For \"RC/APNS\" and \"RC/GSM\" transport types max subscription lifetime is 7776000 seconds (90 days).\n- For \"PubNub\" transport type the max value is 900 seconds (15 minutes)\n"
      },
      "deliveryMode": {
        "$ref": "#/components/schemas/NotificationDeliveryModeRequest"
      }
    }
  },
  {
    "type": "object",
    "required": [
      "transportType"
    ],
    "properties": {
      "transportType": {
        "type": "string",
        "description": "Notifications transport type",
        "enum": [
          "PubNub"
        ]
      },
      "encryption": {
        "type": "boolean",
        "description": "Optional. Specifies if notification messages will be encrypted\nor not. Please note that for some event filters (e.g. presence) encryption is mandatory and\n`false` value provided by caller will be ignored.\n",
        "default": false
      }
    },
    "name": "PubNubDeliveryModeRequest"
  },
  {
    "type": "object",
    "required": [
      "eventFilters"
    ],
    "properties": {
      "eventFilters": {
        "type": "array",
        "description": "The list of event filters corresponding to events the user is subscribed to",
        "minItems": 1,
        "items": {
          "type": "string",
          "minLength": 1
        }
      },
      "expiresIn": {
        "type": "integer",
        "format": "int32",
        "minimum": 1,
        "description": "Subscription lifetime in seconds.\n- For \"WebHook\" transport type max value might be set up to 315360000 seconds (10 years).\n- For \"RC/APNS\" and \"RC/GSM\" transport types max subscription lifetime is 7776000 seconds (90 days).\n- For \"PubNub\" transport type the max value is 900 seconds (15 minutes)\n"
      }
    },
    "name": "UpdateSubscriptionRequest"
  },
  {
    "discriminator": {
      "propertyName": "transportType",
      "mapping": {
        "WebHook": "#/components/schemas/WebhookDeliveryMode",
        "RC/APNS": "#/components/schemas/MobileDeliveryMode",
        "RC/GCM": "#/components/schemas/MobileDeliveryMode",
        "PubNub": "#/components/schemas/PubNubDeliveryMode"
      }
    },
    "name": "NotificationDeliveryMode",
    "type": "object",
    "required": [
      "transportType",
      "address",
      "encryption",
      "certificateName",
      "registrationId",
      "subscriberKey",
      "secretKey"
    ],
    "properties": {
      "transportType": {
        "type": "string",
        "description": "Notifications transport type",
        "enum": [
          "WebHook",
          "RC/APNS",
          "RC/GCM",
          "PubNub"
        ]
      },
      "address": {
        "type": "string",
        "format": "uri",
        "description": "PubNub channel name\n",
        "example": "54770517599294_6dda849e",
        "readOnly": true
      },
      "encryption": {
        "type": "boolean",
        "description": "Optional. Specifies if notification messages will be encrypted\nor not. Please note that for some event filters (e.g. presence) encryption is mandatory and\n`false` value provided by caller will be ignored.\n",
        "enum": [
          false
        ],
        "readOnly": true,
        "default": false
      },
      "certificateName": {
        "type": "string",
        "description": "Certificate name for mobile notification transports"
      },
      "registrationId": {
        "type": "string",
        "description": "Device instance ID for mobile notification transports",
        "example": "38b062ae-85f8-4dcc-8734-04d3f7393d42"
      },
      "subscriberKey": {
        "type": "string",
        "description": "PubNub credential required to subscribe to the channel",
        "readOnly": true
      },
      "secretKey": {
        "type": "string",
        "description": "PubNub credential required to subscribe to the channel",
        "readOnly": true
      },
      "encryptionAlgorithm": {
        "type": "string",
        "description": "(Only for a \"PubNub\" transport, returned only if `encryption` is `true`)\nEncryption algorithm used\n",
        "enum": [
          "AES"
        ],
        "readOnly": true
      },
      "encryptionKey": {
        "type": "string",
        "description": "(Only for a \"PubNub\" transport, returned only if `encryption` is `true`)\nCryptographic key to decrypt PubNub notification messages\n",
        "readOnly": true
      }
    }
  },
  {
    "name": "MobileDeliveryMode",
    "type": "object",
    "required": [
      "transportType",
      "certificateName",
      "registrationId",
      "encryption"
    ],
    "properties": {
      "transportType": {
        "type": "string",
        "description": "Notifications transport type",
        "enum": [
          "RC/APNS",
          "RC/GCM"
        ]
      },
      "certificateName": {
        "type": "string",
        "description": "Certificate name for mobile notification transports"
      },
      "registrationId": {
        "type": "string",
        "description": "Device instance ID for mobile notification transports",
        "example": "38b062ae-85f8-4dcc-8734-04d3f7393d42"
      },
      "encryption": {
        "type": "boolean",
        "description": "Specifies if notification messages will be encrypted or not.",
        "enum": [
          false
        ],
        "readOnly": true
      }
    }
  },
  {
    "type": "object",
    "required": [
      "transportType",
      "certificateName",
      "registrationId"
    ],
    "properties": {
      "transportType": {
        "type": "string",
        "description": "Notifications transport type",
        "enum": [
          "RC/APNS",
          "RC/GCM"
        ]
      },
      "certificateName": {
        "type": "string",
        "description": "Certificate name for mobile notification transports"
      },
      "registrationId": {
        "type": "string",
        "description": "Device instance ID for mobile notification transports",
        "example": "38b062ae-85f8-4dcc-8734-04d3f7393d42"
      }
    },
    "name": "MobileDeliveryModeRequest"
  },
  {
    "type": "object",
    "required": [
      "transportType",
      "address"
    ],
    "properties": {
      "transportType": {
        "type": "string",
        "description": "Notifications transport type",
        "enum": [
          "WebHook"
        ]
      },
      "address": {
        "type": "string",
        "format": "uri",
        "description": "(Only for a \"WebHook\" transport, required) URL of a subscriber's web service\n",
        "example": "https://acme.com/myservice/webhook"
      },
      "verificationToken": {
        "type": "string",
        "description": "(Only for a \"WebHook\" transport, optional) Subscription verification token",
        "writeOnly": true
      }
    },
    "name": "WebhookDeliveryModeRequest"
  },
  {
    "type": "object",
    "required": [
      "filter",
      "reason"
    ],
    "properties": {
      "filter": {
        "type": "string",
        "description": "Event filter that is disabled for the user"
      },
      "reason": {
        "type": "string",
        "description": "Reason why the filter is disabled for the user"
      },
      "message": {
        "type": "string",
        "description": "Error message"
      }
    },
    "name": "DisabledFilterInfo"
  },
  {
    "name": "PubNubDeliveryMode",
    "type": "object",
    "required": [
      "transportType",
      "address",
      "subscriberKey",
      "secretKey",
      "encryption"
    ],
    "properties": {
      "transportType": {
        "type": "string",
        "description": "Notifications transport type",
        "enum": [
          "PubNub"
        ]
      },
      "encryption": {
        "type": "boolean",
        "description": "Optional. Specifies if notification messages will be encrypted\nor not. Please note that for some event filters (e.g. presence) encryption is mandatory and\n`false` value provided by caller will be ignored.\n",
        "default": false
      },
      "address": {
        "type": "string",
        "description": "PubNub channel name\n",
        "example": "54770517599294_6dda849e",
        "readOnly": true
      },
      "subscriberKey": {
        "type": "string",
        "description": "PubNub credential required to subscribe to the channel",
        "readOnly": true
      },
      "secretKey": {
        "type": "string",
        "description": "PubNub credential required to subscribe to the channel",
        "readOnly": true
      },
      "encryptionAlgorithm": {
        "type": "string",
        "description": "(Only for a \"PubNub\" transport, returned only if `encryption` is `true`)\nEncryption algorithm used\n",
        "enum": [
          "AES"
        ],
        "readOnly": true
      },
      "encryptionKey": {
        "type": "string",
        "description": "(Only for a \"PubNub\" transport, returned only if `encryption` is `true`)\nCryptographic key to decrypt PubNub notification messages\n",
        "readOnly": true
      }
    }
  },
  {
    "required": [
      "id",
      "uri",
      "eventFilters",
      "deliveryMode",
      "creationTime",
      "expirationTime",
      "status"
    ],
    "type": "object",
    "properties": {
      "uri": {
        "type": "string",
        "format": "uri",
        "description": "Canonical URI of a subscription resource",
        "readOnly": true
      },
      "id": {
        "type": "string",
        "format": "uuid",
        "description": "Internal identifier of a subscription",
        "readOnly": true,
        "example": "95fecfc9-9cdc-4e94-a78a-89fd65889d37"
      },
      "eventFilters": {
        "type": "array",
        "description": "The list of event filter names corresponding to events the user is subscribed to",
        "minItems": 0,
        "items": {
          "type": "string",
          "minLength": 1
        }
      },
      "disabledFilters": {
        "type": "array",
        "minItems": 0,
        "description": "The list of event filter names corresponding to events the user is not subscribed to due to\ncertain limitations\n",
        "items": {
          "$ref": "#/components/schemas/DisabledFilterInfo"
        },
        "readOnly": true
      },
      "expirationTime": {
        "type": "string",
        "format": "date-time",
        "description": "Subscription expiration time in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601)\nformat including timezone, for example *2016-03-10T18:07:52.534Z*\n",
        "readOnly": true
      },
      "expiresIn": {
        "type": "integer",
        "format": "int32",
        "minimum": 1,
        "description": "Subscription lifetime in seconds"
      },
      "status": {
        "type": "string",
        "description": "Subscription status",
        "enum": [
          "Active",
          "Suspended",
          "Blacklisted"
        ],
        "readOnly": true
      },
      "creationTime": {
        "type": "string",
        "description": "Subscription creation time in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601)\nformat including timezone, for example *2016-03-10T18:07:52.534*\n",
        "format": "date-time",
        "readOnly": true
      },
      "deliveryMode": {
        "$ref": "#/components/schemas/NotificationDeliveryMode"
      },
      "blacklistedData": {
        "description": "Returned if a WebHook subscription is blacklisted",
        "readOnly": true,
        "$ref": "#/components/schemas/SubscriptionInfoBlacklistedData"
      }
    },
    "name": "SubscriptionInfo"
  },
  {
    "type": "object",
    "required": [
      "transportType",
      "address",
      "encryption"
    ],
    "properties": {
      "transportType": {
        "type": "string",
        "description": "Notifications transport type",
        "enum": [
          "WebHook"
        ]
      },
      "address": {
        "type": "string",
        "format": "uri",
        "description": "(Only for a \"WebHook\" transport, required) URL of a subscriber's web service\n",
        "example": "https://acme.com/myservice/webhook"
      },
      "encryption": {
        "type": "boolean",
        "description": "Specifies if notification messages will be encrypted or not.",
        "enum": [
          false
        ],
        "readOnly": true
      }
    },
    "name": "WebhookDeliveryMode"
  },
  {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "Internal identifier of a country"
      },
      "uri": {
        "type": "string",
        "format": "uri",
        "description": "Canonical URI of a country resource"
      },
      "callingCode": {
        "type": "string",
        "description": "Country calling code defined by ITU-T recommendations `E.123`\nand `E.164`, see Calling Codes\n",
        "example": "1"
      },
      "isoCode": {
        "type": "string",
        "description": "Country code in `ISO 3166` alpha-2 format",
        "pattern": "^[A-Za-z]{2}$",
        "example": "US"
      },
      "name": {
        "type": "string",
        "description": "The official name of the country.",
        "example": "United States"
      }
    },
    "name": "GetCountryInfoNumberParser"
  },
  {
    "type": "object",
    "properties": {
      "originalString": {
        "type": "string",
        "description": "Original phone number string as it was passed in the request",
        "example": "(650) 722-1621"
      },
      "country": {
        "$ref": "#/components/schemas/GetCountryInfoNumberParser"
      },
      "areaCode": {
        "type": "string",
        "description": "Area code of location. The portion of the [E.164](https://www.itu.int/rec/T-REC-E.164-201011-I)\nnumber that identifies a specific geographic region/numbering area of\nthe national numbering plan (NANP); that can be summarized as `NPA-NXX-xxxx`\nand covers Canada, the United States, parts of the Caribbean Sea, and\nsome Atlantic and Pacific islands.\nSee [North American Numbering Plan](https://en.wikipedia.org/wiki/North_American_Numbering_Plan)\nfor details\n",
        "example": "650"
      },
      "dialable": {
        "type": "string",
        "description": "Dialing format of a phone number"
      },
      "e164": {
        "type": "string",
        "description": "Phone number in [E.164](https://www.itu.int/rec/T-REC-E.164-201011-I) format"
      },
      "formattedInternational": {
        "type": "string",
        "description": "The formatted phone number string in international format"
      },
      "formattedNational": {
        "type": "string",
        "description": "The formatted phone number string in domestic format"
      },
      "special": {
        "type": "boolean",
        "description": "Indicates if the number is in a special format (for example N11 code)'"
      },
      "normalized": {
        "type": "string",
        "description": "Phone number in [E.164](https://www.itu.int/rec/T-REC-E.164-201011-I) format without plus sign ('+')"
      },
      "tollFree": {
        "type": "boolean",
        "description": "Indicates if the number is toll free"
      },
      "subAddress": {
        "type": "string",
        "description": "Sub-Address. The portion of the number that identifies a subscriber into the subscriber internal (non-public) network."
      },
      "subscriberNumber": {
        "type": "string",
        "description": "Subscriber number. The portion of the [E.164](https://www.itu.int/rec/T-REC-E.164-201011-I) number that identifies a subscriber in a network or numbering area."
      },
      "dtmfPostfix": {
        "type": "string",
        "description": "DTMF (Dual Tone Multi-Frequency) postfix"
      }
    },
    "name": "PhoneNumberInfoNumberParser"
  },
  {
    "type": "object",
    "properties": {
      "originalStrings": {
        "type": "array",
        "description": "The list of phone numbers passed as an array of strings (not more than 64 items). The maximum size of each string is 64 characters",
        "maxItems": 64,
        "items": {
          "type": "string",
          "maxLength": 64,
          "example": "(650) 722-1621"
        }
      }
    },
    "name": "ParsePhoneNumberRequest"
  },
  {
    "required": [
      "homeCountry",
      "phoneNumbers"
    ],
    "type": "object",
    "properties": {
      "uri": {
        "type": "string",
        "format": "uri",
        "description": "Canonical URI of a resource"
      },
      "homeCountry": {
        "$ref": "#/components/schemas/GetCountryInfoNumberParser"
      },
      "phoneNumbers": {
        "type": "array",
        "description": "Parsed phone numbers information",
        "items": {
          "$ref": "#/components/schemas/PhoneNumberInfoNumberParser"
        }
      }
    },
    "name": "ParsePhoneNumberResponse"
  },
  {
    "type": "object",
    "required": [
      "records"
    ],
    "properties": {
      "records": {
        "type": "array",
        "description": "List of countries with the country data",
        "items": {
          "$ref": "#/components/schemas/ContractedCountryListResponseRecords"
        }
      }
    },
    "name": "ContractedCountryListResponse"
  },
  {
    "required": [
      "navigation",
      "paging",
      "records"
    ],
    "type": "object",
    "properties": {
      "uri": {
        "type": "string",
        "format": "uri",
        "description": "Link to the list of countries supported"
      },
      "records": {
        "type": "array",
        "description": "List of countries with the country data",
        "items": {
          "$ref": "#/components/schemas/CountryInfoDictionaryModel"
        }
      },
      "navigation": {
        "$ref": "#/components/schemas/ProvisioningNavigationInfo"
      },
      "paging": {
        "$ref": "#/components/schemas/ProvisioningPagingInfo"
      }
    },
    "name": "CountryListDictionaryModel"
  },
  {
    "name": "CountryInfoDictionaryModel",
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "Internal identifier of a country"
      },
      "uri": {
        "type": "string",
        "format": "uri",
        "description": "Canonical URI of a country resource"
      },
      "name": {
        "type": "string",
        "description": "The official name of a country"
      },
      "isoCode": {
        "type": "string",
        "description": "Country code according to the ISO standard, see\n[ISO 3166](https://www.iso.org/iso-3166-country-codes.html)\n"
      },
      "callingCode": {
        "type": "string",
        "description": "Country calling code defined by [ITU-T](http://en.wikipedia.org/wiki/ITU-T)\nrecommendations [E.123](http://en.wikipedia.org/wiki/E.123) and\n[E.164](http://en.wikipedia.org/wiki/E.164),\nsee [Calling Codes](http://en.wikipedia.org/wiki/List_of_country_calling_codes)\n"
      },
      "emergencyCalling": {
        "type": "boolean",
        "description": "Emergency calling feature availability/emergency address requirement indicator\n"
      },
      "numberSelling": {
        "type": "boolean",
        "description": "Indicates that phone numbers are available for this country"
      },
      "loginAllowed": {
        "type": "boolean",
        "description": "Indicates that login with the phone number of this country is allowed"
      },
      "signupAllowed": {
        "type": "boolean",
        "description": "Indicates that signup/billing is allowed for this country"
      },
      "freeSoftphoneLine": {
        "type": "boolean",
        "description": "Indicates that free phone line for softphone is available for this country"
      },
      "localDialing": {
        "type": "boolean",
        "description": "Indicates that the local dialing is supported in this country and default area code can be set"
      }
    }
  },
  {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "Internal identifier of a state"
      },
      "uri": {
        "type": "string",
        "format": "uri",
        "description": "Canonical URI of a state"
      },
      "country": {
        "$ref": "#/components/schemas/CountryInfoMinimalModel"
      },
      "isoCode": {
        "type": "string",
        "description": "Short code for a state (2-letter usually)"
      },
      "name": {
        "type": "string",
        "description": "Official name of a state"
      }
    },
    "name": "GetStateInfoResponse"
  },
  {
    "type": "object",
    "properties": {
      "uri": {
        "type": "string",
        "format": "uri",
        "description": "Link to a states list resource"
      },
      "records": {
        "type": "array",
        "description": "List of states",
        "items": {
          "$ref": "#/components/schemas/GetStateInfoResponse"
        }
      },
      "navigation": {
        "$ref": "#/components/schemas/ProvisioningNavigationInfo"
      },
      "paging": {
        "$ref": "#/components/schemas/ProvisioningPagingInfo"
      }
    },
    "name": "GetStateListResponse"
  },
  {
    "type": "object",
    "properties": {
      "uri": {
        "type": "string",
        "format": "uri",
        "description": "Canonical URI of the language list resource"
      },
      "records": {
        "type": "array",
        "description": "Language data",
        "items": {
          "$ref": "#/components/schemas/LanguageInfo"
        }
      },
      "navigation": {
        "$ref": "#/components/schemas/ProvisioningNavigationInfo"
      },
      "paging": {
        "$ref": "#/components/schemas/ProvisioningPagingInfo"
      }
    },
    "name": "LanguageList"
  },
  {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "Internal identifier of a language"
      },
      "uri": {
        "type": "string",
        "format": "uri",
        "description": "Canonical URI of a language"
      },
      "greeting": {
        "type": "boolean",
        "description": "Indicates whether a language is available as\ngreeting language\n"
      },
      "formattingLocale": {
        "type": "boolean",
        "description": "Indicates whether a language is available as\nformatting locale\n"
      },
      "localeCode": {
        "type": "string",
        "description": "Localization code of a language"
      },
      "isoCode": {
        "type": "string",
        "description": "Country code according to the ISO standard, see\n[ISO 3166](https://www.iso.org/iso-3166-country-codes.html)\n"
      },
      "name": {
        "type": "string",
        "description": "Official name of a language"
      },
      "ui": {
        "type": "boolean",
        "description": "Indicates whether a language is available as UI language\n"
      }
    },
    "description": "User interface language data",
    "name": "LanguageInfo"
  },
  {
    "type": "object",
    "properties": {
      "uri": {
        "type": "string",
        "format": "uri"
      },
      "records": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/PermissionResource"
        }
      },
      "paging": {
        "$ref": "#/components/schemas/EnumeratedPagingModel"
      },
      "navigation": {
        "$ref": "#/components/schemas/PageNavigationModel"
      }
    },
    "name": "PermissionCollectionResource"
  },
  {
    "type": "object",
    "properties": {
      "uri": {
        "type": "string",
        "format": "uri"
      },
      "id": {
        "type": "string"
      }
    },
    "name": "PermissionCategoryIdResource"
  },
  {
    "type": "object",
    "properties": {
      "uri": {
        "type": "string",
        "format": "uri"
      },
      "id": {
        "type": "string"
      },
      "displayName": {
        "type": "string"
      },
      "description": {
        "type": "string"
      },
      "assignable": {
        "type": "boolean",
        "default": false
      },
      "readOnly": {
        "type": "boolean",
        "default": false
      },
      "siteCompatible": {
        "type": "string",
        "description": "Site compatibility flag set for permission",
        "enum": [
          "Incompatible",
          "Compatible",
          "Independent"
        ]
      },
      "category": {
        "$ref": "#/components/schemas/PermissionCategoryIdResource"
      },
      "includedPermissions": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/PermissionIdResource"
        }
      }
    },
    "name": "PermissionResource"
  },
  {
    "required": [
      "navigation",
      "paging"
    ],
    "type": "object",
    "properties": {
      "uri": {
        "type": "string",
        "format": "uri",
        "description": "Link to the location list resource"
      },
      "records": {
        "type": "array",
        "description": "List of locations",
        "items": {
          "$ref": "#/components/schemas/LocationInfo"
        }
      },
      "navigation": {
        "$ref": "#/components/schemas/ProvisioningNavigationInfo"
      },
      "paging": {
        "$ref": "#/components/schemas/ProvisioningPagingInfo"
      }
    },
    "name": "GetLocationListResponse"
  },
  {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "Internal identifier of a state"
      },
      "uri": {
        "type": "string",
        "format": "uri",
        "description": "Link to a state resource"
      }
    },
    "description": "Information on a state this location belongs to",
    "name": "LocationStateInfo"
  },
  {
    "type": "object",
    "properties": {
      "uri": {
        "type": "string",
        "format": "uri",
        "description": "Canonical URI of a location"
      },
      "areaCode": {
        "type": "string",
        "description": "Area code of the location"
      },
      "city": {
        "type": "string",
        "description": "Official name of the city, belonging to the certain state\n"
      },
      "npa": {
        "type": "string",
        "description": "Area code of the location (3-digit usually), according to the\nNANP number format, that can be summarized as NPA-NXX-xxxx and covers\nCanada, the United States, parts of the Caribbean Sea, and some Atlantic\nand Pacific islands. See for details North American Numbering Plan\n"
      },
      "nxx": {
        "type": "string",
        "description": "Central office code of the location, according to the NANP\nnumber format, that can be summarized as NPA-NXX-xxxx and covers Canada,\nthe United States, parts of the Caribbean Sea, and some Atlantic and Pacific\nislands. See for details North American Numbering Plan\n"
      },
      "state": {
        "$ref": "#/components/schemas/LocationStateInfo"
      }
    },
    "name": "LocationInfo"
  },
  {
    "type": "object",
    "properties": {
      "uri": {
        "type": "string",
        "format": "uri"
      },
      "id": {
        "type": "string"
      },
      "displayName": {
        "type": "string"
      },
      "description": {
        "type": "string"
      }
    },
    "name": "PermissionCategoryResource"
  },
  {
    "type": "object",
    "properties": {
      "uri": {
        "type": "string",
        "format": "uri"
      },
      "records": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/PermissionCategoryResource"
        }
      },
      "paging": {
        "$ref": "#/components/schemas/EnumeratedPagingModel"
      },
      "navigation": {
        "$ref": "#/components/schemas/PageNavigationModel"
      }
    },
    "name": "PermissionCategoryCollectionResource"
  },
  {
    "type": "object",
    "properties": {
      "uri": {
        "type": "string",
        "format": "uri",
        "description": "Canonical URI of greetings list resource"
      },
      "records": {
        "type": "array",
        "description": "List of greetings",
        "items": {
          "$ref": "#/components/schemas/DictionaryGreetingInfo"
        }
      },
      "navigation": {
        "$ref": "#/components/schemas/PageNavigationModel"
      },
      "paging": {
        "$ref": "#/components/schemas/EnumeratedPagingModel"
      }
    },
    "name": "DictionaryGreetingList"
  },
  {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "Internal identifier of a greeting"
      },
      "uri": {
        "type": "string",
        "format": "uri",
        "description": "Link to a greeting"
      },
      "name": {
        "type": "string",
        "description": "Name of a greeting"
      },
      "usageType": {
        "type": "string",
        "description": "Usage type of a greeting, specifying if the greeting is applied for user extension or department (call queue) extension.",
        "enum": [
          "UserExtensionAnsweringRule",
          "ExtensionAnsweringRule",
          "DepartmentExtensionAnsweringRule",
          "BlockedCalls",
          "CallRecording",
          "CompanyAnsweringRule",
          "CompanyAfterHoursAnsweringRule",
          "LimitedExtensionAnsweringRule",
          "VoicemailExtensionAnsweringRule",
          "AnnouncementExtensionAnsweringRule",
          "SharedLinesGroupAnsweringRule"
        ]
      },
      "text": {
        "type": "string",
        "description": "Text of a greeting, if any"
      },
      "contentUri": {
        "type": "string",
        "format": "uri",
        "description": "Link to a greeting content (audio file), if any"
      },
      "type": {
        "type": "string",
        "description": "Type of a greeting, specifying the case when the greeting is played.",
        "enum": [
          "Introductory",
          "Announcement",
          "AutomaticRecording",
          "BlockedCallersAll",
          "BlockedCallersSpecific",
          "BlockedNoCallerId",
          "BlockedPayPhones",
          "ConnectingMessage",
          "ConnectingAudio",
          "StartRecording",
          "StopRecording",
          "Voicemail",
          "Unavailable",
          "InterruptPrompt",
          "HoldMusic",
          "Company"
        ]
      },
      "category": {
        "type": "string",
        "description": "Category of a greeting, specifying data form. The category value 'None' specifies that greetings of a certain type ('Introductory', 'ConnectingAudio', etc.) are switched off for an extension = ['Music', 'Message', 'RingTones', 'None']",
        "enum": [
          "Music",
          "Message",
          "RingTones",
          "None"
        ]
      },
      "navigation": {
        "$ref": "#/components/schemas/PageNavigationModel"
      },
      "paging": {
        "$ref": "#/components/schemas/EnumeratedPagingModel"
      }
    },
    "name": "DictionaryGreetingInfo"
  },
  {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "Internal identifier of a timezone"
      },
      "uri": {
        "type": "string",
        "format": "uri",
        "description": "Canonical URI of a timezone"
      },
      "name": {
        "type": "string",
        "description": "Short name of a timezone"
      },
      "description": {
        "type": "string",
        "description": "Description of a timezone"
      },
      "bias": {
        "type": "string"
      }
    },
    "name": "GetTimezoneInfoResponse"
  },
  {
    "required": [
      "navigation",
      "paging",
      "records"
    ],
    "type": "object",
    "properties": {
      "uri": {
        "type": "string",
        "format": "uri",
        "description": "Link to the timezone list resource"
      },
      "records": {
        "type": "array",
        "description": "List of timezones",
        "items": {
          "$ref": "#/components/schemas/GetTimezoneInfoResponse"
        }
      },
      "navigation": {
        "$ref": "#/components/schemas/ProvisioningNavigationInfo"
      },
      "paging": {
        "$ref": "#/components/schemas/ProvisioningPagingInfo"
      }
    },
    "name": "GetTimezoneListResponse"
  },
  {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "Internal identifier of a fax cover page. The supported value\nrange is 0-13 (for language setting en-US) and 0, 15-28\n(for all other languages)\n"
      },
      "name": {
        "type": "string",
        "description": "Name of a fax cover page pattern"
      }
    },
    "name": "FaxCoverPageInfo"
  },
  {
    "type": "object",
    "properties": {
      "uri": {
        "type": "string",
        "format": "uri"
      },
      "records": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/FaxCoverPageInfo"
        }
      },
      "navigation": {
        "$ref": "#/components/schemas/PageNavigationModel"
      },
      "paging": {
        "$ref": "#/components/schemas/EnumeratedPagingModel"
      }
    },
    "name": "ListFaxCoverPagesResponse"
  },
  {
    "type": "object",
    "properties": {
      "uri": {
        "type": "string",
        "format": "uri",
        "description": "Canonical URI of the resource"
      },
      "id": {
        "type": "string",
        "description": "Internal identifier of a device"
      },
      "type": {
        "type": "string",
        "description": "Device type",
        "enum": [
          "HardPhone",
          "SoftPhone",
          "OtherPhone",
          "Paging",
          "WebPhone",
          "Room"
        ]
      },
      "sku": {
        "type": "string",
        "description": "Device identification number (stock keeping unit) in the format\nTP-ID [-AT-AC], where TP is device type (HP for RC HardPhone, DV for all\nother devices including softphone); ID - device model ID; AT -addon type\nID; AC - addon count (if any). For example 'HP-56-2-2'\n"
      },
      "status": {
        "type": "string",
        "enum": [
          "Online",
          "Offline"
        ]
      },
      "name": {
        "type": "string",
        "description": "Device name. Mandatory if ordering  SoftPhone or OtherPhone.\nOptional for  HardPhone. If not specified for HardPhone, then device  model  name\nis used as device  name\n"
      },
      "serial": {
        "type": "string",
        "description": "Serial number for HardPhone (is returned only when the phone\nis shipped and provisioned); endpoint_id for Softphone and mobile applications\n"
      },
      "computerName": {
        "type": "string",
        "description": "Computer name for Softphone devices"
      },
      "model": {
        "$ref": "#/components/schemas/DeviceModelInfo"
      },
      "extension": {
        "$ref": "#/components/schemas/DeviceExtensionInfo"
      },
      "emergencyServiceAddress": {
        "$ref": "#/components/schemas/DeviceEmergencyServiceAddressResource"
      },
      "emergency": {
        "$ref": "#/components/schemas/SipRegistrationDeviceEmergencyInfo"
      },
      "shipping": {
        "$ref": "#/components/schemas/ShippingInfo"
      },
      "phoneLines": {
        "type": "array",
        "description": "Phone lines information",
        "items": {
          "$ref": "#/components/schemas/DevicePhoneLinesInfo"
        }
      },
      "boxBillingId": {
        "type": "integer",
        "format": "int64",
        "description": "Box billing identifier of a device. Applicable only for HardPhones.\nIt is an alternative way to identify the device to be ordered. Either\nmodel  structure, or  boxBillingId  must be specified forT?HardPhone\n"
      },
      "useAsCommonPhone": {
        "type": "boolean",
        "description": "Supported only for devices assigned to Limited extensions. If true, enables users to log in to this phone as a common phone."
      },
      "linePooling": {
        "type": "string",
        "description": "Pooling type of a deviceHost - device with standalone paid\nphone line which can be linked to Glip/Softphone instanceGuest - device\nwith a linked phone lineNone - device without a phone line or with specific\nline (free, BLA, etc.) = ['Host', 'Guest', 'None']\n",
        "enum": [
          "Host",
          "Guest",
          "None"
        ]
      },
      "inCompanyNet": {
        "type": "boolean",
        "description": "Network location status. 'True' if the device is located in\nthe configured corporate network (On-Net); 'False' for Off-Net location.\nParameter is not returned if `EmergencyAddressAutoUpdate` feature is not\nenabled for the account/user, or if device network location is not determined\n"
      },
      "site": {
        "$ref": "#/components/schemas/DeviceSiteInfo"
      },
      "lastLocationReportTime": {
        "type": "string",
        "format": "date-time",
        "description": "Timestamp of receiving last location report in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601)\nformat including timezone, for example *2016-03-10T18:07:52.534Z\n"
      }
    },
    "name": "SipRegistrationDeviceInfo"
  },
  {
    "type": "object",
    "properties": {
      "id": {
        "type": "integer",
        "format": "int64",
        "description": "Internal identifier of a phone number"
      },
      "country": {
        "$ref": "#/components/schemas/DevicePhoneNumberCountryInfo"
      },
      "paymentType": {
        "type": "string",
        "description": "Payment type. 'External' is returned for forwarded numbers which are not terminated in the RingCentral phone system = ['External', 'TollFree', 'Local']",
        "enum": [
          "External",
          "TollFree",
          "Local"
        ]
      },
      "phoneNumber": {
        "maxLength": 128,
        "minLength": 0,
        "type": "string",
        "description": "Phone number"
      },
      "usageType": {
        "type": "string",
        "enum": [
          "CompanyNumber",
          "MainCompanyNumber",
          "AdditionalCompanyNumber",
          "DirectNumber",
          "CompanyFaxNumber",
          "ForwardedNumber",
          "ForwardedCompanyNumber",
          "ContactCenterNumber"
        ]
      },
      "type": {
        "type": "string",
        "description": "Type of a phone number",
        "enum": [
          "VoiceFax",
          "FaxOnly",
          "VoiceOnly"
        ]
      }
    },
    "description": "Phone number information",
    "name": "DevicePhoneNumberInfo"
  },
  {
    "type": "object",
    "properties": {
      "username": {
        "type": "string",
        "description": "User credentials"
      },
      "password": {
        "type": "string",
        "format": "password",
        "description": "User password"
      },
      "authorizationId": {
        "type": "string",
        "description": "Identifier for SIP authorization"
      },
      "domain": {
        "type": "string",
        "description": "SIP domain"
      },
      "outboundProxy": {
        "type": "string",
        "description": "SIP outbound proxy server address (in the format <host:port>)"
      },
      "outboundProxyIPv6": {
        "type": "string",
        "description": "SIP outbound IPv6 proxy server address (in the format <host:port>)"
      },
      "outboundProxyBackup": {
        "type": "string",
        "description": "SIP outbound proxy server backup address (in the format <host:port>)"
      },
      "outboundProxyIPv6Backup": {
        "type": "string",
        "description": "SIP outbound IPv6 proxy server backup address (in the format <host:port>)"
      },
      "transport": {
        "type": "string",
        "description": "Preferred transport. SIP info will be returned for this transport if supported",
        "enum": [
          "UDP",
          "TCP",
          "TLS",
          "WS",
          "WSS"
        ]
      },
      "certificate": {
        "type": "string",
        "description": "For TLS transport only, Base64 encoded certificate"
      },
      "switchBackInterval": {
        "type": "integer",
        "format": "int32",
        "description": "The interval in seconds after which the app must try to switch\nback to primary proxy if it was previously switched to backup. If this\nparameter is not returned, the app must stay on backup proxy and try to\nswitch to primary proxy after the next SIP-provision call.\n"
      },
      "stunServers": {
        "type": "array",
        "description": "List of stun servers in the format <host:port>",
        "items": {
          "type": "string"
        }
      }
    },
    "name": "SipInfoResponse"
  },
  {
    "type": "object",
    "properties": {
      "id": {
        "type": "string"
      },
      "name": {
        "type": "string"
      }
    },
    "name": "ShippingMethodInfo"
  },
  {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "Internal identifier of a home country"
      },
      "uri": {
        "type": "string",
        "format": "uri",
        "description": "Canonical URI of a home country"
      },
      "name": {
        "type": "string",
        "description": "Official name of a home country"
      }
    },
    "description": "Brief information on a phone number country",
    "name": "DevicePhoneNumberCountryInfo"
  },
  {
    "type": "object",
    "properties": {
      "required": {
        "type": "boolean",
        "description": "Indicates that emergency address is required"
      },
      "localOnly": {
        "type": "boolean",
        "description": "Indicates that only local emergency address can be specified"
      }
    },
    "name": "DevicePhoneLinesEmergencyAddressInfo"
  },
  {
    "type": "object",
    "description": "Emergency response location settings of a device",
    "properties": {
      "address": {
        "$ref": "#/components/schemas/DeviceEmergencyServiceAddressResource"
      },
      "location": {
        "$ref": "#/components/schemas/SipRegistrationDeviceLocationInfo"
      },
      "outOfCountry": {
        "type": "boolean",
        "description": "Specifies if emergency address is out of country"
      },
      "addressStatus": {
        "type": "string",
        "description": "Emergency address status",
        "enum": [
          "Valid",
          "Invalid",
          "Processing"
        ]
      },
      "visibility": {
        "type": "string",
        "description": "Specifies whether to return only private or only public (company) ERLs (Emergency Response Locations)\n",
        "enum": [
          "Private",
          "Public"
        ]
      },
      "syncStatus": {
        "type": "string",
        "description": "Resulting status of emergency address synchronization. Returned\nif `syncEmergencyAddress` parameter is set to 'True'\n",
        "enum": [
          "Verified",
          "Updated",
          "Deleted",
          "NotRequired",
          "Unsupported",
          "Failed"
        ]
      },
      "addressEditableStatus": {
        "type": "string",
        "description": "Ability to register new emergency address for a phone line\nusing devices sharing this line or only main device (line owner)\n",
        "enum": [
          "MainDevice",
          "AnyDevice"
        ]
      },
      "addressRequired": {
        "type": "boolean",
        "description": "Indicates if emergency address is required for the country of a phone line"
      },
      "addressLocationOnly": {
        "type": "boolean",
        "description": "Indicates if out of country emergency address is not allowed for the country of a phone line"
      }
    },
    "name": "SipRegistrationDeviceEmergencyInfo"
  },
  {
    "required": [
      "device",
      "sipFlags",
      "sipInfo"
    ],
    "type": "object",
    "properties": {
      "device": {
        "$ref": "#/components/schemas/SipRegistrationDeviceInfo"
      },
      "sipInfo": {
        "type": "array",
        "description": "SIP settings for device",
        "items": {
          "$ref": "#/components/schemas/SipInfoResponse"
        }
      },
      "sipInfoPstn": {
        "type": "array",
        "description": "SIP PSTN settings for device",
        "items": {
          "$ref": "#/components/schemas/SipInfoResponse"
        }
      },
      "sipFlags": {
        "$ref": "#/components/schemas/SipFlagsResponse"
      },
      "sipErrorCodes": {
        "type": "array",
        "items": {
          "type": "string"
        }
      },
      "pollingInterval": {
        "type": "integer",
        "format": "int32",
        "description": "Suggested interval in seconds to periodically call SIP-provision API and update the local cache\n"
      }
    },
    "name": "CreateSipRegistrationResponse"
  },
  {
    "type": "object",
    "properties": {
      "transport": {
        "type": "string",
        "description": "Supported transport. SIP info will be returned for this transport if supported",
        "enum": [
          "UDP",
          "TCP",
          "TLS",
          "WS",
          "WSS"
        ]
      }
    },
    "name": "SIPInfoRequest"
  },
  {
    "type": "object",
    "description": "SIP flags information",
    "properties": {
      "voipFeatureEnabled": {
        "type": "boolean",
        "description": "Indicates that VoIP calling feature is enabled"
      },
      "voipCountryBlocked": {
        "type": "boolean",
        "description": "Indicates that the request is sent from IP address of a country where VoIP calling is disallowed\n"
      },
      "outboundCallsEnabled": {
        "type": "boolean",
        "description": "Indicates that outbound calls are enabled"
      },
      "dscpEnabled": {
        "type": "boolean"
      },
      "dscpSignaling": {
        "type": "integer",
        "format": "int32"
      },
      "dscpVoice": {
        "type": "integer",
        "format": "int32"
      },
      "dscpVideo": {
        "type": "integer",
        "format": "int32"
      }
    },
    "name": "SipFlagsResponse"
  },
  {
    "type": "object",
    "description": "Company emergency response location details",
    "properties": {
      "id": {
        "type": "string",
        "description": "Internal identifier of an emergency response location"
      },
      "name": {
        "type": "string",
        "description": "Emergency response location name"
      }
    },
    "name": "SipRegistrationDeviceLocationInfo"
  },
  {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "Internal identifier of a phone line"
      },
      "lineType": {
        "type": "string",
        "description": "Type of phone line",
        "enum": [
          "Standalone",
          "StandaloneFree",
          "BlaPrimary",
          "BlaSecondary"
        ]
      },
      "emergencyAddress": {
        "$ref": "#/components/schemas/DevicePhoneLinesEmergencyAddressInfo"
      },
      "phoneInfo": {
        "$ref": "#/components/schemas/DevicePhoneNumberInfo"
      }
    },
    "name": "DevicePhoneLinesInfo"
  },
  {
    "type": "object",
    "properties": {
      "street": {
        "type": "string"
      },
      "street2": {
        "type": "string"
      },
      "city": {
        "type": "string"
      },
      "zip": {
        "type": "string"
      },
      "customerName": {
        "type": "string"
      },
      "state": {
        "type": "string",
        "description": "State/province name"
      },
      "stateId": {
        "type": "string",
        "description": "Internal identifier of a state"
      },
      "stateIsoCode": {
        "type": "string",
        "description": "ISO code of a state"
      },
      "stateName": {
        "type": "string",
        "description": "Full name of a state"
      },
      "countryId": {
        "type": "string",
        "description": "Internal identifier of a country"
      },
      "countryIsoCode": {
        "type": "string",
        "description": "ISO code of a country"
      },
      "country": {
        "type": "string",
        "description": "Country name"
      },
      "countryName": {
        "type": "string",
        "description": "Full name of a country"
      },
      "outOfCountry": {
        "type": "boolean",
        "description": "Specifies if emergency address is out of country"
      }
    },
    "description": "Address for emergency cases. The same emergency address is assigned to all the numbers of one device",
    "name": "DeviceEmergencyServiceAddressResource"
  },
  {
    "type": "object",
    "properties": {
      "id": {
        "type": "string"
      },
      "name": {
        "type": "string"
      },
      "count": {
        "type": "integer",
        "format": "int32"
      }
    },
    "name": "DeviceAddonInfo"
  },
  {
    "type": "object",
    "properties": {
      "id": {
        "type": "integer",
        "format": "int64",
        "description": "Internal identifier of an extension"
      },
      "uri": {
        "type": "string",
        "format": "uri",
        "description": "Canonical URL of an extension resource"
      },
      "extensionNumber": {
        "type": "string",
        "description": "Short extension number"
      }
    },
    "name": "DeviceExtensionInfo"
  },
  {
    "required": [
      "addons"
    ],
    "type": "object",
    "description": "HardPhone model information",
    "properties": {
      "id": {
        "type": "string",
        "description": "Addon identifier. For HardPhones of certain types, which are compatible with this addon identifier"
      },
      "name": {
        "type": "string",
        "description": "Device name"
      },
      "addons": {
        "type": "array",
        "description": "Addons description",
        "items": {
          "$ref": "#/components/schemas/DeviceAddonInfo"
        }
      },
      "features": {
        "type": "array",
        "description": "Device feature or multiple features supported",
        "items": {
          "type": "string",
          "enum": [
            "BLA",
            "Intercom",
            "Paging",
            "HELD"
          ]
        }
      }
    },
    "name": "DeviceModelInfo"
  },
  {
    "type": "object",
    "properties": {
      "device": {
        "$ref": "#/components/schemas/DeviceInfoRequest"
      },
      "sipInfo": {
        "type": "array",
        "description": "SIP settings for device",
        "items": {
          "$ref": "#/components/schemas/SIPInfoRequest"
        }
      },
      "softPhoneLineReassignment": {
        "type": "string",
        "description": "Supported for Softphone clients only. If 'SoftphoneLineReassignment' feature is enabled\nthe reassignment process can be initialized, however if there is no DL for the given user's device\nthen SPR-131 error code will be returned.\n",
        "default": "None",
        "enum": [
          "None",
          "Initialize",
          "Reassign"
        ]
      }
    },
    "name": "CreateSipRegistrationRequest"
  },
  {
    "type": "object",
    "description": "Device information",
    "properties": {
      "id": {
        "type": "string",
        "description": "Device unique identifier, retrieved at previous session (if any)"
      },
      "appExternalId": {
        "type": "string",
        "description": "Supported for iOS devices only. Certificate name (used by iOS\napplications for APNS subscription)\n"
      },
      "computerName": {
        "type": "string",
        "description": "Computer name (for SoftPhone only)."
      },
      "serial": {
        "type": "string",
        "description": "Endpoint/device instance identifier for Softphone and mobile applications.\n"
      }
    },
    "name": "DeviceInfoRequest"
  },
  {
    "type": "object",
    "properties": {
      "pstn": {
        "$ref": "#/components/schemas/BridgePstnPins"
      },
      "web": {
        "type": "string",
        "description": "Bridge short identifier (Web PIN). The digital unique code which is used to join to a meeting. If it is not specified\nwhile creation, then a code will be generated. If it is a default bridge, then this code is\nPersonal Meeting Identifier (PMI).\n\nNOTE: Changing this PIN via update method is deprecated. So to change Web PIN use the method:\n_*[PATCH] /rcvideo/v2/bridges/{bridgeId}/pin/web*_\n",
        "example": "018209241352"
      },
      "aliases": {
        "type": "array",
        "description": "List of bridge aliases. An alias is a unique personal meeting name that can be specified for the default bridge.\nIt can be used to join to a meeting in the same way as the short identifier.\n",
        "example": [
          "joseph1990",
          "qa_team_2_lead"
        ],
        "items": {
          "type": "string"
        }
      }
    },
    "name": "BridgePinsWithAliases"
  },
  {
    "required": [
      "accountId",
      "extensionId"
    ],
    "type": "object",
    "properties": {
      "accountId": {
        "type": "string",
        "description": "User account identifier",
        "example": "664287016"
      },
      "extensionId": {
        "type": "string",
        "description": "User extension identifier",
        "example": "664307016"
      }
    },
    "name": "User"
  },
  {
    "type": "object",
    "description": "Recordings preferences",
    "properties": {
      "everyoneCanControl": {
        "$ref": "#/components/schemas/EveryoneCanControl"
      }
    },
    "name": "RecordingsPreferences"
  },
  {
    "type": "object",
    "properties": {
      "plainText": {
        "type": "string",
        "description": "Meeting password.\nThis field will be returned only if the request was done by bridge owner, his delegate or any user who has\nthe Super Admin privilege.\n",
        "example": "Wq123ygs15"
      },
      "pstn": {
        "type": "string",
        "description": "Meeting password for PSTN users.\nThis field will be returned only if the request was done by bridge owner, his delegate or any user who has\nthe Super Admin privilege.\n",
        "example": "7492486829"
      },
      "joinQuery": {
        "type": "string",
        "description": "Meeting password hash.\nThis field will be returned only if the request was done by bridge owner, his delegate or any user who has\nthe Super Admin privilege.\n",
        "example": "99e4f8e6a241fc71279449a9c8f46eef"
      }
    },
    "name": "BridgeResponseSecurityPassword"
  },
  {
    "type": "object",
    "properties": {
      "host": {
        "type": "string",
        "description": "Host PSTN PIN. If it is not specified while creation, then a PIN will be generated.",
        "example": "432331057631"
      },
      "participant": {
        "type": "string",
        "description": "Participant PSTN PIN. If it is not specified while creation, then a PIN will be generated.",
        "example": "013409241367"
      }
    },
    "name": "BridgePstnPins"
  },
  {
    "type": "object",
    "properties": {
      "pstn": {
        "$ref": "#/components/schemas/BridgePstnPins"
      },
      "web": {
        "type": "string",
        "description": "Bridge short identifier (Web PIN). The digital unique code which is used to join to a meeting. If it is not specified\nwhile creation, then a code will be generated. If it is a default bridge, then this code is\nPersonal Meeting Identifier (PMI).\n\nNOTE: Changing this PIN via update method is deprecated. So to change Web PIN use the method:\n_*[PATCH] /rcvideo/v2/bridges/{bridgeId}/pin/web*_\n",
        "example": "018209241352"
      }
    },
    "name": "BridgePins"
  },
  {
    "type": "object",
    "properties": {
      "passwordProtected": {
        "type": "boolean",
        "description": "Specifies if a meeting is password protected.\n\nBy default, Instant and Scheduled bridges are not password protected. For default (PMI) bridge, password\nprotection will be turned on and the password will be generated if it is not specified while creation.\n\nWhile creation to set password protection you should set this field to true and specify a password in the\n**password** field. If you want to change password or set password protection for an unprotected bridge,\nyou should set this field to true and specify a password in the **password** field in the update operation.\n\nTo make protected bridge as unprotected you should set this field to false in the update operation.\n",
        "example": true
      },
      "password": {
        "type": "string",
        "description": "Specifies a password if bridge meetings should be password protected (passwordProtected field is true).\nBesides that, if the field is specified in the request but **passwordProtected** field is missing then\nit means that **passwordProtected** field is set to true.\n",
        "example": "Wq123ygs15"
      },
      "noGuests": {
        "type": "boolean",
        "description": "If true, only authenticated users can join to a meeting.",
        "default": false
      },
      "sameAccount": {
        "type": "boolean",
        "description": "If true, only users have the same account can join to a meeting.",
        "default": false
      },
      "e2ee": {
        "type": "boolean",
        "description": "If true, end to end encryption will be enabled for a meeting.",
        "default": false
      }
    },
    "name": "BridgeRequestSecurity"
  },
  {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "Unique bridge identifier",
        "example": "iad41-c04-ndb256065cf14ae6a1832389d9c2e"
      },
      "name": {
        "type": "string",
        "description": "Custom name of a bridge",
        "example": "Weekly Meeting with Joseph"
      },
      "type": {
        "type": "string",
        "description": "Type of a bridge. It specifies bridge life cycle.\n1) Instant - The bridge will be used for a meeting only once immediately after creation. Then it will be deleted.\n2) Scheduled - The bridge will be used for scheduled one or more meetings. If the bridge is not used for a long\ntime after the last meeting, then it will be deleted.\n3) PMI - The bridge will contain Personal Meeting Identifier owned by a user. It is the default user bridge.\nEach user may have only one default (PMI) bridge. Such bridge will be deleted only in case the user is deleted\nfrom the system.\n",
        "example": "Instant",
        "enum": [
          "Instant",
          "Scheduled",
          "PMI"
        ]
      },
      "host": {
        "$ref": "#/components/schemas/User"
      },
      "pins": {
        "$ref": "#/components/schemas/BridgePinsWithAliases"
      },
      "security": {
        "$ref": "#/components/schemas/BridgeResponseSecurity"
      },
      "preferences": {
        "$ref": "#/components/schemas/BridgePreferences"
      },
      "discovery": {
        "$ref": "#/components/schemas/BridgeDiscovery"
      }
    },
    "name": "BridgeResponse"
  },
  {
    "type": "object",
    "properties": {
      "passwordProtected": {
        "type": "boolean",
        "description": "Specifies if a meeting is password protected."
      },
      "password": {
        "$ref": "#/components/schemas/BridgeResponseSecurityPassword"
      },
      "noGuests": {
        "type": "boolean",
        "description": "If true, only authenticated users can join to a meeting.",
        "example": false
      },
      "sameAccount": {
        "type": "boolean",
        "description": "If true, only users have the same account can join to a meeting.",
        "example": false
      },
      "e2ee": {
        "type": "boolean",
        "description": "If true, end to end encryption will be enabled for a meeting.",
        "default": false
      }
    },
    "name": "BridgeResponseSecurity"
  },
  {
    "type": "object",
    "properties": {
      "name": {
        "type": "string",
        "description": "Custom name of a bridge",
        "example": "Weekly Meeting with Joseph"
      },
      "type": {
        "type": "string",
        "description": "Type of a bridge. It specifies bridge life cycle.\n1) Instant - The bridge will be used for a meeting only once immediately after creation. Then it will be deleted.\n2) Scheduled - The bridge will be used for scheduled one or more meetings. If the bridge is not used for a long\ntime after the last meeting, then it will be deleted.\n3) PMI - The bridge will contain Personal Meeting Identifier owned by a user. It is the default user bridge.\nEach user may have only one default (PMI) bridge. Such bridge will be deleted only in case the user is deleted\nfrom the system.\n",
        "default": "Instant",
        "enum": [
          "Instant",
          "Scheduled",
          "PMI"
        ]
      },
      "pins": {
        "$ref": "#/components/schemas/BridgePins"
      },
      "security": {
        "$ref": "#/components/schemas/BridgeRequestSecurity"
      },
      "preferences": {
        "$ref": "#/components/schemas/BridgePreferences"
      }
    },
    "name": "CreateBridgeRequest"
  },
  {
    "type": "object",
    "properties": {
      "web": {
        "type": "string",
        "description": "URI that can be used to join to the meeting.\nIt contains password parameter only if the request was done by bridge owner, his delegate or any user who has\nthe Super Admin privilege.\n",
        "example": "https://v.ringcentral.com/join/018209241352?pw=99e4f8e6a241fc71279449a9c8f46eef"
      }
    },
    "name": "BridgeDiscovery"
  },
  {
    "type": "object",
    "properties": {
      "promptAnnouncement": {
        "type": "boolean",
        "description": "Specifies whether to play 'Announce yourself' prompt",
        "default": true
      },
      "promptParticipants": {
        "type": "boolean",
        "description": "Specifies whether to play 'There are X participants' prompt",
        "default": true
      }
    },
    "name": "BridgeJoinPstnPreferences"
  },
  {
    "type": "object",
    "description": "Controls whether participants can start and pause recording",
    "properties": {
      "enabled": {
        "type": "boolean",
        "description": "Controls whether preference is enabled",
        "example": true
      },
      "locked": {
        "type": "boolean",
        "description": "Describes whether preference is locked on Service Web",
        "example": false
      }
    },
    "name": "EveryoneCanControl"
  },
  {
    "type": "object",
    "properties": {
      "join": {
        "$ref": "#/components/schemas/BridgeJoinPreferences"
      },
      "playTones": {
        "type": "string",
        "description": "Specifies enter and exit tones mode.\n1) On - Enter and exit tones switched on.\n2) Off - Enter and exit tones switched off.\n3) ExitOnly - Only exit tones switched on.\n4) EnterOnly - Only enter tones switched on.\n",
        "default": "Off",
        "enum": [
          "On",
          "Off",
          "ExitOnly",
          "EnterOnly"
        ]
      },
      "musicOnHold": {
        "type": "boolean",
        "description": "Specifies whether to play music on hold when alone",
        "default": true
      },
      "joinBeforeHost": {
        "type": "boolean",
        "description": "Specifies if participants can join to a meeting before host.\nDefault value depends on the bridge type:\n- default bridge (PMI) -> false\n- other types -> true\n",
        "example": true
      },
      "screenSharing": {
        "type": "boolean",
        "description": "Specifies if screen sharing is allowed",
        "default": true
      },
      "recordingsMode": {
        "type": "string",
        "enum": [
          "Auto",
          "ForceAuto",
          "User"
        ],
        "example": "User",
        "description": "Controls whether recordings are enabled automatically or by user decision"
      },
      "transcriptionsMode": {
        "type": "string",
        "enum": [
          "Auto",
          "ForceAuto",
          "User"
        ],
        "example": "User",
        "description": "Controls whether transcriptions are enabled automatically or by user decision"
      },
      "recordings": {
        "$ref": "#/components/schemas/RecordingsPreferences"
      },
      "allowEveryoneTranscribeMeetings": {
        "type": "boolean",
        "default": true,
        "description": "Controls whether participants can start and pause transcription"
      }
    },
    "name": "BridgePreferences"
  },
  {
    "type": "object",
    "properties": {
      "audioMuted": {
        "type": "boolean",
        "description": "Specifies if audio is muted for meeting participants (in the preset after joining)",
        "default": false
      },
      "videoMuted": {
        "type": "boolean",
        "description": "Specifies if video is muted for meeting participants (in the preset after joining)",
        "default": false
      },
      "waitingRoomRequired": {
        "type": "string",
        "description": "Specifies rules for the waiting room before the host starts the meeting.\n1) Nobody - No waiting room. Participants are not waiting for meeting start.\n2) Everybody - All participants are waiting for meeting start.\n3) GuestsOnly - Only unauthenticated participants (guests) are waiting for meeting start.\n4) OtherAccount - Only participants who have other account are waiting for meeting start.\n\nDefault value depends on the bridge type:\n- PMI -> OtherAccount\n- Instant, Scheduled -> Nobody\n",
        "example": "Nobody",
        "enum": [
          "Nobody",
          "Everybody",
          "GuestsOnly",
          "OtherAccount"
        ]
      },
      "pstn": {
        "$ref": "#/components/schemas/BridgeJoinPstnPreferences"
      }
    },
    "name": "BridgeJoinPreferences"
  },
  {
    "type": "object",
    "properties": {
      "name": {
        "type": "string",
        "description": "Custom name of a bridge",
        "example": "Weekly Meeting with Joseph"
      },
      "pins": {
        "$ref": "#/components/schemas/BridgePinsWithoutPstn"
      },
      "security": {
        "$ref": "#/components/schemas/BridgeRequestSecurity"
      },
      "preferences": {
        "$ref": "#/components/schemas/BridgePreferences"
      }
    },
    "name": "UpdateBridgeRequest"
  },
  {
    "type": "object",
    "properties": {
      "web": {
        "type": "string",
        "description": "Bridge short identifier (Web PIN). The digital unique code which is used to join to a meeting. If it is not specified\nwhile creation, then a code will be generated. If it is a default bridge, then this code is\nPersonal Meeting Identifier (PMI).\n\nNOTE: Changing this PIN via update method is deprecated. So to change Web PIN use the method:\n_*[PATCH] /rcvideo/v2/bridges/{bridgeId}/pin/web*_\n",
        "example": "018209241352"
      }
    },
    "name": "BridgePinsWithoutPstn"
  },
  {
    "required": [
      "bridgeId",
      "displayName",
      "hostInfo",
      "id",
      "participants",
      "shortId",
      "startTime",
      "status",
      "type"
    ],
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "call id"
      },
      "bridgeId": {
        "type": "string",
        "description": "bridge id"
      },
      "shortId": {
        "type": "string",
        "description": "short bridge id"
      },
      "startTime": {
        "type": "string",
        "description": "start time ISO 8601",
        "format": "date-time"
      },
      "duration": {
        "type": "integer",
        "description": "duration second",
        "format": "int32",
        "example": 36
      },
      "displayName": {
        "type": "string",
        "description": "meetings name"
      },
      "type": {
        "type": "string",
        "description": "meeting type",
        "enum": [
          "Meeting",
          "Call"
        ]
      },
      "status": {
        "type": "string",
        "description": "meeting status",
        "enum": [
          "InProgress",
          "Done"
        ]
      },
      "hostInfo": {
        "$ref": "#/components/schemas/Host"
      },
      "chatId": {
        "type": "string",
        "description": "chat id"
      },
      "participants": {
        "type": "array",
        "description": "participants list",
        "items": {
          "$ref": "#/components/schemas/Participant"
        }
      },
      "recordings": {
        "type": "array",
        "description": "recording information",
        "items": {
          "$ref": "#/components/schemas/Recording"
        }
      },
      "chatUrl": {
        "type": "string",
        "description": "chat location"
      }
    },
    "description": "Meeting information",
    "name": "Meeting"
  },
  {
    "type": "object",
    "properties": {
      "accountId": {
        "type": "string",
        "description": "account id"
      },
      "extensionId": {
        "type": "string",
        "description": "extension id"
      },
      "displayName": {
        "type": "string",
        "description": "displayName"
      }
    },
    "description": "Meeting host",
    "name": "Host"
  },
  {
    "required": [
      "availabilityStatus"
    ],
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "recording id"
      },
      "startTime": {
        "type": "integer",
        "format": "int64",
        "description": "recording start time"
      },
      "contentUri": {
        "type": "string",
        "description": "recording url"
      },
      "metadata": {
        "$ref": "#/components/schemas/JsValue"
      },
      "status": {
        "type": "string",
        "description": "recording status",
        "enum": [
          "Processing",
          "Processed",
          "Error",
          "Corrupted",
          "InProgress"
        ]
      },
      "availabilityStatus": {
        "type": "string",
        "description": "availability status",
        "enum": [
          "Alive",
          "Deleted",
          "Purged",
          "NotAvailable"
        ]
      }
    },
    "description": "Recording information",
    "name": "Recording"
  },
  {
    "type": "object",
    "properties": {
      "currentPageToken": {
        "type": "string",
        "description": "current offset token"
      },
      "nextPageToken": {
        "type": "string",
        "description": "next page offset token"
      }
    },
    "description": "Paging",
    "name": "Paging"
  },
  {
    "type": "object",
    "properties": {},
    "name": "JsValue"
  },
  {
    "type": "object",
    "properties": {
      "meetings": {
        "type": "array",
        "description": "meetings array",
        "items": {
          "$ref": "#/components/schemas/Meeting"
        }
      },
      "paging": {
        "$ref": "#/components/schemas/Paging"
      }
    },
    "description": "Meetings page",
    "name": "MeetingPage"
  },
  {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "id"
      },
      "accountId": {
        "type": "string",
        "description": "account id"
      },
      "extensionId": {
        "type": "string",
        "description": "extension id"
      },
      "displayName": {
        "type": "string",
        "description": "displayName"
      },
      "callerId": {
        "type": "string",
        "description": "caller id"
      }
    },
    "description": "Participant information",
    "name": "Participant"
  },
  {
    "required": [
      "extensionId"
    ],
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "Delegate id (equal as extension id of delegate)",
        "readOnly": true
      },
      "name": {
        "type": "string",
        "description": "Delegate name",
        "readOnly": true
      },
      "accountId": {
        "type": "string",
        "description": "Delegate account id"
      },
      "extensionId": {
        "type": "string",
        "description": "Delegate extension id"
      }
    },
    "name": "Delegate"
  },
  {
    "type": "object",
    "properties": {
      "items": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Delegate"
        }
      }
    },
    "name": "DelegatorsListResult"
  },
  {
    "type": "object",
    "properties": {
      "detail": {
        "type": "string",
        "description": "Detailed error message"
      },
      "schemas": {
        "type": "array",
        "items": {
          "type": "string",
          "enum": [
            "urn:ietf:params:scim:api:messages:2.0:Error"
          ]
        }
      },
      "scimType": {
        "type": "string",
        "description": "Bad request type when status code is 400",
        "enum": [
          "uniqueness",
          "tooMany",
          "mutability",
          "sensitive",
          "invalidSyntax",
          "invalidFilter",
          "invalidPath",
          "invalidValue",
          "invalidVers",
          "noTarget"
        ]
      },
      "status": {
        "type": "string",
        "description": "Same as HTTP status code, e.g. 400, 401, etc."
      }
    },
    "name": "ScimErrorResponse"
  },
  {
    "required": [
      "name",
      "type",
      "multiValued",
      "required",
      "mutability",
      "returned",
      "uniqueness"
    ],
    "type": "object",
    "properties": {
      "name": {
        "type": "string",
        "description": "The name of the attribute"
      },
      "type": {
        "type": "string",
        "enum": [
          "string",
          "boolean",
          "decimal",
          "integer",
          "dateTime",
          "reference",
          "complex"
        ]
      },
      "subAttributes": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/ScimSchemaAttribute"
        }
      },
      "multiValued": {
        "type": "boolean",
        "description": "A Boolean value indicating the attribute's plurality",
        "default": false
      },
      "description": {
        "type": "string",
        "description": "The description of the attribute"
      },
      "required": {
        "type": "boolean",
        "default": false
      },
      "canonicalValues": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "A collection of suggested canonical values"
      },
      "caseExact": {
        "type": "boolean",
        "default": false
      },
      "mutability": {
        "type": "string",
        "enum": [
          "readOnly",
          "readWrite",
          "immutable",
          "writeOnly"
        ],
        "description": "Indicates the circumstances under which the value of the attribute can be (re)defined"
      },
      "returned": {
        "type": "string",
        "enum": [
          "always",
          "never",
          "default",
          "request"
        ],
        "description": "Indicates when an attribute and associated values are returned"
      },
      "uniqueness": {
        "type": "string",
        "enum": [
          "none",
          "server",
          "global"
        ],
        "description": "Specifies how the service provider enforces uniqueness of attribute values"
      },
      "referenceTypes": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Indicates the SCIM resource types that be referenced"
      }
    },
    "name": "ScimSchemaAttribute"
  },
  {
    "type": "object",
    "properties": {
      "created": {
        "type": "string",
        "format": "date-time"
      },
      "lastModified": {
        "type": "string",
        "format": "date-time"
      },
      "location": {
        "type": "string",
        "description": "Resource location URI"
      },
      "resourceType": {
        "type": "string",
        "enum": [
          "User",
          "Group",
          "ResourceType",
          "Schema"
        ]
      }
    },
    "description": "Resource metadata",
    "name": "ScimMeta"
  },
  {
    "type": "object",
    "properties": {
      "Resources": {
        "type": "array",
        "description": "Resource type list",
        "items": {
          "$ref": "#/components/schemas/ScimSchemaResponse"
        }
      },
      "itemsPerPage": {
        "type": "integer",
        "format": "int64"
      },
      "schemas": {
        "type": "array",
        "items": {
          "type": "string",
          "enum": [
            "urn:ietf:params:scim:api:messages:2.0:ListResponse"
          ]
        }
      },
      "startIndex": {
        "type": "integer",
        "format": "int64"
      },
      "totalResults": {
        "type": "integer",
        "format": "int64"
      }
    },
    "name": "ScimSchemaSearchResponse"
  },
  {
    "required": [
      "id"
    ],
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "The unique URI of the schema"
      },
      "name": {
        "type": "string",
        "description": "The name of the schema"
      },
      "description": {
        "type": "string",
        "description": "The description of the schema"
      },
      "attributes": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/ScimSchemaAttribute"
        }
      },
      "meta": {
        "$ref": "#/components/schemas/ScimMeta"
      }
    },
    "name": "ScimSchemaResponse"
  },
  {
    "type": "object",
    "properties": {
      "department": {
        "type": "string"
      }
    },
    "name": "ScimEnterpriseUser"
  },
  {
    "required": [
      "type"
    ],
    "type": "object",
    "properties": {
      "country": {
        "type": "string"
      },
      "locality": {
        "type": "string"
      },
      "postalCode": {
        "type": "string"
      },
      "region": {
        "type": "string"
      },
      "streetAddress": {
        "type": "string"
      },
      "type": {
        "type": "string",
        "enum": [
          "work"
        ]
      }
    },
    "name": "ScimUserAddress"
  },
  {
    "type": "object",
    "properties": {
      "Resources": {
        "type": "array",
        "description": "User list",
        "items": {
          "$ref": "#/components/schemas/ScimUserResponse"
        }
      },
      "itemsPerPage": {
        "type": "integer",
        "format": "int64"
      },
      "schemas": {
        "type": "array",
        "items": {
          "type": "string",
          "enum": [
            "urn:ietf:params:scim:api:messages:2.0:ListResponse"
          ]
        }
      },
      "startIndex": {
        "type": "integer",
        "format": "int64"
      },
      "totalResults": {
        "type": "integer",
        "format": "int64"
      }
    },
    "name": "ScimUserSearchResponse"
  },
  {
    "required": [
      "type",
      "value"
    ],
    "type": "object",
    "properties": {
      "type": {
        "type": "string",
        "enum": [
          "work"
        ]
      },
      "value": {
        "type": "string"
      }
    },
    "name": "ScimEmail"
  },
  {
    "required": [
      "type",
      "value"
    ],
    "type": "object",
    "properties": {
      "type": {
        "type": "string",
        "enum": [
          "photo"
        ]
      },
      "value": {
        "type": "string"
      }
    },
    "name": "ScimPhoto"
  },
  {
    "required": [
      "emails",
      "name",
      "schemas",
      "userName"
    ],
    "type": "object",
    "properties": {
      "active": {
        "type": "boolean",
        "description": "User status",
        "default": false
      },
      "addresses": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/ScimUserAddress"
        }
      },
      "emails": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/ScimEmail"
        }
      },
      "externalId": {
        "type": "string",
        "description": "External unique resource id defined by provisioning client"
      },
      "id": {
        "type": "string",
        "description": "Unique resource id defined by RingCentral"
      },
      "name": {
        "$ref": "#/components/schemas/ScimName"
      },
      "phoneNumbers": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/ScimPhoneNumber"
        }
      },
      "photos": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/ScimPhoto"
        }
      },
      "schemas": {
        "type": "array",
        "items": {
          "type": "string",
          "enum": [
            "urn:ietf:params:scim:schemas:core:2.0:User"
          ]
        }
      },
      "title": {
        "type": "string",
        "description": "User title"
      },
      "urn:ietf:params:scim:schemas:extension:enterprise:2.0:User": {
        "$ref": "#/components/schemas/ScimEnterpriseUser"
      },
      "userName": {
        "type": "string",
        "description": "MUST be same as work type email address"
      }
    },
    "name": "ScimUser"
  },
  {
    "required": [
      "type",
      "value"
    ],
    "type": "object",
    "properties": {
      "type": {
        "type": "string",
        "enum": [
          "work",
          "mobile",
          "other"
        ]
      },
      "value": {
        "type": "string"
      }
    },
    "name": "ScimPhoneNumber"
  },
  {
    "required": [
      "emails",
      "name",
      "schemas",
      "userName"
    ],
    "type": "object",
    "properties": {
      "active": {
        "type": "boolean",
        "description": "User status",
        "default": false
      },
      "addresses": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/ScimUserAddress"
        }
      },
      "emails": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/ScimEmail"
        }
      },
      "externalId": {
        "type": "string",
        "description": "External unique resource id defined by provisioning client"
      },
      "id": {
        "type": "string",
        "description": "Unique resource id defined by RingCentral"
      },
      "name": {
        "$ref": "#/components/schemas/ScimName"
      },
      "phoneNumbers": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/ScimPhoneNumber"
        }
      },
      "photos": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/ScimPhoto"
        }
      },
      "schemas": {
        "type": "array",
        "items": {
          "type": "string",
          "enum": [
            "urn:ietf:params:scim:schemas:core:2.0:User"
          ]
        }
      },
      "title": {
        "type": "string",
        "description": "User title"
      },
      "urn:ietf:params:scim:schemas:extension:enterprise:2.0:User": {
        "$ref": "#/components/schemas/ScimEnterpriseUser"
      },
      "userName": {
        "type": "string",
        "description": "MUST be same as work type email address"
      },
      "meta": {
        "$ref": "#/components/schemas/ScimMeta"
      }
    },
    "name": "ScimUserResponse"
  },
  {
    "required": [
      "familyName",
      "givenName"
    ],
    "type": "object",
    "properties": {
      "familyName": {
        "type": "string"
      },
      "givenName": {
        "type": "string"
      }
    },
    "name": "ScimName"
  },
  {
    "type": "object",
    "properties": {
      "count": {
        "type": "integer",
        "description": "Page size",
        "format": "int32"
      },
      "filter": {
        "type": "string",
        "description": "Only support 'userName' or 'email' filter expressions for now"
      },
      "schemas": {
        "type": "array",
        "items": {
          "type": "string",
          "enum": [
            "urn:ietf:params:scim:api:messages:2.0:SearchRequest"
          ]
        }
      },
      "startIndex": {
        "type": "integer",
        "description": "Start index (1-based)",
        "format": "int32"
      }
    },
    "name": "ScimSearchRequest"
  },
  {
    "required": [
      "Operations",
      "schemas"
    ],
    "type": "object",
    "properties": {
      "Operations": {
        "type": "array",
        "description": "Patch operations list",
        "items": {
          "$ref": "#/components/schemas/ScimPatchOperation"
        }
      },
      "schemas": {
        "type": "array",
        "items": {
          "type": "string",
          "enum": [
            "urn:ietf:params:scim:api:messages:2.0:PatchOp"
          ]
        }
      }
    },
    "name": "ScimUserPatch"
  },
  {
    "required": [
      "op"
    ],
    "type": "object",
    "properties": {
      "op": {
        "type": "string",
        "enum": [
          "add",
          "replace",
          "remove"
        ]
      },
      "path": {
        "type": "string"
      },
      "value": {
        "type": "string",
        "description": "Corresponding 'value' of that field specified by 'path'"
      }
    },
    "name": "ScimPatchOperation"
  },
  {
    "required": [
      "schema",
      "required"
    ],
    "type": "object",
    "properties": {
      "schema": {
        "type": "string",
        "enum": [
          "urn:ietf:params:scim:schemas:extension:enterprise:2.0:User"
        ]
      },
      "required": {
        "type": "boolean",
        "default": false
      }
    },
    "name": "ScimSchemaExtension"
  },
  {
    "type": "object",
    "properties": {
      "Resources": {
        "type": "array",
        "description": "Resource type list",
        "items": {
          "$ref": "#/components/schemas/ScimResourceTypeResponse"
        }
      },
      "itemsPerPage": {
        "type": "integer",
        "format": "int64"
      },
      "schemas": {
        "type": "array",
        "items": {
          "type": "string",
          "enum": [
            "urn:ietf:params:scim:api:messages:2.0:ListResponse"
          ]
        }
      },
      "startIndex": {
        "type": "integer",
        "format": "int64"
      },
      "totalResults": {
        "type": "integer",
        "format": "int64"
      }
    },
    "name": "ScimResourceTypeSearchResponse"
  },
  {
    "required": [
      "name",
      "endpoint",
      "schema"
    ],
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "Unique resource type id, same value as the \"name\" attribute"
      },
      "name": {
        "type": "string",
        "description": "Resource type name"
      },
      "endpoint": {
        "type": "string",
        "description": "The resource type's HTTP-addressable endpoint"
      },
      "description": {
        "type": "string",
        "description": "Description of the resource type"
      },
      "schema": {
        "type": "string",
        "enum": [
          "urn:ietf:params:scim:schemas:core:2.0:User"
        ]
      },
      "schemaExtensions": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/ScimSchemaExtension"
        }
      },
      "meta": {
        "$ref": "#/components/schemas/ScimMeta"
      }
    },
    "name": "ScimResourceTypeResponse"
  },
  {
    "type": "object",
    "properties": {
      "authenticationSchemes": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/ScimAuthenticationScheme"
        }
      },
      "bulk": {
        "$ref": "#/components/schemas/ScimBulkSupported"
      },
      "changePassword": {
        "$ref": "#/components/schemas/ScimSupported"
      },
      "etag": {
        "$ref": "#/components/schemas/ScimSupported"
      },
      "filter": {
        "$ref": "#/components/schemas/ScimFilterSupported"
      },
      "patch": {
        "$ref": "#/components/schemas/ScimSupported"
      },
      "schemas": {
        "type": "array",
        "items": {
          "type": "string",
          "enum": [
            "urn:ietf:params:scim:schemas:core:2.0:ServiceProviderConfig"
          ]
        }
      },
      "sort": {
        "$ref": "#/components/schemas/ScimSupported"
      },
      "xmlDataFormat": {
        "$ref": "#/components/schemas/ScimSupported"
      }
    },
    "name": "ScimProviderConfig"
  },
  {
    "type": "object",
    "properties": {
      "maxResults": {
        "type": "integer",
        "format": "int32"
      },
      "supported": {
        "type": "boolean",
        "default": false
      }
    },
    "name": "ScimFilterSupported"
  },
  {
    "type": "object",
    "properties": {
      "description": {
        "type": "string"
      },
      "documentationUri": {
        "type": "string"
      },
      "name": {
        "type": "string"
      },
      "specUri": {
        "type": "string"
      },
      "primary": {
        "type": "boolean"
      }
    },
    "name": "ScimAuthenticationScheme"
  },
  {
    "type": "object",
    "properties": {
      "maxOperations": {
        "type": "integer",
        "format": "int32"
      },
      "maxPayloadSize": {
        "type": "integer",
        "format": "int32"
      },
      "supported": {
        "type": "boolean",
        "default": false
      }
    },
    "name": "ScimBulkSupported"
  },
  {
    "type": "object",
    "properties": {
      "supported": {
        "type": "boolean",
        "default": false
      }
    },
    "name": "ScimSupported"
  },
  {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "Internal identifier of an event"
      },
      "creatorId": {
        "type": "string",
        "description": "Internal identifier of a person created an event"
      },
      "title": {
        "type": "string",
        "description": "Event title"
      },
      "startTime": {
        "type": "string",
        "format": "date-time",
        "description": "Datetime of starting an event"
      },
      "endTime": {
        "type": "string",
        "format": "date-time",
        "description": "Datetime of ending an event"
      },
      "allDay": {
        "type": "boolean",
        "description": "Indicates whether an event has some specific time slot or lasts for the whole day(s)",
        "default": false
      },
      "recurrence": {
        "type": "string",
        "description": "Event recurrence settings",
        "enum": [
          "None",
          "Day",
          "Weekday",
          "Week",
          "Month",
          "Year"
        ]
      },
      "endingCondition": {
        "type": "string",
        "description": "Condition of ending"
      },
      "endingAfter": {
        "type": "integer",
        "format": "int32",
        "description": "Count of iterations. For periodic events only"
      },
      "endingOn": {
        "type": "string",
        "description": "Iterations end datetime for periodic events",
        "default": "None",
        "enum": [
          "None",
          "Count",
          "Date"
        ]
      },
      "color": {
        "type": "string",
        "description": "Color of Event title (including its presentation in Calendar)",
        "default": "Black",
        "enum": [
          "Black",
          "Red",
          "Orange",
          "Yellow",
          "Green",
          "Blue",
          "Purple",
          "Magenta"
        ]
      },
      "location": {
        "type": "string",
        "description": "Event location"
      },
      "description": {
        "type": "string",
        "description": "Event details"
      }
    },
    "name": "TMEventInfo"
  },
  {
    "type": "object",
    "properties": {
      "records": {
        "type": "array",
        "description": "List of events created by the current user",
        "items": {
          "$ref": "#/components/schemas/TMEventInfo"
        }
      },
      "navigation": {
        "$ref": "#/components/schemas/TMNavigationInfo"
      }
    },
    "name": "TMEventList"
  },
  {
    "type": "object",
    "properties": {
      "prevPageToken": {
        "type": "string",
        "description": "Previous page token. To get previous page, user should pass one of returned token in next request and, in turn, required page will be returned with new tokens"
      },
      "nextPageToken": {
        "type": "string",
        "description": "Next page token. To get next page, user should pass one of returned token in next request and, in turn, required page will be returned with new tokens"
      }
    },
    "name": "TMNavigationInfo"
  },
  {
    "required": [
      "endTime",
      "startTime",
      "title"
    ],
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "Internal identifier of an event"
      },
      "creatorId": {
        "type": "string",
        "description": "Internal identifier of a person created an event"
      },
      "title": {
        "type": "string",
        "description": "Event title"
      },
      "startTime": {
        "type": "string",
        "format": "date-time",
        "description": "Datetime of starting an event"
      },
      "endTime": {
        "type": "string",
        "format": "date-time",
        "description": "Datetime of ending an event"
      },
      "allDay": {
        "type": "boolean",
        "description": "Indicates whether event has some specific time slot or lasts for whole day(s)",
        "default": false
      },
      "recurrence": {
        "type": "string",
        "description": "Event recurrence settings. For non-periodic events the value is 'None'. Must be greater or equal to event duration: 1- Day/Weekday; 7 - Week; 28 - Month; 365 - Year",
        "enum": [
          "None",
          "Day",
          "Weekday",
          "Week",
          "Month",
          "Year"
        ]
      },
      "endingCondition": {
        "type": "string",
        "description": "Condition of ending"
      },
      "endingAfter": {
        "type": "integer",
        "format": "int32",
        "description": "Count of iterations. For periodic events only. Value range is 1 - 10. Must be specified if 'endingCondition' is 'Count'"
      },
      "endingOn": {
        "type": "string",
        "description": "Iterations end datetime for periodic events.",
        "default": "None",
        "enum": [
          "None",
          "Count",
          "Date"
        ]
      },
      "color": {
        "type": "string",
        "description": "Color of Event title (including its presentation in Calendar)",
        "default": "Black",
        "enum": [
          "Black",
          "Red",
          "Orange",
          "Yellow",
          "Green",
          "Blue",
          "Purple",
          "Magenta"
        ]
      },
      "location": {
        "type": "string",
        "description": "Event location"
      },
      "description": {
        "type": "string",
        "description": "Event details"
      }
    },
    "name": "TMCreateEventRequest"
  },
  {
    "type": "object",
    "properties": {
      "subject": {
        "type": "string",
        "description": "Task name/subject. Max allowed length is 250 characters."
      },
      "assignees": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/TMUpdateTaskRequestAssignees"
        }
      },
      "completenessCondition": {
        "type": "string",
        "enum": [
          "Simple",
          "AllAssignees",
          "Percentage"
        ]
      },
      "startDate": {
        "type": "string",
        "description": "Task start date in UTC time zone.",
        "format": "date-time"
      },
      "dueDate": {
        "type": "string",
        "description": "Task due date/time in UTC time zone.",
        "format": "date-time"
      },
      "color": {
        "type": "string",
        "enum": [
          "Black",
          "Red",
          "Orange",
          "Yellow",
          "Green",
          "Blue",
          "Purple",
          "Magenta"
        ]
      },
      "section": {
        "type": "string",
        "description": "Task section to group / search by. Max allowed length is 100 characters."
      },
      "description": {
        "type": "string",
        "description": "Task details. Max allowed length is 102400 characters (100kB)."
      },
      "recurrence": {
        "$ref": "#/components/schemas/TMUpdateTaskRequestRecurrence"
      },
      "attachments": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/TMAttachmentInfo"
        }
      }
    },
    "name": "TMUpdateTaskRequest"
  },
  {
    "type": "object",
    "properties": {
      "records": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/TMTaskListRecords"
        }
      }
    },
    "name": "TMTaskList"
  },
  {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "Internal identifier of an attachment"
      },
      "type": {
        "type": "string",
        "description": "Type of an attachment",
        "enum": [
          "File",
          "Note",
          "Event",
          "Card"
        ]
      }
    },
    "name": "TMAttachmentInfo"
  },
  {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "Task Id"
      },
      "creationTime": {
        "type": "string",
        "description": "Task creation date/time in UTC time zone.",
        "format": "date-time"
      },
      "lastModifiedTime": {
        "type": "string",
        "description": "Task the last modified time in UTC time zone.",
        "format": "date-time"
      },
      "type": {
        "type": "string",
        "description": "Task type",
        "enum": [
          "Task"
        ]
      },
      "creator": {
        "$ref": "#/components/schemas/TMTaskInfoCreator"
      },
      "chatIds": {
        "type": "array",
        "description": "Chat IDs where the task is posted or shared.",
        "items": {
          "type": "string"
        }
      },
      "status": {
        "type": "string",
        "description": "Task execution status.",
        "enum": [
          "Pending",
          "InProgress",
          "Completed"
        ]
      },
      "subject": {
        "type": "string",
        "description": "Task name/subject."
      },
      "assignees": {
        "type": "array",
        "description": "Task name/subject.",
        "items": {
          "$ref": "#/components/schemas/TMTaskInfoAssignees"
        }
      },
      "completenessCondition": {
        "type": "string",
        "description": "How the task completeness should be determined.",
        "enum": [
          "Simple",
          "AllAssignees",
          "Percentage"
        ]
      },
      "completenessPercentage": {
        "maximum": 100,
        "minimum": 0,
        "type": "integer",
        "format": "int32",
        "description": "Current completeness percentage of the task with the specified percentage completeness condition"
      },
      "startDate": {
        "type": "string",
        "description": "Task start date.",
        "format": "date-time"
      },
      "dueDate": {
        "type": "string",
        "description": "Task due date/time.",
        "format": "date-time"
      },
      "color": {
        "type": "string",
        "description": "Font color of a post with the current task.",
        "enum": [
          "Black",
          "Red",
          "Orange",
          "Yellow",
          "Green",
          "Blue",
          "Purple",
          "Magenta"
        ]
      },
      "section": {
        "type": "string",
        "description": "Task section to group / search by."
      },
      "description": {
        "type": "string",
        "description": "Task details."
      },
      "recurrence": {
        "description": "Task details.",
        "$ref": "#/components/schemas/TMTaskInfoRecurrence"
      },
      "attachments": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/TaskAttachment"
        }
      }
    },
    "name": "TMTaskInfo"
  },
  {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "File ID."
      },
      "type": {
        "type": "string",
        "description": "Possible value: File. Attachment type (currently, only File is possible).",
        "enum": [
          "File"
        ]
      },
      "name": {
        "type": "string",
        "description": "Name of the attached file (incl. extension name)."
      },
      "contentUri": {
        "type": "string",
        "format": "uri",
        "description": "URI"
      }
    },
    "name": "TaskAttachment"
  },
  {
    "type": "object",
    "properties": {
      "status": {
        "type": "string",
        "description": "Completeness status",
        "enum": [
          "Incomplete",
          "Complete"
        ]
      },
      "assignees": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/TMCompleteTaskRequestAssignees"
        }
      },
      "completenessPercentage": {
        "maximum": 100,
        "minimum": 0,
        "type": "integer",
        "format": "int32"
      }
    },
    "name": "TMCompleteTaskRequest"
  },
  {
    "required": [
      "records"
    ],
    "type": "object",
    "properties": {
      "records": {
        "type": "array",
        "description": "List of chats",
        "items": {
          "$ref": "#/components/schemas/TMChatInfo"
        }
      }
    },
    "name": "TMChatListWithoutNavigation"
  },
  {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "Internal identifier of a chat"
      },
      "type": {
        "type": "string",
        "description": "Type of a chat",
        "enum": [
          "Everyone",
          "Team",
          "Group",
          "Direct",
          "Personal"
        ]
      },
      "public": {
        "type": "boolean",
        "description": "For 'Team' chat type only. Team access level."
      },
      "name": {
        "type": "string",
        "description": "For 'Team','Everyone' chats types only. Chat name."
      },
      "description": {
        "type": "string",
        "description": "For 'Team','Everyone' chats types only. Chat description."
      },
      "status": {
        "type": "string",
        "description": "For 'Team' chat type only. Team status.",
        "enum": [
          "Active",
          "Archived"
        ]
      },
      "creationTime": {
        "type": "string",
        "description": "Chat creation datetime in ISO 8601 format",
        "format": "date-time"
      },
      "lastModifiedTime": {
        "type": "string",
        "description": "Chat last change datetime in ISO 8601 format",
        "format": "date-time"
      },
      "members": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/TMChatMemberInfo"
        }
      }
    },
    "name": "TMChatInfo"
  },
  {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "Internal identifier of a user"
      }
    },
    "name": "TMChatMemberInfo"
  },
  {
    "required": [
      "contentUri",
      "id"
    ],
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "Internal identifier of a file"
      },
      "contentUri": {
        "type": "string",
        "format": "uri",
        "description": "Link to binary content"
      },
      "name": {
        "type": "string",
        "description": "Name of a file"
      }
    },
    "name": "TMAddFileRequest"
  },
  {
    "required": [
      "records"
    ],
    "type": "object",
    "properties": {
      "records": {
        "type": "array",
        "description": "List of chats",
        "items": {
          "$ref": "#/components/schemas/TMChatInfo"
        }
      },
      "navigation": {
        "$ref": "#/components/schemas/TMNavigationInfo"
      }
    },
    "name": "TMChatList"
  },
  {
    "required": [
      "assignees",
      "subject"
    ],
    "type": "object",
    "properties": {
      "subject": {
        "type": "string",
        "description": "Task name/subject. Max allowed length is 250 characters."
      },
      "assignees": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/TMCreateTaskRequestAssignees"
        }
      },
      "completenessCondition": {
        "type": "string",
        "default": "Simple",
        "enum": [
          "Simple",
          "AllAssignees",
          "Percentage"
        ]
      },
      "startDate": {
        "type": "string",
        "description": "Task start date in UTC time zone.",
        "format": "date-time"
      },
      "dueDate": {
        "type": "string",
        "description": "Task due date/time in UTC time zone.",
        "format": "date-time"
      },
      "color": {
        "type": "string",
        "default": "Black",
        "enum": [
          "Black",
          "Red",
          "Orange",
          "Yellow",
          "Green",
          "Blue",
          "Purple",
          "Magenta"
        ]
      },
      "section": {
        "type": "string",
        "description": "Task section to group / search by. Max allowed length is 100 characters."
      },
      "description": {
        "type": "string",
        "description": "Task details. Max allowed length is 102400 characters (100kB)."
      },
      "recurrence": {
        "$ref": "#/components/schemas/TMCreateTaskRequestRecurrence"
      },
      "attachments": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/TMAttachmentInfo"
        }
      }
    },
    "name": "TMCreateTaskRequest"
  },
  {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "Internal identifier of an attachment"
      },
      "type": {
        "type": "string",
        "description": "Type of an attachment",
        "default": "Card",
        "enum": [
          "Card",
          "Event",
          "File",
          "Note",
          "Task"
        ]
      },
      "fallback": {
        "type": "string",
        "description": "A string of default text that will be rendered in the case that the client does not support Interactive Messages"
      },
      "intro": {
        "type": "string",
        "description": "A pretext to the message"
      },
      "author": {
        "$ref": "#/components/schemas/TMAttachmentAuthorInfo"
      },
      "title": {
        "type": "string",
        "description": "Message title"
      },
      "text": {
        "type": "string",
        "description": "A large string field (up to 1000 chars) to be displayed as the body of a message (Supports GlipDown)"
      },
      "imageUri": {
        "type": "string",
        "format": "uri",
        "description": "Link to an image displayed at the bottom of a message"
      },
      "thumbnailUri": {
        "type": "string",
        "format": "uri",
        "description": "Link to an image preview displayed to the right of a message (82x82)"
      },
      "fields": {
        "type": "array",
        "description": "Information on navigation",
        "items": {
          "$ref": "#/components/schemas/TMAttachmentFieldsInfo"
        }
      },
      "footnote": {
        "$ref": "#/components/schemas/TMAttachmentFootnoteInfo"
      },
      "creatorId": {
        "type": "string",
        "description": "Internal identifier of a person created an event"
      },
      "startTime": {
        "type": "string",
        "format": "date-time",
        "description": "Datetime of starting an event"
      },
      "endTime": {
        "type": "string",
        "format": "date-time",
        "description": "Datetime of ending an event"
      },
      "allDay": {
        "type": "boolean",
        "description": "Indicates whether an event has some specific time slot or lasts for the whole day(s)",
        "default": false
      },
      "recurrence": {
        "type": "string",
        "description": "Event recurrence settings.",
        "enum": [
          "None",
          "Day",
          "Weekday",
          "Week",
          "Month",
          "Year"
        ]
      },
      "endingCondition": {
        "type": "string",
        "description": "Condition of ending"
      },
      "endingAfter": {
        "type": "integer",
        "format": "int32",
        "description": "Count of iterations. For periodic events only"
      },
      "endingOn": {
        "type": "string",
        "description": "Iterations end datetime for periodic events",
        "default": "None",
        "enum": [
          "None",
          "Count",
          "Date"
        ]
      },
      "color": {
        "type": "string",
        "description": "Color of Event title, including its presentation in Calendar; or the color of the side border of an interactive message of a Card",
        "default": "Black",
        "enum": [
          "Black",
          "Red",
          "Orange",
          "Yellow",
          "Green",
          "Blue",
          "Purple",
          "Magenta"
        ]
      },
      "location": {
        "type": "string",
        "description": "Event location"
      },
      "description": {
        "type": "string",
        "description": "Event details"
      }
    },
    "name": "TMMessageAttachmentInfo"
  },
  {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "Internal identifier of a user"
      },
      "type": {
        "type": "string",
        "description": "Type of mention",
        "enum": [
          "Person",
          "Team",
          "File",
          "Link",
          "Event",
          "Task",
          "Note",
          "Card"
        ]
      },
      "name": {
        "type": "string",
        "description": "Name of a user"
      }
    },
    "name": "TMMentionsInfo"
  },
  {
    "type": "object",
    "properties": {
      "title": {
        "type": "string",
        "description": "Title of an individual field"
      },
      "value": {
        "type": "string",
        "description": "Value of an individual field (supports Markdown)"
      },
      "style": {
        "type": "string",
        "description": "Style of width span applied to a field",
        "default": "Short",
        "enum": [
          "Short",
          "Long"
        ]
      }
    },
    "name": "TMAttachmentFieldsInfo"
  },
  {
    "type": "object",
    "description": "Post data. At least one attribute should be provided (text or attachments)",
    "properties": {
      "text": {
        "type": "string",
        "description": "Text of a post. Maximum length is 10000 symbols. Mentions can be added in .md format `![:Type](id)`"
      },
      "attachments": {
        "type": "array",
        "description": "Identifier(s) of attachments. Maximum number of attachments is 25",
        "items": {
          "$ref": "#/components/schemas/TMAttachmentInfo"
        }
      }
    },
    "name": "TMCreatePostRequest"
  },
  {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "Internal identifier of a post"
      },
      "groupId": {
        "type": "string",
        "description": "Internal identifier of a group a post belongs to"
      },
      "type": {
        "type": "string",
        "description": "Type of a post",
        "enum": [
          "TextMessage",
          "PersonJoined",
          "PersonsAdded"
        ]
      },
      "text": {
        "type": "string",
        "description": "For 'TextMessage' post type only. Text of a message"
      },
      "creatorId": {
        "type": "string",
        "description": "Internal identifier of a user - author of a post"
      },
      "addedPersonIds": {
        "type": "array",
        "description": "For 'PersonsAdded' post type only. Identifiers of persons added to a group",
        "items": {
          "type": "string"
        }
      },
      "creationTime": {
        "type": "string",
        "description": "Post creation datetime in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format",
        "format": "date-time"
      },
      "lastModifiedTime": {
        "type": "string",
        "description": "Post last modification datetime in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format",
        "format": "date-time"
      },
      "attachments": {
        "type": "array",
        "description": "List of posted attachments",
        "items": {
          "$ref": "#/components/schemas/TMMessageAttachmentInfo"
        }
      },
      "mentions": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/TMMentionsInfo"
        }
      },
      "activity": {
        "type": "string",
        "description": "Label of activity type"
      },
      "title": {
        "type": "string",
        "description": "Title of a message. (Can be set for bot's messages only)"
      },
      "iconUri": {
        "type": "string",
        "format": "uri",
        "description": "Link to an image used as an icon for this message"
      },
      "iconEmoji": {
        "type": "string",
        "description": "Emoji used as an icon for this message"
      }
    },
    "name": "TMPostInfo"
  },
  {
    "type": "object",
    "properties": {
      "text": {
        "type": "string",
        "description": "Text of a footer"
      },
      "iconUri": {
        "type": "string",
        "format": "uri",
        "description": "Link to an icon displayed to the left of a footer; sized 32x32px"
      },
      "time": {
        "type": "string",
        "description": "Message creation datetime in ISO 8601 format including timezone",
        "format": "date-time",
        "example": "2016-03-10T18:07:52.534Z"
      }
    },
    "name": "TMAttachmentFootnoteInfo"
  },
  {
    "required": [
      "records"
    ],
    "type": "object",
    "properties": {
      "records": {
        "type": "array",
        "description": "List of posts",
        "items": {
          "$ref": "#/components/schemas/TMPostInfo"
        }
      },
      "navigation": {
        "$ref": "#/components/schemas/TMNavigationInfo"
      }
    },
    "name": "TMPostsList"
  },
  {
    "type": "object",
    "properties": {
      "name": {
        "type": "string",
        "description": "Name of a message author"
      },
      "uri": {
        "type": "string",
        "format": "uri",
        "description": "Link to an author's name"
      },
      "iconUri": {
        "type": "string",
        "format": "uri",
        "description": "Link to an image displayed to the left of an author's name; sized 82x82px"
      }
    },
    "name": "TMAttachmentAuthorInfo"
  },
  {
    "type": "object",
    "properties": {
      "text": {
        "type": "string",
        "description": "Post text."
      }
    },
    "name": "TMUpdatePostRequest"
  },
  {
    "type": "object",
    "properties": {
      "type": {
        "type": "string",
        "enum": [
          "Container"
        ]
      },
      "items": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/AdaptiveCardInfoRequestItem"
        }
      }
    },
    "name": "AdaptiveCardInfoRequest"
  },
  {
    "type": "object",
    "description": "An action that will be invoked when the card is tapped or selected. `Action.ShowCard` is not supported",
    "required": [
      "type"
    ],
    "properties": {
      "type": {
        "type": "string",
        "enum": [
          "Action.Submit",
          "Action.OpenUrl",
          "Action.ToggleVisibility"
        ]
      }
    },
    "name": "AdaptiveCardSelectAction"
  },
  {
    "type": "object",
    "properties": {
      "type": {
        "type": "string",
        "enum": [
          "Action.ShowCard",
          "Action.Submit",
          "Action.OpenUrl",
          "Action.ToggleVisibility"
        ]
      },
      "title": {
        "type": "string"
      },
      "card": {
        "$ref": "#/components/schemas/ActionAdaptiveCardInfo"
      },
      "url": {
        "type": "string",
        "format": "uri"
      }
    },
    "name": "AdaptiveCardAction"
  },
  {
    "type": "object",
    "properties": {
      "type": {
        "type": "string",
        "enum": [
          "AdaptiveCard"
        ]
      },
      "body": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/ActionCardBody"
        }
      }
    },
    "name": "ActionAdaptiveCardInfo"
  },
  {
    "type": "object",
    "properties": {
      "type": {
        "type": "string"
      },
      "width": {
        "type": "string"
      },
      "items": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/AdaptiveCardColumnItemInfo"
        }
      }
    },
    "name": "AdaptiveCardColumnInfo"
  },
  {
    "type": "object",
    "properties": {
      "type": {
        "type": "string",
        "enum": [
          "Input.Text"
        ]
      },
      "id": {
        "type": "string"
      },
      "isMultiline": {
        "type": "boolean",
        "description": "If set to `true`, allows multiple lines of input",
        "default": false
      },
      "placeholder": {
        "type": "string",
        "description": "Description of the input desired. Displayed when no text has been input"
      }
    },
    "name": "ActionCardBody"
  },
  {
    "type": "object",
    "required": [
      "url"
    ],
    "description": "Specifies a background image oa a card. Acceptable formats are PNG, JPEG, and GIF",
    "properties": {
      "type": {
        "type": "string",
        "enum": [
          "BackgroundImage"
        ],
        "description": "Must be `BackgroundImage`"
      },
      "url": {
        "type": "string",
        "format": "uri",
        "description": "The URL/data URL of an image to be used as a background of a card. Acceptable formats are PNG, JPEG, and GIF"
      },
      "fillMode": {
        "description": "Describes how the image should fill the area",
        "type": "string",
        "enum": [
          "cover",
          "repeatHorizontally",
          "repeatVertically",
          "repeat"
        ],
        "pattern": "^([c|C][o|O][v|V][e|E][r|R])|([r|R][e|E][p|P][e|E][a|A][t|T][h|H][o|O][r|R][i|I][z|Z][o|O][n|N][t|T][a|A][l|L][l|L][y|Y])|([r|R][e|E][p|P][e|E][a|A][t|T][v|V][e|E][r|R][t|T][i|I][c|C][a|A][l|L][l|L][y|Y])|([r|R][e|E][p|P][e|E][a|A][t|T])$"
      },
      "horizontalAlignment": {
        "description": "Describes how the image should be aligned if it must be cropped or if using repeat fill mode",
        "type": "string",
        "enum": [
          "left",
          "center",
          "right"
        ],
        "pattern": "^([l|L][e|E][f|F][t|T])|([c|C][e|E][n|N][t|T][e|E][r|R])|([r|R][i|I][g|G][h|H][t|T])$"
      },
      "verticalAlignment": {
        "description": "Describes how the image should be aligned if it must be cropped or if using repeat fill mode",
        "type": "string",
        "enum": [
          "top",
          "center",
          "bottom"
        ],
        "pattern": "^([t|T][o|O][p|P])|([c|C][e|E][n|N][t|T][e|E][r|R])|([b|B][o|O][t|T][t|T][o|O][m|M])$"
      }
    },
    "name": "BackgroundImage"
  },
  {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "Internal identifier of a creator"
      }
    },
    "name": "AdaptiveCardCreator"
  },
  {
    "type": "object",
    "properties": {
      "type": {
        "type": "string"
      },
      "url": {
        "type": "string",
        "format": "uri"
      },
      "size": {
        "type": "string"
      },
      "style": {
        "type": "string"
      },
      "wrap": {
        "type": "boolean"
      },
      "spacing": {
        "type": "string"
      },
      "text": {
        "type": "string"
      },
      "isSubtle": {
        "type": "boolean"
      }
    },
    "name": "AdaptiveCardColumnItemInfo"
  },
  {
    "type": "object",
    "required": [
      "type",
      "version"
    ],
    "properties": {
      "type": {
        "type": "string",
        "description": "Type of attachment. This field is mandatory and filled on server side -\nwill be ignored if set in request body\n",
        "enum": [
          "AdaptiveCard"
        ]
      },
      "version": {
        "type": "string",
        "description": "Version. This field is mandatory and filled on server side -\nwill be ignored if set in request body\n"
      },
      "body": {
        "type": "array",
        "description": "List of adaptive cards with the detailed information",
        "items": {
          "$ref": "#/components/schemas/AdaptiveCardInfoRequest"
        }
      },
      "actions": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/AdaptiveCardAction"
        }
      },
      "selectAction": {
        "$ref": "#/components/schemas/AdaptiveCardSelectAction"
      },
      "fallbackText": {
        "type": "string"
      },
      "backgroundImage": {
        "description": "Specifies the background image of a card",
        "oneOf": [
          {
            "type": "string"
          },
          {
            "$ref": "#/components/schemas/BackgroundImage"
          }
        ]
      },
      "minHeight": {
        "type": "string",
        "description": "Specifies the minimum height of the card in pixels",
        "example": "50px"
      },
      "speak": {
        "type": "string",
        "description": "Specifies what should be spoken for this entire card. This is simple text or SSML fragment"
      },
      "lang": {
        "type": "string",
        "description": "The 2-letter ISO-639-1 language used in the card. Used to localize any date/time functions",
        "enum": [
          "en",
          "fr",
          "es"
        ]
      },
      "verticalContentAlignment": {
        "description": "Defines how the content should be aligned vertically within the container. Only relevant for fixed-height cards, or cards with a `minHeight` specified",
        "type": "string",
        "enum": [
          "top",
          "center",
          "bottom"
        ],
        "pattern": "^([t|T][o|O][p|P])|([c|C][e|E][n|N][t|T][e|E][r|R])|([b|B][o|O][t|T][t|T][o|O][m|M])$"
      }
    },
    "name": "AdaptiveCardRequest"
  },
  {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "Internal identifier of an adaptive card"
      },
      "creationTime": {
        "type": "string",
        "description": "Adaptive Card creation datetime in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format",
        "format": "date-time"
      },
      "lastModifiedTime": {
        "type": "string",
        "description": "Post last modification datetime in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format",
        "format": "date-time"
      },
      "$schema": {
        "type": "string",
        "description": "Schema of an adaptive card"
      },
      "type": {
        "type": "string",
        "enum": [
          "AdaptiveCard"
        ]
      },
      "version": {
        "type": "string",
        "description": "Version of an adaptive card. Filled on server-side"
      },
      "creator": {
        "$ref": "#/components/schemas/AdaptiveCardCreator"
      },
      "chatIds": {
        "type": "array",
        "description": "Chat IDs where an adaptive card is posted or shared.",
        "items": {
          "type": "string"
        }
      }
    },
    "name": "AdaptiveCardShortInfo"
  },
  {
    "type": "object",
    "properties": {
      "type": {
        "type": "string",
        "enum": [
          "TextBlock",
          "ColumnSet",
          "Column",
          "FactSet"
        ]
      },
      "text": {
        "type": "string"
      },
      "weight": {
        "type": "string"
      },
      "size": {
        "type": "string"
      },
      "columns": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/AdaptiveCardColumnInfo"
        }
      }
    },
    "name": "AdaptiveCardInfoRequestItem"
  },
  {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "Internal identifier of a user who created a note/task"
      }
    },
    "description": "Note creator information",
    "name": "TMCreatorInfo"
  },
  {
    "type": "object",
    "properties": {
      "records": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/TMNoteInfo"
        }
      },
      "navigation": {
        "$ref": "#/components/schemas/TMNavigationInfo"
      }
    },
    "name": "TMNoteList"
  },
  {
    "required": [
      "title"
    ],
    "type": "object",
    "properties": {
      "title": {
        "type": "string",
        "description": "Title of a note. Max allowed length is 250 characters"
      },
      "body": {
        "type": "string",
        "description": "Contents of a note; HTML markup text. Max allowed length is 1048576 characters (1 Mb)."
      }
    },
    "name": "TMCreateNoteRequest"
  },
  {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "Internal identifier of a note"
      },
      "title": {
        "type": "string",
        "description": "Title of a note"
      },
      "chatIds": {
        "type": "array",
        "description": "Internal identifiers of the chat(s) where the note is posted or shared.",
        "items": {
          "type": "string"
        }
      },
      "preview": {
        "type": "string",
        "description": "Preview of a note (first 150 characters of a body)"
      },
      "creator": {
        "$ref": "#/components/schemas/TMCreatorInfo"
      },
      "lastModifiedBy": {
        "$ref": "#/components/schemas/LastModifiedByInfo"
      },
      "lockedBy": {
        "$ref": "#/components/schemas/LockedByInfo"
      },
      "status": {
        "type": "string",
        "description": "Note publishing status. Any note is created in 'Draft' status. After it is posted it becomes 'Active'",
        "enum": [
          "Active",
          "Draft"
        ]
      },
      "creationTime": {
        "type": "string",
        "format": "date-time",
        "description": "Creation time"
      },
      "lastModifiedTime": {
        "type": "string",
        "format": "date-time",
        "description": "Datetime of the note last update"
      },
      "type": {
        "type": "string",
        "enum": [
          "Note"
        ]
      }
    },
    "name": "TMNoteInfo"
  },
  {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "Internal identifier of the user editing the note"
      }
    },
    "description": "Returned for the note being edited (locked) at the current moment. Information on the user editing the note",
    "name": "LockedByInfo"
  },
  {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "Internal identifier of the user who last updated the note"
      }
    },
    "description": "Note last modification information",
    "name": "LastModifiedByInfo"
  },
  {
    "type": "object",
    "properties": {
      "records": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/TMWebhookInfo"
        }
      }
    },
    "name": "TMWebhookList"
  },
  {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "Internal identifier of a webhook"
      },
      "creatorId": {
        "type": "string",
        "description": "Internal identifier of the user who created a webhook"
      },
      "groupIds": {
        "type": "array",
        "description": "Internal identifiers of groups where a webhook has been created",
        "items": {
          "type": "string"
        }
      },
      "creationTime": {
        "type": "string",
        "description": "Webhook creation time in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format",
        "format": "date-time"
      },
      "lastModifiedTime": {
        "type": "string",
        "description": "Webhook last update time in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format",
        "format": "date-time"
      },
      "uri": {
        "type": "string",
        "format": "uri",
        "description": "Public link to send a webhook payload"
      },
      "status": {
        "type": "string",
        "description": "Current status of a webhook",
        "enum": [
          "Active",
          "Suspended",
          "Deleted"
        ]
      }
    },
    "name": "TMWebhookInfo"
  },
  {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "Internal identifier of an adaptive card"
      },
      "creationTime": {
        "type": "string",
        "description": "Adaptive Card creation datetime in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format",
        "format": "date-time"
      },
      "lastModifiedTime": {
        "type": "string",
        "description": "Post last modification datetime in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format",
        "format": "date-time"
      },
      "$schema": {
        "type": "string",
        "format": "uri",
        "description": "Schema of an adaptive card"
      },
      "type": {
        "type": "string",
        "enum": [
          "AdaptiveCard"
        ]
      },
      "version": {
        "type": "string",
        "description": "Version of an adaptive card"
      },
      "creator": {
        "$ref": "#/components/schemas/AdaptiveCardCreator"
      },
      "chatIds": {
        "type": "array",
        "description": "Chat IDs where an adaptive card is posted or shared.",
        "items": {
          "type": "string"
        }
      },
      "body": {
        "type": "array",
        "description": "List of card elements to show in the primary card region",
        "items": {
          "$ref": "#/components/schemas/AdaptiveCardInfoRequest"
        }
      },
      "actions": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/AdaptiveCardAction"
        }
      },
      "selectAction": {
        "$ref": "#/components/schemas/AdaptiveCardSelectAction"
      },
      "fallbackText": {
        "type": "string",
        "description": "Text shown when the client doesn't support the version specified (may contain markdown)"
      },
      "backgroundImage": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/BackgroundImage"
          },
          {
            "type": "string"
          }
        ],
        "description": "Specifies the background image of a card"
      },
      "minHeight": {
        "type": "string",
        "description": "Specifies the minimum height of the card in pixels",
        "example": "50px"
      },
      "speak": {
        "type": "string",
        "description": "Specifies what should be spoken for this entire card. This is simple text or SSML fragment"
      },
      "lang": {
        "type": "string",
        "description": "The 2-letter ISO-639-1 language used in the card. Used to localize any date/time functions",
        "enum": [
          "en",
          "fr",
          "es"
        ]
      },
      "verticalContentAlignment": {
        "description": "Defines how the content should be aligned vertically within the container. Only relevant for fixed-height cards, or cards with a `minHeight` specified",
        "type": "string",
        "enum": [
          "top",
          "center",
          "bottom"
        ],
        "pattern": "^([t|T][o|O][p|P])|([c|C][e|E][n|N][t|T][e|E][r|R])|([b|B][o|O][t|T][t|T][o|O][m|M])$"
      }
    },
    "name": "AdaptiveCardInfo"
  },
  {
    "required": [
      "creationTime",
      "id",
      "lastModifiedTime"
    ],
    "type": "object",
    "properties": {
      "id": {
        "description": "Internal identifier of a company (RingCentral account ID)",
        "type": "string"
      },
      "name": {
        "type": "string",
        "description": "Name of a company"
      },
      "domain": {
        "type": "string",
        "description": "Domain name of a company"
      },
      "creationTime": {
        "type": "string",
        "description": "Datetime of creation in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601)",
        "format": "date-time"
      },
      "lastModifiedTime": {
        "type": "string",
        "description": "Datetime of last modification in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601)",
        "format": "date-time"
      }
    },
    "name": "TMCompanyInfo"
  },
  {
    "required": [
      "id"
    ],
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "Internal identifier of a user"
      },
      "firstName": {
        "type": "string",
        "description": "First name of a user"
      },
      "lastName": {
        "type": "string",
        "description": "Last name of a user"
      },
      "email": {
        "type": "string",
        "format": "email",
        "description": "Email of a user"
      },
      "avatar": {
        "type": "string",
        "description": "Photo of a user"
      },
      "companyId": {
        "type": "string",
        "description": "Internal identifier of a company"
      },
      "creationTime": {
        "type": "string",
        "description": "Time of creation in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format",
        "format": "date-time"
      },
      "lastModifiedTime": {
        "type": "string",
        "description": "Time of the last modification in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format",
        "format": "date-time"
      }
    },
    "name": "TMPersonInfo"
  },
  {
    "required": [
      "records"
    ],
    "type": "object",
    "properties": {
      "records": {
        "type": "array",
        "description": "List of conversations",
        "items": {
          "$ref": "#/components/schemas/TMConversationInfo"
        }
      },
      "navigation": {
        "$ref": "#/components/schemas/TMNavigationInfo"
      }
    },
    "name": "TMConversationList"
  },
  {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "Internal identifier of a conversation"
      },
      "type": {
        "type": "string",
        "description": "Type of a conversation",
        "enum": [
          "Direct",
          "Personal",
          "Group"
        ]
      },
      "creationTime": {
        "type": "string",
        "description": "Conversation creation datetime in ISO 8601 format",
        "format": "date-time"
      },
      "lastModifiedTime": {
        "type": "string",
        "description": "Conversation last change datetime in ISO 8601 format",
        "format": "date-time"
      },
      "members": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/TMChatMemberInfo"
        }
      }
    },
    "name": "TMConversationInfo"
  },
  {
    "required": [
      "members"
    ],
    "type": "object",
    "properties": {
      "members": {
        "type": "array",
        "description": "Identifier(s) of chat member(s). The maximum supported number of IDs is 15. User's own ID is optional. If `members` section is omitted then 'Personal' chat will be returned  ",
        "items": {
          "$ref": "#/components/schemas/CreateConversationRequestMembers"
        }
      }
    },
    "name": "CreateConversationRequest"
  },
  {
    "type": "object",
    "properties": {
      "firstPage": {
        "$ref": "#/components/schemas/GlipDataExportNavigationInfoUri"
      },
      "nextPage": {
        "$ref": "#/components/schemas/GlipDataExportNavigationInfoUri"
      },
      "previousPage": {
        "$ref": "#/components/schemas/GlipDataExportNavigationInfoUri"
      },
      "lastPage": {
        "$ref": "#/components/schemas/GlipDataExportNavigationInfoUri"
      }
    },
    "name": "GlipDataExportNavigationInfo"
  },
  {
    "type": "object",
    "properties": {
      "timeFrom": {
        "type": "string",
        "format": "date-time",
        "description": "Starting time for data collection"
      },
      "timeTo": {
        "type": "string",
        "format": "date-time",
        "description": "Ending time for data collection"
      },
      "contacts": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/DataExportTaskContactInfo"
        }
      },
      "chatIds": {
        "type": "array",
        "description": "List of chats from which the data (posts, files, tasks, events, notes, etc.) will be collected",
        "items": {
          "type": "string"
        }
      }
    },
    "description": "Information specified in request",
    "name": "SpecificInfo"
  },
  {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "Internal identifier of a dataset"
      },
      "uri": {
        "type": "string",
        "format": "uri",
        "description": "Link for downloading a dataset"
      },
      "size": {
        "type": "integer",
        "format": "int64",
        "description": "Size of ta dataset in bytes"
      }
    },
    "name": "ExportTaskResultInfo"
  },
  {
    "type": "object",
    "properties": {
      "page": {
        "type": "integer",
        "format": "int32",
        "description": "The current page number. 1-indexed, so the first page is 1 by default. May be omitted if result is empty (because non-existent page was specified or perPage=0 was requested)"
      },
      "perPage": {
        "type": "integer",
        "format": "int32",
        "description": "Current page size, describes how many items are in each page. Default value is 100. Maximum value is 1000. If perPage value in the request is greater than 1000, the maximum value (1000) is applied"
      },
      "pageStart": {
        "type": "integer",
        "format": "int32",
        "description": "The zero-based number of the first element on the current page. Omitted if the page is omitted or result is empty"
      },
      "pageEnd": {
        "type": "integer",
        "format": "int32",
        "description": "The zero-based index of the last element on the current page. Omitted if the page is omitted or result is empty"
      },
      "totalPages": {
        "type": "integer",
        "format": "int32",
        "description": "The total number of pages in a dataset. May be omitted for some resources due to performance reasons"
      },
      "totalElements": {
        "type": "integer",
        "format": "int32",
        "description": "The total number of elements in a dataset. May be omitted for some resource due to performance reasons"
      }
    },
    "name": "GlipDataExportPagingInfo"
  },
  {
    "type": "object",
    "properties": {
      "tasks": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/DataExportTask"
        }
      },
      "navigation": {
        "$ref": "#/components/schemas/GlipDataExportNavigationInfo"
      },
      "paging": {
        "$ref": "#/components/schemas/GlipDataExportPagingInfo"
      }
    },
    "name": "DataExportTaskList"
  },
  {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "Internal identifier of a user"
      },
      "firstName": {
        "type": "string",
        "description": "First name of a user"
      },
      "lastName": {
        "type": "string",
        "description": "Last name of a user"
      }
    },
    "description": "Task creator information",
    "name": "CreatorInfo"
  },
  {
    "type": "object",
    "properties": {
      "uri": {
        "type": "string",
        "format": "uri",
        "description": "Canonical URI for the corresponding page of the list"
      }
    },
    "name": "GlipDataExportNavigationInfoUri"
  },
  {
    "type": "object",
    "properties": {
      "uri": {
        "type": "string",
        "description": "Canonical URI of a task"
      },
      "id": {
        "type": "string",
        "description": "Internal identifier of a task"
      },
      "creationTime": {
        "type": "string",
        "format": "date-time",
        "description": "Task creation timestamp"
      },
      "lastModifiedTime": {
        "type": "string",
        "format": "date-time",
        "description": "Task last modification timestamp"
      },
      "status": {
        "type": "string",
        "description": "Task status",
        "enum": [
          "Accepted",
          "InProgress",
          "Completed",
          "Failed",
          "Expired"
        ]
      },
      "creator": {
        "$ref": "#/components/schemas/CreatorInfo"
      },
      "specific": {
        "$ref": "#/components/schemas/SpecificInfo"
      },
      "datasets": {
        "type": "array",
        "description": "Data collection archives. Returned by task ID",
        "items": {
          "$ref": "#/components/schemas/ExportTaskResultInfo"
        }
      }
    },
    "name": "DataExportTask"
  },
  {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "Internal identifier of a contact"
      },
      "email": {
        "type": "string",
        "format": "email",
        "description": "Email address of a contact"
      }
    },
    "description": "List of users whose data is collected. The following data will be exported: posts, tasks, events, etc. posted by the user(s); posts addressing the user(s) via direct and @Mentions; tasks assigned to the listed user(s). The list of 10 users per request is supported.",
    "name": "DataExportTaskContactInfo"
  },
  {
    "type": "object",
    "properties": {
      "timeFrom": {
        "type": "string",
        "format": "date-time",
        "description": "Starting time for data collection. The default value is `timeTo` minus 24 hours. Max allowed time frame between `timeFrom` and `timeTo` is 6 months"
      },
      "timeTo": {
        "type": "string",
        "format": "date-time",
        "description": "Ending time for data collection. The default value is current time. Max allowed time frame between `timeFrom` and `timeTo` is 6 months"
      },
      "contacts": {
        "type": "array",
        "description": "List of contacts which data is collected. The following data will be exported: posts, tasks, events, etc. posted by the user(s); posts addressing the user(s) via direct and @Mentions; tasks assigned to the listed user(s). The list of 30 users per request is supported.",
        "items": {
          "$ref": "#/components/schemas/DataExportTaskContactInfo"
        }
      },
      "chatIds": {
        "type": "array",
        "description": "List of chats from which the data (posts, files, tasks, events, notes, etc.) will be collected. Maximum number of chats supported is 10",
        "items": {
          "type": "string"
        }
      }
    },
    "name": "CreateDataExportTaskRequest"
  },
  {
    "type": "object",
    "properties": {
      "name": {
        "type": "string",
        "description": "Everyone chat name. Maximum number of characters supported is 250"
      },
      "description": {
        "type": "string",
        "description": "Everyone chat description. Maximum number of characters supported is 1000"
      }
    },
    "name": "UpdateEveryoneTeamRequest"
  },
  {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "Internal identifier of a chat"
      },
      "type": {
        "type": "string",
        "description": "Type of a chat",
        "enum": [
          "Everyone"
        ]
      },
      "name": {
        "type": "string",
        "description": "Chat name"
      },
      "description": {
        "type": "string",
        "description": "Chat description"
      },
      "creationTime": {
        "type": "string",
        "description": "Chat creation datetime in ISO 8601 format",
        "format": "date-time"
      },
      "lastModifiedTime": {
        "type": "string",
        "description": "Chat last change datetime in ISO 8601 format",
        "format": "date-time"
      }
    },
    "name": "EveryoneTeamInfo"
  },
  {
    "required": [
      "name"
    ],
    "type": "object",
    "properties": {
      "public": {
        "type": "boolean",
        "description": "Team access level."
      },
      "name": {
        "type": "string",
        "description": "Team name."
      },
      "description": {
        "type": "string",
        "description": "Team description."
      },
      "members": {
        "type": "array",
        "description": "Identifier(s) of team members.",
        "items": {
          "$ref": "#/components/schemas/TMCreateTeamRequestMembers"
        }
      }
    },
    "name": "TMCreateTeamRequest"
  },
  {
    "required": [
      "records"
    ],
    "type": "object",
    "properties": {
      "records": {
        "type": "array",
        "description": "List of teams",
        "items": {
          "$ref": "#/components/schemas/TMTeamInfo"
        }
      },
      "navigation": {
        "$ref": "#/components/schemas/TMNavigationInfo"
      }
    },
    "name": "TMTeamList"
  },
  {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "Internal identifier of a team"
      },
      "type": {
        "type": "string",
        "description": "Type of a chat",
        "enum": [
          "Team"
        ]
      },
      "public": {
        "type": "boolean",
        "description": "Team access level"
      },
      "name": {
        "type": "string",
        "description": "Team name"
      },
      "description": {
        "type": "string",
        "description": "Team description"
      },
      "status": {
        "type": "string",
        "description": "Team status",
        "enum": [
          "Active",
          "Archived"
        ]
      },
      "creationTime": {
        "type": "string",
        "description": "Team creation datetime in ISO 8601 format",
        "format": "date-time"
      },
      "lastModifiedTime": {
        "type": "string",
        "description": "Team last change datetime in ISO 8601 format",
        "format": "date-time"
      }
    },
    "name": "TMTeamInfo"
  },
  {
    "type": "object",
    "properties": {
      "public": {
        "type": "boolean",
        "description": "Team access level"
      },
      "name": {
        "type": "string",
        "description": "Team name. Maximum number of characters supported is 250"
      },
      "description": {
        "type": "string",
        "description": "Team description. Maximum number of characters supported is 1000"
      }
    },
    "name": "TMUpdateTeamRequest"
  },
  {
    "required": [
      "members"
    ],
    "type": "object",
    "properties": {
      "members": {
        "type": "array",
        "description": "Identifier(s) of chat members.",
        "items": {
          "$ref": "#/components/schemas/TMRemoveTeamMembersRequestMembers"
        }
      }
    },
    "name": "TMRemoveTeamMembersRequest"
  },
  {
    "required": [
      "members"
    ],
    "type": "object",
    "properties": {
      "members": {
        "type": "array",
        "description": "Identifier(s) of chat member(s)",
        "items": {
          "description": "Conversation is opened",
          "$ref": "#/components/schemas/TMAddTeamMembersRequestMembers"
        }
      }
    },
    "name": "TMAddTeamMembersRequest"
  },
  {
    "name": "TMNoteWithBodyInfo",
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "Internal identifier of a note"
      },
      "title": {
        "type": "string",
        "description": "Title of a note"
      },
      "chatIds": {
        "type": "array",
        "description": "Internal identifiers of the chat(s) where the note is posted or shared.",
        "items": {
          "type": "string"
        }
      },
      "preview": {
        "type": "string",
        "description": "Preview of a note (first 150 characters of a body)"
      },
      "creator": {
        "$ref": "#/components/schemas/TMCreatorInfo"
      },
      "lastModifiedBy": {
        "$ref": "#/components/schemas/LastModifiedByInfo"
      },
      "lockedBy": {
        "$ref": "#/components/schemas/LockedByInfo"
      },
      "status": {
        "type": "string",
        "description": "Note publishing status. Any note is created in 'Draft' status. After it is posted it becomes 'Active'",
        "enum": [
          "Active",
          "Draft"
        ]
      },
      "creationTime": {
        "type": "string",
        "format": "date-time",
        "description": "Creation time"
      },
      "lastModifiedTime": {
        "type": "string",
        "format": "date-time",
        "description": "Datetime of the note last update"
      },
      "type": {
        "type": "string",
        "enum": [
          "Note"
        ]
      },
      "body": {
        "type": "string",
        "description": "Text of a note"
      }
    }
  },
  {
    "required": [
      "valueType",
      "values"
    ],
    "type": "object",
    "properties": {
      "valueType": {
        "type": "string",
        "description": "Unit of the result value",
        "enum": [
          "Percent",
          "Seconds",
          "Instances"
        ]
      },
      "values": {
        "type": "number",
        "description": "Value for queue opportunities",
        "format": "double"
      }
    },
    "description": "Queue opportunities data for the specified grouping",
    "name": "QueueOpportunities"
  },
  {
    "required": [
      "valueType",
      "values"
    ],
    "type": "object",
    "properties": {
      "valueType": {
        "type": "string",
        "description": "Unit of the result value",
        "enum": [
          "Percent",
          "Seconds",
          "Instances"
        ]
      },
      "values": {
        "$ref": "#/components/schemas/CallsByDirectionBreakdown"
      }
    },
    "description": "Data for calls with breakdown by direction (Inbound, Outbound)",
    "name": "CallsByDirection"
  },
  {
    "required": [
      "groupBy"
    ],
    "type": "object",
    "properties": {
      "groupBy": {
        "type": "string",
        "description": "The selected grouping option",
        "enum": [
          "Company",
          "CompanyNumbers",
          "Users",
          "Queues",
          "IVRs",
          "SharedLines",
          "UserGroups",
          "Sites",
          "Departments"
        ]
      },
      "keys": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "This field can be used to specify unique identifiers of entities selected in `groupBy` field. The response data will be limited to these entities only"
      }
    },
    "description": "This grouping allows to specify the `groupBy` option by which the data in the response will be grouped",
    "name": "DirectGrouping"
  },
  {
    "required": [
      "internal",
      "external"
    ],
    "type": "object",
    "properties": {
      "internal": {
        "type": "number",
        "description": "Value for Internal origin",
        "format": "double"
      },
      "external": {
        "type": "number",
        "description": "Value for External origin",
        "format": "double"
      }
    },
    "description": "Result breakdown by origin",
    "name": "CallsByOriginBreakdown"
  },
  {
    "type": "object",
    "properties": {
      "errors": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/ErrorBody"
        },
        "description": "List of errors"
      }
    },
    "name": "Unauthorized"
  },
  {
    "type": "object",
    "properties": {
      "includeDays": {
        "type": "array",
        "items": {
          "type": "string",
          "enum": [
            "Sunday",
            "Monday",
            "Tuesday",
            "Wednesday",
            "Thursday",
            "Friday",
            "Saturday"
          ]
        },
        "description": "Days of the week for which the report is calculated"
      },
      "includeHours": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/HoursInterval"
        },
        "description": "Hours of the day for which the report is calculated"
      }
    },
    "description": "Allows more granular control over time included in the report",
    "name": "AdvancedTimeSettings"
  },
  {
    "required": [
      "valueType",
      "values"
    ],
    "type": "object",
    "properties": {
      "valueType": {
        "type": "string",
        "description": "Unit of the result value",
        "enum": [
          "Percent",
          "Seconds",
          "Instances"
        ]
      },
      "values": {
        "$ref": "#/components/schemas/CallsByActionsBreakdown"
      }
    },
    "description": "Data for calls with breakdown by action (HoldOff, HoldOn, ParkOn, ParkOff, BlindTransfer, WarmTransfer, DTMFTransfer)",
    "name": "CallsByActions"
  },
  {
    "required": [
      "valueType",
      "values"
    ],
    "type": "object",
    "properties": {
      "valueType": {
        "type": "string",
        "description": "Unit of the result value",
        "enum": [
          "Percent",
          "Seconds",
          "Instances"
        ]
      },
      "values": {
        "$ref": "#/components/schemas/CallsByResultBreakdown"
      }
    },
    "description": "Data for calls with breakdown by result (Completed, Abandoned, Voicemail, Unknown, Missed, Accepted)",
    "name": "CallsByResult"
  },
  {
    "required": [
      "valueType",
      "values"
    ],
    "type": "object",
    "properties": {
      "valueType": {
        "type": "string",
        "description": "Unit of the result value",
        "enum": [
          "Percent",
          "Seconds",
          "Instances"
        ]
      },
      "values": {
        "$ref": "#/components/schemas/CallsByResponseBreakdown"
      }
    },
    "description": "Data for calls with breakdown by response (Answered, NotAnswered, Connected, NotConnected)",
    "name": "CallsByResponse"
  },
  {
    "type": "object",
    "properties": {
      "allCalls": {
        "$ref": "#/components/schemas/AllCalls"
      },
      "callsByDirection": {
        "$ref": "#/components/schemas/CallsByDirection"
      },
      "callsByOrigin": {
        "$ref": "#/components/schemas/CallsByOrigin"
      },
      "callsByResponse": {
        "$ref": "#/components/schemas/CallsByResponse"
      },
      "callsSegments": {
        "$ref": "#/components/schemas/CallsBySegments"
      },
      "callsByResult": {
        "$ref": "#/components/schemas/CallsByResult"
      },
      "callsActions": {
        "$ref": "#/components/schemas/CallsByActions"
      },
      "callsByCompanyHours": {
        "$ref": "#/components/schemas/CallsByCompanyHours"
      },
      "callsByQueueSla": {
        "$ref": "#/components/schemas/CallsByQueueSla"
      },
      "callsByType": {
        "$ref": "#/components/schemas/CallsByType"
      },
      "queueOpportunities": {
        "$ref": "#/components/schemas/QueueOpportunities"
      }
    },
    "description": "Call volume data for the specified grouping",
    "name": "CallsCounters"
  },
  {
    "required": [
      "timeZone",
      "timeRange"
    ],
    "type": "object",
    "properties": {
      "timeZone": {
        "type": "string",
        "description": "Name of the timezone that will be used for `includeDays` and `includeHours` filters and aggregation intervals. For example 'America/Los_Angeles', 'Europe/Zurich'. See also *[Time Zones](https://www.iana.org/time-zones)*. Value in this field doesn't affect interpretation of time in `timeRange`, as it already includes offset from UTC"
      },
      "timeRange": {
        "$ref": "#/components/schemas/TimeRange"
      },
      "advancedTimeSettings": {
        "$ref": "#/components/schemas/AdvancedTimeSettings"
      }
    },
    "description": "Date-time range for the calls. The call is considered to be within time range if it started within time range. Both borders are inclusive",
    "name": "TimeSettings"
  },
  {
    "required": [
      "valueType",
      "values"
    ],
    "type": "object",
    "properties": {
      "valueType": {
        "type": "string",
        "description": "Unit of the result value",
        "enum": [
          "Percent",
          "Seconds",
          "Instances"
        ]
      },
      "values": {
        "type": "number",
        "description": "Value for all calls",
        "format": "double"
      }
    },
    "description": "Data for all calls",
    "name": "AllCalls"
  },
  {
    "description": "This grouping allows to specify the `groupByMembers` option. The response data will be grouped by users and will only include users that belong to the scope selected in `groupByMembers` field",
    "name": "Grouping",
    "required": [
      "groupBy",
      "groupByMembers"
    ],
    "type": "object",
    "properties": {
      "groupBy": {
        "type": "string",
        "description": "The selected grouping option",
        "enum": [
          "Company",
          "CompanyNumbers",
          "Users",
          "Queues",
          "IVRs",
          "SharedLines",
          "UserGroups",
          "Sites",
          "Departments"
        ]
      },
      "keys": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "This field can be used to further limit the users selection by specifying unique identifiers of corresponding entities. For example, providing unique queue ids along with `Queue` in `groupByMembers` field will limit the response to users that are queue agents in at least one of these queues"
      },
      "groupByMembers": {
        "type": "string",
        "description": "The selected data scope",
        "enum": [
          "Department",
          "UserGroup",
          "Queue",
          "Site"
        ]
      }
    }
  },
  {
    "type": "object",
    "properties": {
      "allCalls": {
        "required": [
          "aggregationType"
        ],
        "description": "Aggregation of all calls count",
        "$ref": "#/components/schemas/AggregationResponseOptionsCountersAllCalls"
      },
      "callsByDirection": {
        "required": [
          "aggregationType"
        ],
        "description": "Aggregation of calls count by direction (Inbound, Outbound)",
        "$ref": "#/components/schemas/AggregationResponseOptionsCountersCallsByDirection"
      },
      "callsByOrigin": {
        "required": [
          "aggregationType"
        ],
        "description": "Aggregation of calls count by origin (Internal, External)",
        "$ref": "#/components/schemas/AggregationResponseOptionsCountersCallsByOrigin"
      },
      "callsByResponse": {
        "required": [
          "aggregationType"
        ],
        "description": "Aggregation of calls count by response (Answered, NotAnswered, Connected, NotConnected)",
        "$ref": "#/components/schemas/AggregationResponseOptionsCountersCallsByResponse"
      },
      "callsSegments": {
        "required": [
          "aggregationType"
        ],
        "description": "Aggregation of calls count by segments (Ringing, LiveTalk, Hold, Park, Transfer, IvrPrompt, Voicemail, VmGreeting, Setup)",
        "$ref": "#/components/schemas/AggregationResponseOptionsCountersCallsSegments"
      },
      "callsByResult": {
        "required": [
          "aggregationType"
        ],
        "description": "Aggregation of calls count by result (Completed, Abandoned, Voicemail, Unknown, Missed, Accepted)",
        "$ref": "#/components/schemas/AggregationResponseOptionsCountersCallsByResult"
      },
      "callsByCompanyHours": {
        "required": [
          "aggregationType"
        ],
        "description": "Aggregation of calls count by company hours (BusinessHours, AfterHours)",
        "$ref": "#/components/schemas/AggregationResponseOptionsCountersCallsByCompanyHours"
      },
      "callsByQueueSla": {
        "required": [
          "aggregationType"
        ],
        "description": "Aggregation of calls count by queue SLA (InSLA, OutSLA). This counter is only applicable to Queues grouping",
        "$ref": "#/components/schemas/AggregationResponseOptionsCountersCallsByQueueSla"
      },
      "callsByActions": {
        "required": [
          "aggregationType"
        ],
        "description": "Aggregation of calls count by action (HoldOff, HoldOn, ParkOn, ParkOff, BlindTransfer, WarmTransfer, DTMFTransfer)",
        "$ref": "#/components/schemas/AggregationResponseOptionsCountersCallsByActions"
      },
      "callsByType": {
        "required": [
          "aggregationType"
        ],
        "description": "Aggregation of calls count by type (Direct, FromQueue, ParkRetrieval, Transferred, Outbound)",
        "$ref": "#/components/schemas/AggregationResponseOptionsCountersCallsByType"
      },
      "queueOpportunities": {
        "required": [
          "aggregationType"
        ],
        "description": "Aggregation of calls count by the total number of times a Queue call was presented to the user. It is limited to `groupBy` Users and `groupByMembers` (Department, Queue, Site, UserGroup) grouping. Only the listed below options for call filters are applicable to `queueOpportunities` and provide meaningful results: `queues` (selected queue extension ids), `callResults` (Missed, Abandoned), `callResponses` (Answered, NotAnswered), `origins` (Internal, External)",
        "$ref": "#/components/schemas/AggregationResponseOptionsCountersQueueOpportunities"
      }
    },
    "description": "The formula is defined by `aggregationType` and `aggregationInterval` for every counter individually.\nIf `aggregationType` is `Sum` or `Percent`, `aggregationInterval` is not supported.\nIf `aggregationType` is `Min`, `Max` or `Average`, `aggregationInterval` is required",
    "name": "AggregationResponseOptionsCounters"
  },
  {
    "type": "object",
    "properties": {
      "allCallsDuration": {
        "required": [
          "aggregationType"
        ],
        "description": "Aggregation of all calls duration",
        "$ref": "#/components/schemas/AggregationResponseOptionsTimersAllCallsDuration"
      },
      "callsDurationByDirection": {
        "required": [
          "aggregationType"
        ],
        "description": "Aggregation of calls duration by direction (Inbound, Outbound)",
        "$ref": "#/components/schemas/AggregationResponseOptionsTimersCallsDurationByDirection"
      },
      "callsDurationByOrigin": {
        "required": [
          "aggregationType"
        ],
        "description": "Aggregation of calls duration by origin (Internal, External)",
        "$ref": "#/components/schemas/AggregationResponseOptionsTimersCallsDurationByOrigin"
      },
      "callsDurationByResponse": {
        "required": [
          "aggregationType"
        ],
        "description": "Aggregation of calls duration by response (Answered, NotAnswered, Connected, NotConnected)",
        "$ref": "#/components/schemas/AggregationResponseOptionsTimersCallsDurationByResponse"
      },
      "callsSegmentsDuration": {
        "required": [
          "aggregationType"
        ],
        "description": "Aggregation of calls duration by segments (Ringing, LiveTalk, Hold, Park, Transfer, IvrPrompt, Voicemail, VmGreeting, Setup)",
        "$ref": "#/components/schemas/AggregationResponseOptionsTimersCallsSegmentsDuration"
      },
      "callsDurationByResult": {
        "required": [
          "aggregationType"
        ],
        "description": "Aggregation of calls duration by result (Completed, Abandoned, Voicemail, Unknown, Missed, Accepted)",
        "$ref": "#/components/schemas/AggregationResponseOptionsTimersCallsDurationByResult"
      },
      "callsDurationByCompanyHours": {
        "required": [
          "aggregationType"
        ],
        "description": "Aggregation of calls duration by company hours (BusinessHours, AfterHours)",
        "$ref": "#/components/schemas/AggregationResponseOptionsTimersCallsDurationByCompanyHours"
      },
      "callsDurationByQueueSla": {
        "required": [
          "aggregationType"
        ],
        "description": "Aggregation of calls duration by queue SLA (InSLA, OutSLA). This timer is only applicable to Queues grouping",
        "$ref": "#/components/schemas/AggregationResponseOptionsTimersCallsDurationByQueueSla"
      },
      "callsDurationByType": {
        "required": [
          "aggregationType"
        ],
        "description": "Aggregation of calls duration by type (Direct, FromQueue, ParkRetrieval, Transferred, Outbound)",
        "$ref": "#/components/schemas/AggregationResponseOptionsTimersCallsDurationByType"
      }
    },
    "description": "The formula is defined by `aggregationType` and `aggregationInterval` for every timer individually.\nIf `aggregationType` is `Sum` or `Percent`, `aggregationInterval` is not supported.\nIf `aggregationType` is `Min`, `Max` or `Average`, `aggregationInterval` is supported, but not required.\nIf left empty, aggregation will be performed on per-call basis",
    "name": "AggregationResponseOptionsTimers"
  },
  {
    "type": "object",
    "properties": {
      "minSeconds": {
        "type": "integer",
        "description": "Minimum duration in seconds",
        "format": "int64"
      },
      "maxSeconds": {
        "type": "integer",
        "description": "Maximum duration in seconds",
        "format": "int64"
      }
    },
    "description": "Filtering of calls based on the time spent by specified mailbox(es) on call",
    "name": "TimeSpentFilter"
  },
  {
    "required": [
      "paging",
      "data"
    ],
    "type": "object",
    "properties": {
      "paging": {
        "$ref": "#/components/schemas/ResponsePaging"
      },
      "data": {
        "$ref": "#/components/schemas/AggregationResponseData"
      }
    },
    "name": "AggregationResponse"
  },
  {
    "required": [
      "valueType",
      "values"
    ],
    "type": "object",
    "properties": {
      "valueType": {
        "type": "string",
        "description": "Unit of the result value",
        "enum": [
          "Percent",
          "Seconds",
          "Instances"
        ]
      },
      "values": {
        "$ref": "#/components/schemas/CallsByOriginBreakdown"
      }
    },
    "description": "Data for calls with breakdown by origin (Internal, External)",
    "name": "CallsByOrigin"
  },
  {
    "type": "object",
    "properties": {
      "errors": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/ErrorBody"
        },
        "description": "List of errors"
      }
    },
    "name": "Forbidden"
  },
  {
    "type": "object",
    "properties": {
      "extensionFilters": {
        "$ref": "#/components/schemas/ExtensionFilters"
      },
      "queues": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "List of queues extension ids which allows to get data only for calls that were routed through any of these queues"
      },
      "calledNumbers": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "The direct company numbers the caller called (joined via OR)"
      },
      "directions": {
        "type": "array",
        "items": {
          "type": "string",
          "enum": [
            "Inbound",
            "Outbound"
          ]
        },
        "description": "Specifies the call directions relative to the scope specified in grouping object (joined via OR). Not applicable to internal origin calls with company scope"
      },
      "origins": {
        "type": "array",
        "items": {
          "type": "string",
          "enum": [
            "Internal",
            "External"
          ]
        },
        "description": "Specifies whether an external party was present in the initial segment of the call (joined via OR)"
      },
      "callResponses": {
        "type": "array",
        "items": {
          "type": "string",
          "enum": [
            "Answered",
            "NotAnswered",
            "Connected",
            "NotConnected"
          ]
        },
        "description": "Filtering of calls by first response (joined via OR)"
      },
      "callResults": {
        "type": "array",
        "items": {
          "type": "string",
          "enum": [
            "Completed",
            "Abandoned",
            "Voicemail",
            "Unknown",
            "Missed",
            "Accepted"
          ]
        },
        "description": "Filtering of calls by the nature of call result (joined via OR)"
      },
      "callSegments": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/CallSegmentFilter"
        },
        "description": "Filtering of calls by presence of specific segment (joined via OR)"
      },
      "callActions": {
        "type": "array",
        "items": {
          "type": "string",
          "enum": [
            "HoldOff",
            "HoldOn",
            "ParkOn",
            "ParkOff",
            "BlindTransfer",
            "WarmTransfer",
            "DTMFTransfer"
          ]
        },
        "description": "Filtering of calls by presence of specific action (joined via OR)"
      },
      "companyHours": {
        "type": "array",
        "items": {
          "type": "string",
          "enum": [
            "BusinessHours",
            "AfterHours"
          ]
        },
        "description": "Filtering of calls by company's business hours or after hours (joined via OR)"
      },
      "callDuration": {
        "$ref": "#/components/schemas/CallDurationFilter"
      },
      "timeSpent": {
        "$ref": "#/components/schemas/TimeSpentFilter"
      },
      "queueSla": {
        "type": "array",
        "items": {
          "type": "string",
          "enum": [
            "InSla",
            "OutSla"
          ]
        },
        "description": "Filtering calls that were within or out of queue SLA (joined via OR). Only applicable to Queues grouping"
      },
      "callTypes": {
        "type": "array",
        "items": {
          "type": "string",
          "enum": [
            "Direct",
            "FromQueue",
            "ParkRetrieval",
            "Transferred",
            "Outbound",
            "Overflow"
          ]
        },
        "description": "Filtering of calls based on how the call started from the callee perspective (joined via OR). If the call is outbound relative to the grouping scope, CallType is Outbound"
      }
    },
    "description": "Optional filters that limit the scope of calls (joined via AND)",
    "name": "CallFilters"
  },
  {
    "type": "object",
    "properties": {
      "counters": {
        "$ref": "#/components/schemas/AggregationResponseOptionsCounters"
      },
      "timers": {
        "$ref": "#/components/schemas/AggregationResponseOptionsTimers"
      }
    },
    "description": "This field provides mapping of possible breakdown options for call aggregation and aggregation formula",
    "name": "AggregationResponseOptions"
  },
  {
    "type": "object",
    "properties": {
      "errors": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/ErrorBody"
        },
        "description": "List of errors"
      }
    },
    "name": "InternalError"
  },
  {
    "required": [
      "inbound",
      "outbound"
    ],
    "type": "object",
    "properties": {
      "inbound": {
        "type": "number",
        "description": "Value for Inbound direction",
        "format": "double"
      },
      "outbound": {
        "type": "number",
        "description": "Value for Outbound direction",
        "format": "double"
      }
    },
    "description": "Result breakdown by direction",
    "name": "CallsByDirectionBreakdown"
  },
  {
    "required": [
      "grouping",
      "timeSettings",
      "responseOptions"
    ],
    "type": "object",
    "properties": {
      "grouping": {
        "$ref": "#/components/schemas/Grouping"
      },
      "timeSettings": {
        "$ref": "#/components/schemas/TimeSettings"
      },
      "callFilters": {
        "$ref": "#/components/schemas/CallFilters"
      },
      "responseOptions": {
        "$ref": "#/components/schemas/AggregationResponseOptions"
      }
    },
    "name": "AggregationRequest"
  },
  {
    "type": "object",
    "properties": {
      "minSeconds": {
        "type": "integer",
        "description": "Minimum duration of segment in seconds",
        "format": "int64"
      },
      "maxSeconds": {
        "type": "integer",
        "description": "Maximum duration of segment in seconds",
        "format": "int64"
      }
    },
    "description": "Duration bounds for the segment",
    "name": "CallSegmentLengthFilter"
  },
  {
    "required": [
      "valueType",
      "values"
    ],
    "type": "object",
    "properties": {
      "valueType": {
        "type": "string",
        "description": "Unit of the result value",
        "enum": [
          "Percent",
          "Seconds",
          "Instances"
        ]
      },
      "values": {
        "$ref": "#/components/schemas/CallsByQueueSlaBreakdown"
      }
    },
    "description": "Data for calls with breakdown by queue SLA (InSLA, OutSLA). This counter is only applicable to Queues grouping",
    "name": "CallsByQueueSla"
  },
  {
    "required": [
      "from",
      "to"
    ],
    "type": "object",
    "properties": {
      "from": {
        "type": "string",
        "description": "Time in format hh:mm"
      },
      "to": {
        "type": "string",
        "description": "Time in format hh:mm"
      }
    },
    "name": "HoursInterval"
  },
  {
    "required": [
      "groupedBy"
    ],
    "type": "object",
    "properties": {
      "groupedBy": {
        "type": "string",
        "description": "The selected grouping option",
        "enum": [
          "Company",
          "CompanyNumbers",
          "Users",
          "Queues",
          "IVRs",
          "SharedLines",
          "UserGroups",
          "Sites",
          "Departments"
        ]
      },
      "records": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/AggregationResponseRecord"
        },
        "description": "A list of call aggregations as per the grouping and filtering options specified in the request"
      }
    },
    "description": "Aggregation result",
    "name": "AggregationResponseData"
  },
  {
    "required": [
      "page",
      "perPage",
      "totalPages",
      "totalElements"
    ],
    "type": "object",
    "properties": {
      "page": {
        "type": "integer",
        "description": "The current page number",
        "format": "int64"
      },
      "perPage": {
        "type": "integer",
        "description": "How many items are displayed on the page",
        "format": "int64"
      },
      "totalPages": {
        "type": "integer",
        "description": "The total number of pages",
        "format": "int64"
      },
      "totalElements": {
        "type": "integer",
        "description": "The total number of items in the dataset",
        "format": "int64"
      }
    },
    "description": "Paging information",
    "name": "ResponsePaging"
  },
  {
    "required": [
      "parkOn",
      "parkOff",
      "holdOn",
      "holdOff",
      "blindTransfer",
      "warmTransfer",
      "dtmfTransfer"
    ],
    "type": "object",
    "properties": {
      "parkOn": {
        "type": "number",
        "description": "Value for ParkOn action",
        "format": "double"
      },
      "parkOff": {
        "type": "number",
        "description": "Value for ParkOff action",
        "format": "double"
      },
      "holdOn": {
        "type": "number",
        "description": "Value for HoldOn action",
        "format": "double"
      },
      "holdOff": {
        "type": "number",
        "description": "Value for HoldOff action",
        "format": "double"
      },
      "blindTransfer": {
        "type": "number",
        "description": "Value for BlindTransfer action",
        "format": "double"
      },
      "warmTransfer": {
        "type": "number",
        "description": "Value for WarmTransfer action",
        "format": "double"
      },
      "dtmfTransfer": {
        "type": "number",
        "description": "Value for DTMFTransfer action",
        "format": "double"
      }
    },
    "description": "Result breakdown by actions",
    "name": "CallsByActionsBreakdown"
  },
  {
    "type": "object",
    "properties": {
      "fromIds": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "List of extension ids to match against incoming calls, joined via OR condition. Only applicable for `groupByMembers` options and Users, IVRs, SharedLines and Queues in `groupBy`"
      },
      "toIds": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "List of extension ids to match against outgoing calls, joined via OR condition. Limited to the extension id that first accepted the call. Only applicable for `groupByMembers` options and Users, IVRs and SharedLines in `groupBy`"
      }
    },
    "description": "Specifies filtering based on extension ids",
    "name": "ExtensionFilters"
  },
  {
    "required": [
      "answered",
      "notAnswered",
      "connected",
      "notConnected"
    ],
    "type": "object",
    "properties": {
      "answered": {
        "type": "number",
        "description": "Value for Answered response",
        "format": "double"
      },
      "notAnswered": {
        "type": "number",
        "description": "Value for NotAnswered response",
        "format": "double"
      },
      "connected": {
        "type": "number",
        "description": "Value for Connected response",
        "format": "double"
      },
      "notConnected": {
        "type": "number",
        "description": "Value for NotConnected response",
        "format": "double"
      }
    },
    "description": "Result breakdown by response",
    "name": "CallsByResponseBreakdown"
  },
  {
    "type": "object",
    "properties": {
      "errors": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/ErrorBody"
        },
        "description": "List of errors"
      }
    },
    "name": "BadRequest"
  },
  {
    "required": [
      "segment"
    ],
    "type": "object",
    "properties": {
      "segment": {
        "type": "string",
        "description": "Call segment for filtering",
        "enum": [
          "Ringing",
          "LiveTalk",
          "Hold",
          "Park",
          "Transfer",
          "IvrPrompt",
          "Voicemail",
          "VmGreeting",
          "Setup"
        ]
      },
      "length": {
        "$ref": "#/components/schemas/CallSegmentLengthFilter"
      }
    },
    "name": "CallSegmentFilter"
  },
  {
    "required": [
      "groupByMembers"
    ],
    "type": "object",
    "properties": {
      "groupByMembers": {
        "type": "string",
        "description": "The selected data scope",
        "enum": [
          "Department",
          "UserGroup",
          "Queue",
          "Site"
        ]
      },
      "keys": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "This field can be used to further limit the users selection by specifying unique identifiers of corresponding entities. For example, providing unique queue ids along with `Queue` in `groupByMembers` field will limit the response to users that are queue agents in at least one of these queues"
      }
    },
    "description": "This grouping allows to specify the `groupByMembers` option. The response data will be grouped by users and will only include users that belong to the scope selected in `groupByMembers` field",
    "name": "GroupingByMembers"
  },
  {
    "required": [
      "completed",
      "abandoned",
      "voicemail",
      "missed",
      "accepted",
      "unknown"
    ],
    "type": "object",
    "properties": {
      "completed": {
        "type": "number",
        "description": "Value for Completed result",
        "format": "double"
      },
      "abandoned": {
        "type": "number",
        "description": "Value for Abandoned result",
        "format": "double"
      },
      "voicemail": {
        "type": "number",
        "description": "Value for Voicemail result",
        "format": "double"
      },
      "missed": {
        "type": "number",
        "description": "Value for Missed result",
        "format": "double"
      },
      "accepted": {
        "type": "number",
        "description": "Value for Accepted result",
        "format": "double"
      },
      "unknown": {
        "type": "number",
        "description": "Value for Unknown result",
        "format": "double"
      }
    },
    "description": "Result breakdown by call result",
    "name": "CallsByResultBreakdown"
  },
  {
    "required": [
      "valueType",
      "values"
    ],
    "type": "object",
    "properties": {
      "valueType": {
        "type": "string",
        "description": "Unit of the result value",
        "enum": [
          "Percent",
          "Seconds",
          "Instances"
        ]
      },
      "values": {
        "$ref": "#/components/schemas/CallsByCompanyHoursBreakdown"
      }
    },
    "description": "Data for calls with breakdown by company hours (BusinessHours, AfterHours)",
    "name": "CallsByCompanyHours"
  },
  {
    "required": [
      "businessHours",
      "afterHours"
    ],
    "type": "object",
    "properties": {
      "businessHours": {
        "type": "number",
        "description": "Value for BusinessHours company hours",
        "format": "double"
      },
      "afterHours": {
        "type": "number",
        "description": "Value for AfterHours company hours",
        "format": "double"
      }
    },
    "description": "Result breakdown by company hours",
    "name": "CallsByCompanyHoursBreakdown"
  },
  {
    "type": "object",
    "properties": {
      "minSeconds": {
        "type": "integer",
        "description": "Minimum duration of call in seconds",
        "format": "int64"
      },
      "maxSeconds": {
        "type": "integer",
        "description": "Maximum duration of call in seconds",
        "format": "int64"
      }
    },
    "description": "Filtering of calls based on the overall call length",
    "name": "CallDurationFilter"
  },
  {
    "required": [
      "inSla",
      "outOfSla"
    ],
    "type": "object",
    "properties": {
      "inSla": {
        "type": "number",
        "description": "Value for InSla queue SLA",
        "format": "double"
      },
      "outOfSla": {
        "type": "number",
        "description": "Value for OutSla queue SLA",
        "format": "double"
      }
    },
    "description": "Result breakdown by queue SLA",
    "name": "CallsByQueueSlaBreakdown"
  },
  {
    "required": [
      "valueType",
      "values"
    ],
    "type": "object",
    "properties": {
      "valueType": {
        "type": "string",
        "description": "Unit of the result value",
        "enum": [
          "Percent",
          "Seconds",
          "Instances"
        ]
      },
      "values": {
        "$ref": "#/components/schemas/CallsBySegmentsBreakdown"
      }
    },
    "description": "Data for calls with breakdown by segments (Ringing, LiveTalk, Hold, Park, Transfer, IvrPrompt, Voicemail, VmGreeting, Setup)",
    "name": "CallsBySegments"
  },
  {
    "required": [
      "direct",
      "fromQueue",
      "parkRetrieval",
      "transferred",
      "outbound",
      "overflow"
    ],
    "type": "object",
    "properties": {
      "direct": {
        "type": "number",
        "description": "Value for Direct type",
        "format": "double"
      },
      "fromQueue": {
        "type": "number",
        "description": "Value for FromQueue type",
        "format": "double"
      },
      "parkRetrieval": {
        "type": "number",
        "description": "Value for ParkRetrieval type",
        "format": "double"
      },
      "transferred": {
        "type": "number",
        "description": "Value for Transferred type",
        "format": "double"
      },
      "outbound": {
        "type": "number",
        "description": "Value for Outbound type",
        "format": "double"
      },
      "overflow": {
        "type": "number",
        "description": "Value for Overflow type",
        "format": "double"
      }
    },
    "description": "Result breakdown by type",
    "name": "CallsByTypeBreakdown"
  },
  {
    "required": [
      "valueType",
      "values"
    ],
    "type": "object",
    "properties": {
      "valueType": {
        "type": "string",
        "description": "Unit of the result value",
        "enum": [
          "Percent",
          "Seconds",
          "Instances"
        ]
      },
      "values": {
        "$ref": "#/components/schemas/CallsByTypeBreakdown"
      }
    },
    "description": "Data for calls with breakdown by type (Direct, FromQueue, ParkRetrieval, Transferred, Outbound, Overflow)",
    "name": "CallsByType"
  },
  {
    "required": [
      "ringing",
      "liveTalk",
      "hold",
      "park",
      "transfer",
      "ivrPrompt",
      "voicemail",
      "vmGreeting",
      "setup"
    ],
    "type": "object",
    "properties": {
      "ringing": {
        "type": "number",
        "description": "Value for Ringing segment",
        "format": "double"
      },
      "liveTalk": {
        "type": "number",
        "description": "Value for LiveTalk segment",
        "format": "double"
      },
      "hold": {
        "type": "number",
        "description": "Value for Hold segment",
        "format": "double"
      },
      "park": {
        "type": "number",
        "description": "Value for Park segment",
        "format": "double"
      },
      "transfer": {
        "type": "number",
        "description": "Value for Transfer segment",
        "format": "double"
      },
      "ivrPrompt": {
        "type": "number",
        "description": "Value for IVRPrompt segment",
        "format": "double"
      },
      "voicemail": {
        "type": "number",
        "description": "Value for Voicemail segment",
        "format": "double"
      },
      "vmGreeting": {
        "type": "number",
        "description": "Value for VMGreeting segment",
        "format": "double"
      },
      "setup": {
        "type": "number",
        "description": "Value for Setup segment",
        "format": "double"
      }
    },
    "description": "Result breakdown by segments",
    "name": "CallsBySegmentsBreakdown"
  },
  {
    "required": [
      "key"
    ],
    "type": "object",
    "properties": {
      "key": {
        "type": "string",
        "description": "Grouping key"
      },
      "info": {
        "$ref": "#/components/schemas/KeyInfo"
      },
      "timers": {
        "$ref": "#/components/schemas/CallsTimers"
      },
      "counters": {
        "$ref": "#/components/schemas/CallsCounters"
      }
    },
    "name": "AggregationResponseRecord"
  },
  {
    "required": [
      "errorCode",
      "message"
    ],
    "type": "object",
    "properties": {
      "errorCode": {
        "type": "string",
        "description": "ANL error code"
      },
      "message": {
        "type": "string",
        "description": "Detailed description of the error"
      }
    },
    "name": "ErrorBody"
  },
  {
    "type": "object",
    "properties": {
      "extensionNumber": {
        "type": "string",
        "description": "Extension's number"
      },
      "name": {
        "type": "string",
        "description": "Extension's name"
      }
    },
    "description": "Additional info about the key",
    "name": "KeyInfo"
  },
  {
    "type": "object",
    "properties": {
      "allCalls": {
        "$ref": "#/components/schemas/AllCalls"
      },
      "callsByDirection": {
        "$ref": "#/components/schemas/CallsByDirection"
      },
      "callsByOrigin": {
        "$ref": "#/components/schemas/CallsByOrigin"
      },
      "callsByResponse": {
        "$ref": "#/components/schemas/CallsByResponse"
      },
      "callsSegments": {
        "$ref": "#/components/schemas/CallsBySegments"
      },
      "callsByResult": {
        "$ref": "#/components/schemas/CallsByResult"
      },
      "callsByCompanyHours": {
        "$ref": "#/components/schemas/CallsByCompanyHours"
      },
      "callsByQueueSla": {
        "$ref": "#/components/schemas/CallsByQueueSla"
      },
      "callsByType": {
        "$ref": "#/components/schemas/CallsByType"
      }
    },
    "description": "Call length data for the specified grouping",
    "name": "CallsTimers"
  },
  {
    "required": [
      "timeFrom",
      "timeTo"
    ],
    "type": "object",
    "properties": {
      "timeFrom": {
        "type": "string",
        "description": "The start date-time for resulting records in RFC 3339 format including offset between local time and UTC, for example 2016-03-15T18:07:52.534Z",
        "format": "date-time"
      },
      "timeTo": {
        "type": "string",
        "description": "The end date-time for resulting records in RFC 3339 format including offset between local time and UTC, for example 2016-03-15T18:07:52.534Z",
        "format": "date-time"
      }
    },
    "description": "Time range for the request",
    "name": "TimeRange"
  },
  {
    "required": [
      "time"
    ],
    "type": "object",
    "properties": {
      "time": {
        "type": "string",
        "description": "Time point in RFC 3339 format",
        "format": "date-time"
      },
      "timers": {
        "$ref": "#/components/schemas/CallsTimers"
      },
      "counters": {
        "$ref": "#/components/schemas/CallsCounters"
      }
    },
    "name": "TimelineResponsePoint"
  },
  {
    "required": [
      "paging",
      "data"
    ],
    "type": "object",
    "properties": {
      "paging": {
        "$ref": "#/components/schemas/ResponsePaging"
      },
      "data": {
        "$ref": "#/components/schemas/TimelineResponseData"
      }
    },
    "name": "TimelineResponse"
  },
  {
    "type": "object",
    "properties": {
      "counters": {
        "$ref": "#/components/schemas/TimelineResponseOptionsCounters"
      },
      "timers": {
        "$ref": "#/components/schemas/TimelineResponseOptionsTimers"
      }
    },
    "description": "Counters and timers options for calls breakdown",
    "name": "TimelineResponseOptions"
  },
  {
    "type": "object",
    "properties": {
      "allCallsDuration": {
        "type": "boolean",
        "description": "Include data for all calls duration"
      },
      "callsDurationByDirection": {
        "type": "boolean",
        "description": "Include breakdown of calls duration by direction (Inbound, Outbound)"
      },
      "callsDurationByOrigin": {
        "type": "boolean",
        "description": "Include breakdown of calls duration by origin (Internal, External)"
      },
      "callsDurationByResponse": {
        "type": "boolean",
        "description": "Include breakdown of calls duration by response (Answered, NotAnswered, Connected, NotConnected)"
      },
      "callsSegmentsDuration": {
        "type": "boolean",
        "description": "Include breakdown of calls duration by segments (Ringing, LiveTalk, Hold, Park, Transfer, IvrPrompt, Voicemail, VmGreeting, Setup)"
      },
      "callsDurationByResult": {
        "type": "boolean",
        "description": "Include breakdown of calls duration by result (Completed, Abandoned, Voicemail, Unknown, Missed, Accepted)"
      },
      "callsDurationByCompanyHours": {
        "type": "boolean",
        "description": "Include breakdown of calls duration by company hours (BusinessHours, AfterHours)"
      },
      "callsDurationByQueueSla": {
        "type": "boolean",
        "description": "Include breakdown of calls duration by queue SLA (InSLA, OutSLA). This timer is only applicable to Queues grouping"
      },
      "callsDurationByType": {
        "type": "boolean",
        "description": "Include breakdown of calls duration by type (Direct, FromQueue, ParkRetrieval, Transferred, Outbound)"
      }
    },
    "description": "Options for selecting breakdown for calls duration",
    "name": "TimelineResponseOptionsTimers"
  },
  {
    "required": [
      "key"
    ],
    "type": "object",
    "properties": {
      "key": {
        "type": "string",
        "description": "Grouping key"
      },
      "info": {
        "$ref": "#/components/schemas/KeyInfo"
      },
      "points": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/TimelineResponsePoint"
        },
        "description": "List of requested call data time-value points"
      }
    },
    "name": "TimelineResponseRecord"
  },
  {
    "type": "object",
    "properties": {
      "allCalls": {
        "type": "boolean",
        "description": "Include data for total calls count"
      },
      "callsByDirection": {
        "type": "boolean",
        "description": "Include breakdown of calls count by direction (Inbound, Outbound)"
      },
      "callsByOrigin": {
        "type": "boolean",
        "description": "Include breakdown of calls count by origin (Internal, External)"
      },
      "callsByResponse": {
        "type": "boolean",
        "description": "Include breakdown of calls count by response (Answered, NotAnswered, Connected, NotConnected)"
      },
      "callsSegments": {
        "type": "boolean",
        "description": "Include breakdown of calls count by segments (Ringing, LiveTalk, Hold, Park, Transfer, IvrPrompt, Voicemail, VmGreeting, Setup)"
      },
      "callsByResult": {
        "type": "boolean",
        "description": "Include breakdown of calls count by result (Completed, Abandoned, Voicemail, Unknown, Missed, Accepted)"
      },
      "callsByCompanyHours": {
        "type": "boolean",
        "description": "Include breakdown of calls count by company hours (BusinessHours, AfterHours)"
      },
      "callsByQueueSla": {
        "type": "boolean",
        "description": "Include breakdown of calls count by queue SLA (InSLA, OutSLA). This counter is only applicable to Queues grouping"
      },
      "callsByActions": {
        "type": "boolean",
        "description": "Include breakdown of calls count by action (HoldOff, HoldOn, ParkOn, ParkOff, BlindTransfer, WarmTransfer, DTMFTransfer)"
      },
      "callsByType": {
        "type": "boolean",
        "description": "Include breakdown of calls count by type (Direct, FromQueue, ParkRetrieval, Transferred, Outbound)"
      },
      "queueOpportunities": {
        "type": "boolean",
        "description": "Include breakdown of calls count by the total number of times a Queue call was presented to the user. It is limited to `groupBy` Users and `groupByMembers` (Department, Queue, Site, UserGroup) grouping. Only the listed below options for call filters are applicable to `queueOpportunities` and provide meaningful results: `queues` (selected queue extension ids), `callResults` (Missed, Abandoned), `callResponses` (Answered, NotAnswered), `origins` (Internal, External)"
      }
    },
    "description": "Options for selecting breakdown for calls count",
    "name": "TimelineResponseOptionsCounters"
  },
  {
    "required": [
      "grouping",
      "timeSettings",
      "responseOptions"
    ],
    "type": "object",
    "properties": {
      "grouping": {
        "$ref": "#/components/schemas/Grouping"
      },
      "timeSettings": {
        "$ref": "#/components/schemas/TimeSettings"
      },
      "callFilters": {
        "$ref": "#/components/schemas/CallFilters"
      },
      "responseOptions": {
        "$ref": "#/components/schemas/TimelineResponseOptions"
      }
    },
    "name": "TimelineRequest"
  },
  {
    "required": [
      "groupedBy"
    ],
    "type": "object",
    "properties": {
      "groupedBy": {
        "type": "string",
        "description": "The selected grouping option",
        "enum": [
          "Company",
          "CompanyNumbers",
          "Users",
          "Queues",
          "IVRs",
          "SharedLines",
          "UserGroups",
          "Sites",
          "Departments"
        ]
      },
      "records": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/TimelineResponseRecord"
        },
        "description": "List of call data as per the grouping and filtering options specified in the request"
      }
    },
    "description": "A list of time-value points of call data as per the grouping and filtering options specified in the request",
    "name": "TimelineResponseData"
  },
  {
    "type": "object",
    "properties": {
      "telephonySessionId": {
        "type": "string",
        "description": "Internal Identifier of Telephony Session, which belongs to transfer target in case of Warm Transfer"
      }
    },
    "name": "CompanyCallLogRecordTransferTarget"
  },
  {
    "type": "object",
    "properties": {
      "telephonySessionId": {
        "type": "string",
        "description": "Internal Identifier of Telephony Session, which belongs to transferee in case of Warm Transfer"
      }
    },
    "name": "CompanyCallLogRecordTransferee"
  },
  {
    "type": "object",
    "properties": {
      "telephonySessionId": {
        "type": "string",
        "description": "Internal Identifier of Telephony Session, which belongs to transfer target in case of Warm Transfer"
      }
    },
    "name": "CallLogRecordLegInfoTransferTarget"
  },
  {
    "type": "object",
    "properties": {
      "telephonySessionId": {
        "type": "string",
        "description": "Internal Identifier of Telephony Session, which belongs to transferee in case of Warm Transfer"
      }
    },
    "name": "CallLogRecordLegInfoTransferee"
  },
  {
    "type": "object",
    "properties": {
      "successful": {
        "type": "array",
        "description": "Recipients' phone numbers which opt-ins were successfully added for.",
        "items": {
          "type": "string"
        },
        "example": [
          "+15551237799"
        ]
      },
      "failed": {
        "type": "array",
        "description": "Recipients' phone numbers which opt-ins were failed to be added for. Plus, error messages",
        "items": {
          "$ref": "#/components/schemas/OptOutBulkAssignFailedEntry"
        },
        "example": [
          {
            "to": "+15551237798",
            "errorMessage": "Unexpected issue on removing an opt-out from bulk-assign request"
          }
        ]
      }
    },
    "name": "OptOutBulkAssignResponseOptIns"
  },
  {
    "type": "object",
    "properties": {
      "successful": {
        "type": "array",
        "description": "Recipients' phone numbers which opt-outs were successfully added for.",
        "items": {
          "type": "string"
        },
        "example": [
          "+15551237755"
        ]
      },
      "failed": {
        "type": "array",
        "description": "Recipients' phone numbers which opt-outs were failed to be added for. Plus, error messages",
        "items": {
          "$ref": "#/components/schemas/OptOutBulkAssignFailedEntry"
        },
        "example": [
          {
            "to": "+15551237756",
            "errorMessage": "Unexpected issue on creating an opt-out from bulk-assign request"
          }
        ]
      }
    },
    "name": "OptOutBulkAssignResponseOptOuts"
  },
  {
    "type": "object",
    "properties": {
      "telephonySessionId": {
        "type": "string",
        "description": "Internal Identifier of Telephony Session, which belongs to transfer target in case of Warm Transfer"
      }
    },
    "name": "CallLogRecordTransferTarget"
  },
  {
    "type": "object",
    "properties": {
      "telephonySessionId": {
        "type": "string",
        "description": "Internal Identifier of Telephony Session, which belongs to transferee in case of Warm Transfer"
      }
    },
    "name": "CallLogRecordTransferee"
  },
  {
    "type": "object",
    "properties": {
      "telephonySessionId": {
        "type": "string",
        "description": "Internal Identifier of Telephony Session, which belongs to transfer target in case of Warm Transfer"
      }
    },
    "name": "UserCallLogRecordTransferTarget"
  },
  {
    "type": "object",
    "properties": {
      "telephonySessionId": {
        "type": "string",
        "description": "Internal Identifier of Telephony Session, which belongs to transferee in case of Warm Transfer"
      }
    },
    "name": "UserCallLogRecordTransferee"
  },
  {
    "type": "object",
    "properties": {
      "blacklistedAt": {
        "type": "string",
        "format": "date-time",
        "description": "Time of adding subscription to a black list in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601)\nformat including timezone, for example *2016-03-10T18:07:52.534Z*\n"
      },
      "reason": {
        "type": "string",
        "description": "Reason of adding subscription to a black list"
      }
    },
    "name": "SubscriptionInfoBlacklistedData"
  },
  {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "Internal identifier of a country"
      },
      "name": {
        "type": "string",
        "description": "Official name of a country"
      }
    },
    "name": "ContractedCountryListResponseRecords"
  },
  {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "Assignee Id"
      }
    },
    "name": "TMUpdateTaskRequestAssignees"
  },
  {
    "type": "object",
    "properties": {
      "schedule": {
        "type": "string",
        "description": "Task recurrence settings.",
        "default": "None",
        "enum": [
          "None",
          "Daily",
          "Weekdays",
          "Weekly",
          "Monthly",
          "Yearly"
        ]
      },
      "endingCondition": {
        "type": "string",
        "description": "Task ending condition.",
        "enum": [
          "None",
          "Count",
          "Date"
        ]
      },
      "endingAfter": {
        "maximum": 10,
        "minimum": 1,
        "type": "integer",
        "format": "int32",
        "description": "Count of iterations of periodic tasks."
      },
      "endingOn": {
        "type": "string",
        "description": "The end date of periodic task in UTC time zone.",
        "format": "date-time"
      }
    },
    "name": "TMUpdateTaskRequestRecurrence"
  },
  {
    "type": "object",
    "properties": {},
    "name": "TMTaskListRecords"
  },
  {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "Creator Id"
      }
    },
    "name": "TMTaskInfoCreator"
  },
  {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "Assignee Id"
      },
      "status": {
        "type": "string",
        "description": "Task execution status by assignee",
        "enum": [
          "Pending",
          "Completed"
        ]
      }
    },
    "name": "TMTaskInfoAssignees"
  },
  {
    "type": "object",
    "properties": {
      "schedule": {
        "type": "string",
        "description": "Task recurrence settings. None for non-periodic tasks.",
        "enum": [
          "None",
          "Daily",
          "Weekdays",
          "Weekly",
          "Monthly",
          "Yearly"
        ]
      },
      "endingCondition": {
        "type": "string",
        "description": "Task ending condition.",
        "enum": [
          "None",
          "Count",
          "Date"
        ]
      },
      "endingAfter": {
        "maximum": 10,
        "minimum": 1,
        "type": "integer",
        "format": "int32",
        "description": "Count of iterations of periodic tasks."
      },
      "endingOn": {
        "type": "string",
        "description": "End date of periodic task.",
        "format": "date-time"
      }
    },
    "name": "TMTaskInfoRecurrence"
  },
  {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "Assignee Id"
      }
    },
    "name": "TMCompleteTaskRequestAssignees"
  },
  {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "Assignee Id"
      }
    },
    "name": "TMCreateTaskRequestAssignees"
  },
  {
    "type": "object",
    "properties": {
      "schedule": {
        "type": "string",
        "description": "Task recurrence settings.",
        "default": "None",
        "enum": [
          "None",
          "Daily",
          "Weekdays",
          "Weekly",
          "Monthly",
          "Yearly"
        ]
      },
      "endingCondition": {
        "type": "string",
        "description": "Task ending condition.",
        "default": "None",
        "enum": [
          "None",
          "Count",
          "Date"
        ]
      },
      "endingAfter": {
        "maximum": 10,
        "minimum": 1,
        "type": "integer",
        "format": "int32",
        "description": "Count of iterations of periodic tasks."
      },
      "endingOn": {
        "type": "string",
        "description": "The end date of periodic task in UTC time zone.",
        "format": "date-time"
      }
    },
    "name": "TMCreateTaskRequestRecurrence"
  },
  {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "Internal identifier of a person"
      },
      "email": {
        "type": "string",
        "format": "email",
        "description": "Email of a person"
      }
    },
    "name": "CreateConversationRequestMembers"
  },
  {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "Internal identifier of a person"
      },
      "email": {
        "type": "string",
        "format": "email",
        "description": "Email of a person"
      }
    },
    "name": "TMCreateTeamRequestMembers"
  },
  {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "Internal identifier of a person"
      }
    },
    "name": "TMRemoveTeamMembersRequestMembers"
  },
  {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "Internal identifier of a person"
      },
      "email": {
        "type": "string",
        "format": "email",
        "description": "Email of a person"
      }
    },
    "name": "TMAddTeamMembersRequestMembers"
  },
  {
    "type": "object",
    "properties": {
      "aggregationType": {
        "$ref": "#/components/schemas/AggregationType"
      },
      "aggregationInterval": {
        "$ref": "#/components/schemas/AggregationInterval"
      }
    },
    "name": "AggregationResponseOptionsCountersAllCalls"
  },
  {
    "type": "object",
    "properties": {
      "aggregationType": {
        "$ref": "#/components/schemas/AggregationType"
      },
      "aggregationInterval": {
        "$ref": "#/components/schemas/AggregationInterval"
      }
    },
    "name": "AggregationResponseOptionsCountersCallsByDirection"
  },
  {
    "type": "object",
    "properties": {
      "aggregationType": {
        "$ref": "#/components/schemas/AggregationType"
      },
      "aggregationInterval": {
        "$ref": "#/components/schemas/AggregationInterval"
      }
    },
    "name": "AggregationResponseOptionsCountersCallsByOrigin"
  },
  {
    "type": "object",
    "properties": {
      "aggregationType": {
        "$ref": "#/components/schemas/AggregationType"
      },
      "aggregationInterval": {
        "$ref": "#/components/schemas/AggregationInterval"
      }
    },
    "name": "AggregationResponseOptionsCountersCallsByResponse"
  },
  {
    "type": "object",
    "properties": {
      "aggregationType": {
        "$ref": "#/components/schemas/AggregationType"
      },
      "aggregationInterval": {
        "$ref": "#/components/schemas/AggregationInterval"
      }
    },
    "name": "AggregationResponseOptionsCountersCallsSegments"
  },
  {
    "type": "object",
    "properties": {
      "aggregationType": {
        "$ref": "#/components/schemas/AggregationType"
      },
      "aggregationInterval": {
        "$ref": "#/components/schemas/AggregationInterval"
      }
    },
    "name": "AggregationResponseOptionsCountersCallsByResult"
  },
  {
    "type": "object",
    "properties": {
      "aggregationType": {
        "$ref": "#/components/schemas/AggregationType"
      },
      "aggregationInterval": {
        "$ref": "#/components/schemas/AggregationInterval"
      }
    },
    "name": "AggregationResponseOptionsCountersCallsByCompanyHours"
  },
  {
    "type": "object",
    "properties": {
      "aggregationType": {
        "$ref": "#/components/schemas/AggregationType"
      },
      "aggregationInterval": {
        "$ref": "#/components/schemas/AggregationInterval"
      }
    },
    "name": "AggregationResponseOptionsCountersCallsByQueueSla"
  },
  {
    "type": "object",
    "properties": {
      "aggregationType": {
        "$ref": "#/components/schemas/AggregationType"
      },
      "aggregationInterval": {
        "$ref": "#/components/schemas/AggregationInterval"
      }
    },
    "name": "AggregationResponseOptionsCountersCallsByActions"
  },
  {
    "type": "object",
    "properties": {
      "aggregationType": {
        "$ref": "#/components/schemas/AggregationType"
      },
      "aggregationInterval": {
        "$ref": "#/components/schemas/AggregationInterval"
      }
    },
    "name": "AggregationResponseOptionsCountersCallsByType"
  },
  {
    "type": "object",
    "properties": {
      "aggregationType": {
        "$ref": "#/components/schemas/QueueOpportunitiesAggregationType"
      }
    },
    "name": "AggregationResponseOptionsCountersQueueOpportunities"
  },
  {
    "type": "object",
    "properties": {
      "aggregationType": {
        "$ref": "#/components/schemas/AggregationType"
      },
      "aggregationInterval": {
        "$ref": "#/components/schemas/AggregationInterval"
      }
    },
    "name": "AggregationResponseOptionsTimersAllCallsDuration"
  },
  {
    "type": "object",
    "properties": {
      "aggregationType": {
        "$ref": "#/components/schemas/AggregationType"
      },
      "aggregationInterval": {
        "$ref": "#/components/schemas/AggregationInterval"
      }
    },
    "name": "AggregationResponseOptionsTimersCallsDurationByDirection"
  },
  {
    "type": "object",
    "properties": {
      "aggregationType": {
        "$ref": "#/components/schemas/AggregationType"
      },
      "aggregationInterval": {
        "$ref": "#/components/schemas/AggregationInterval"
      }
    },
    "name": "AggregationResponseOptionsTimersCallsDurationByOrigin"
  },
  {
    "type": "object",
    "properties": {
      "aggregationType": {
        "$ref": "#/components/schemas/AggregationType"
      },
      "aggregationInterval": {
        "$ref": "#/components/schemas/AggregationInterval"
      }
    },
    "name": "AggregationResponseOptionsTimersCallsDurationByResponse"
  },
  {
    "type": "object",
    "properties": {
      "aggregationType": {
        "$ref": "#/components/schemas/AggregationType"
      },
      "aggregationInterval": {
        "$ref": "#/components/schemas/AggregationInterval"
      }
    },
    "name": "AggregationResponseOptionsTimersCallsSegmentsDuration"
  },
  {
    "type": "object",
    "properties": {
      "aggregationType": {
        "$ref": "#/components/schemas/AggregationType"
      },
      "aggregationInterval": {
        "$ref": "#/components/schemas/AggregationInterval"
      }
    },
    "name": "AggregationResponseOptionsTimersCallsDurationByResult"
  },
  {
    "type": "object",
    "properties": {
      "aggregationType": {
        "$ref": "#/components/schemas/AggregationType"
      },
      "aggregationInterval": {
        "$ref": "#/components/schemas/AggregationInterval"
      }
    },
    "name": "AggregationResponseOptionsTimersCallsDurationByCompanyHours"
  },
  {
    "type": "object",
    "properties": {
      "aggregationType": {
        "$ref": "#/components/schemas/AggregationType"
      },
      "aggregationInterval": {
        "$ref": "#/components/schemas/AggregationInterval"
      }
    },
    "name": "AggregationResponseOptionsTimersCallsDurationByQueueSla"
  },
  {
    "type": "object",
    "properties": {
      "aggregationType": {
        "$ref": "#/components/schemas/AggregationType"
      },
      "aggregationInterval": {
        "$ref": "#/components/schemas/AggregationInterval"
      }
    },
    "name": "AggregationResponseOptionsTimersCallsDurationByType"
  },
  {
    "name": "FaxReceiver",
    "type": "object",
    "description": "Fax receiver",
    "properties": {
      "phoneNumber": {
        "type": "string",
        "description": "Phone number in E.164 format"
      },
      "name": {
        "type": "string",
        "description": "Name of the receiver"
      }
    }
  },
  {
    "type": "object",
    "name": "GreetingAnsweringRuleId",
    "description": "Greeting's answering rule id",
    "properties": {
      "id": {
        "type": "string",
        "description": "Internal identifier of an answering rule"
      }
    }
  }
]